<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title><![CDATA[Xuanwo's Blog]]></title>
  <subtitle><![CDATA[A Long Way to Go]]></subtitle>
  <link href="/atom.xml" rel="self"/>
  <link href="http://xuanwo.tk//"/>
  <updated>2014-07-23T15:15:33.068Z</updated>
  <id>http://xuanwo.tk//</id>
  
  <author>
    <name><![CDATA[Xuanwo]]></name>
    <email><![CDATA[vars.cn@gmail.com]]></email>
  </author>
  
  <generator uri="http://zespia.tw/hexo/">Hexo</generator>
  
  <entry>
    <title><![CDATA[POJ 1401 Factorial]]></title>
    <link href="http://xuanwo.tk/2014/07/23/POJ-1401-Factorial/"/>
    <id>http://xuanwo.tk/2014/07/23/POJ-1401-Factorial/</id>
    <published>2014-07-23T06:48:05.000Z</published>
    <updated>2014-07-23T07:01:02.087Z</updated>
    <content type="html"><![CDATA[<h1 id="题目">题目</h1>
<p>源地址：<a href="http://poj.org/problem?id=1401" target="_blank" rel="external">http://poj.org/problem?id=1401</a></p>
<h1 id="理解">理解</h1>
<p>一开始惊讶地发现，每个数除以4之后都跟答案比较接近，然后打算开始偷鸡，结果失败了= =。实际上，是每一个数不停地除以5，寻找10的因子的过程。</p>
<a id="more"></a>

<h1 id="代码">代码</h1>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div></pre></td><td class="code"><pre><div class="line"><span class="preprocessor">#<span class="keyword">include</span> &lt;iostream&gt;</span></div><div class="line"></div><div class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</div><div class="line"></div><div class="line"><span class="keyword">int</span> main()</div><div class="line">{</div><div class="line">    <span class="keyword">int</span> T;</div><div class="line">    <span class="built_in">cin</span> &gt;&gt; T;</div><div class="line">    <span class="keyword">long</span> <span class="keyword">long</span> <span class="keyword">int</span>  N;</div><div class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; T; i++)</div><div class="line">    {</div><div class="line">        <span class="built_in">cin</span> &gt;&gt; N;</div><div class="line">        <span class="keyword">int</span> ret = <span class="number">0</span>;</div><div class="line">        <span class="keyword">while</span> (N)</div><div class="line">        {</div><div class="line">            ret = ret + N / <span class="number">5</span>;</div><div class="line">            N = N / <span class="number">5</span>;</div><div class="line">        }</div><div class="line">        <span class="built_in">cout</span> &lt;&lt; ret &lt;&lt; endl;</div><div class="line">    }</div><div class="line">    <span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">}</div></pre></td></tr></table></figure>

<h1 id="更新日志">更新日志</h1>
<ul>
<li>2014年07月23日 已AC。</li>
</ul>
]]></content>
    <summary type="html"><![CDATA[<h1 id="题目">题目</h1>
<p>源地址：<a href="http://poj.org/problem?id=1401" target="_blank" rel="external">http://poj.org/problem?id=1401</a></p>
<h1 id="理解">理解</h1>
<p>一开始惊讶地发现，每个数除以4之后都跟答案比较接近，然后打算开始偷鸡，结果失败了= =。实际上，是每一个数不停地除以5，寻找10的因子的过程。</p>
]]></summary>
    
      <category term="ACM" scheme="http://xuanwo.tk/tags/ACM/"/>
    
      <category term="POJ" scheme="http://xuanwo.tk/tags/POJ/"/>
    
      <category term="C/C++" scheme="http://xuanwo.tk/tags/CC++/"/>
    
      <category term="数论" scheme="http://xuanwo.tk/tags/%E6%95%B0%E8%AE%BA/"/>
    
      <category term="Exercise" scheme="http://xuanwo.tk/categories/Exercise/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[POJ 1326 Mileage Bank]]></title>
    <link href="http://xuanwo.tk/2014/07/23/POJ-1326-Mileage-Bank/"/>
    <id>http://xuanwo.tk/2014/07/23/POJ-1326-Mileage-Bank/</id>
    <published>2014-07-23T06:10:08.000Z</published>
    <updated>2014-07-23T06:11:54.531Z</updated>
    <content type="html"><![CDATA[<h1 id="题目">题目</h1>
<p>源地址：<a href="http://poj.org/problem?id=1326" target="_blank" rel="external">http://poj.org/problem?id=1326</a></p>
<h1 id="理解">理解</h1>
<p>题目倒是不难，但是这个输入真的是。。。。</p>
<a id="more"></a>

<h1 id="代码">代码</h1>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div></pre></td><td class="code"><pre><div class="line"><span class="preprocessor">#<span class="keyword">include</span> &lt;iostream&gt;</span></div><div class="line"><span class="preprocessor">#<span class="keyword">include</span> &lt;cstring&gt;</span></div><div class="line"><span class="preprocessor">#<span class="keyword">include</span> &lt;cstdio&gt;</span></div><div class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</div><div class="line"></div><div class="line"><span class="keyword">char</span> temp1[<span class="number">100</span>], temp2[<span class="number">100</span>], a[<span class="number">2</span>];</div><div class="line"></div><div class="line"><span class="keyword">int</span> s, sum;</div><div class="line"></div><div class="line"><span class="keyword">int</span> main(<span class="keyword">int</span> argc, <span class="keyword">char</span> <span class="keyword">const</span> *argv[])</div><div class="line">{</div><div class="line">    <span class="keyword">while</span> (<span class="number">1</span>)</div><div class="line">    {</div><div class="line">        sum = <span class="number">0</span>;</div><div class="line">        <span class="keyword">while</span> (<span class="number">1</span>)</div><div class="line">        {</div><div class="line">            <span class="built_in">scanf</span>(<span class="string">"%s"</span>, temp1);</div><div class="line">            <span class="keyword">if</span> (temp1[<span class="number">0</span>] == <span class="string">'0'</span>)</div><div class="line">                <span class="keyword">break</span>;</div><div class="line">            <span class="keyword">if</span> (temp1[<span class="number">0</span>] == <span class="string">'#'</span>)</div><div class="line">                <span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">            <span class="built_in">scanf</span>(<span class="string">"%s%d%s"</span>, temp2, &s, a);</div><div class="line"></div><div class="line">            <span class="keyword">if</span> (a[<span class="number">0</span>] == <span class="string">'F'</span>)</div><div class="line">                sum += s * <span class="number">2</span>;</div><div class="line">            <span class="keyword">else</span> <span class="keyword">if</span> (a[<span class="number">0</span>] == <span class="string">'Y'</span>)</div><div class="line">            {</div><div class="line">                <span class="keyword">if</span> (s &lt;= <span class="number">500</span>)</div><div class="line">                    sum += <span class="number">500</span>;</div><div class="line">                <span class="keyword">else</span></div><div class="line">                    sum += s;</div><div class="line">            }</div><div class="line">            <span class="keyword">else</span> <span class="keyword">if</span> (a[<span class="number">0</span>] == <span class="string">'B'</span>)</div><div class="line">                sum += s * <span class="number">1.5</span> + <span class="number">0.5</span>;</div><div class="line">        }</div><div class="line">        <span class="built_in">cout</span> &lt;&lt; sum &lt;&lt; endl;</div><div class="line">    }</div><div class="line">    <span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">}</div></pre></td></tr></table></figure>

<h1 id="更新日志">更新日志</h1>
<ul>
<li>2014年07月23日 已AC。</li>
</ul>
]]></content>
    <summary type="html"><![CDATA[<h1 id="题目">题目</h1>
<p>源地址：<a href="http://poj.org/problem?id=1326" target="_blank" rel="external">http://poj.org/problem?id=1326</a></p>
<h1 id="理解">理解</h1>
<p>题目倒是不难，但是这个输入真的是。。。。</p>
]]></summary>
    
      <category term="ACM" scheme="http://xuanwo.tk/tags/ACM/"/>
    
      <category term="POJ" scheme="http://xuanwo.tk/tags/POJ/"/>
    
      <category term="C/C++" scheme="http://xuanwo.tk/tags/CC++/"/>
    
      <category term="简单计算" scheme="http://xuanwo.tk/tags/%E7%AE%80%E5%8D%95%E8%AE%A1%E7%AE%97/"/>
    
      <category term="Exercise" scheme="http://xuanwo.tk/categories/Exercise/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[POJ 1061 青蛙的约会]]></title>
    <link href="http://xuanwo.tk/2014/07/23/POJ-1061-Date-of-Frogs/"/>
    <id>http://xuanwo.tk/2014/07/23/POJ-1061-Date-of-Frogs/</id>
    <published>2014-07-23T05:49:00.000Z</published>
    <updated>2014-07-23T05:52:48.903Z</updated>
    <content type="html"><![CDATA[<h1 id="题目">题目</h1>
<p>源地址：<a href="http://poj.org/problem?id=1061" target="_blank" rel="external">http://poj.org/problem?id=1061</a></p>
<h1 id="理解">理解</h1>
<p>扩展欧几里德方程的模板体。当初没有做出来，现在好像明白一点了。</p>
<a id="more"></a>

<h1 id="新技能get">新技能get</h1>
<p><code>扩展欧几里德方程</code>解法</p>
<blockquote>
<p>设标准方程式为： a<em>x +b</em>y =d   (a,b已知)</p>
<ol>
<li>首先求出gcd(a,b) ，然后化简方程，使得a/=gcd(a,b); b/=gcd(a,b); d/=gcd(a,b);</li>
<li>先求出 a<em>x+b</em>y=gcd(a,b) 的一组特解，也就是方程 a<em>x+b</em>y=1 的一个特解。然后将特解（x0, y0） 代入方程，并变形： a<em> x0 </em>d + b<em> y0 </em>d= d </li>
<li>根据解系的 公式： x =x1 + b<em> t ; y =y1 - a </em>t; 我们首先假设他最小的解x=0 ，然后求出 此时的 t=-x1/b; 然后带入求最小的解x=x1+b<em>t=x1 - b</em>t ;因为此时的t为 负数， 减去他的 负数，就是等于加上他。</li>
</ol>
</blockquote>
<h1 id="代码">代码</h1>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div></pre></td><td class="code"><pre><div class="line"><span class="preprocessor">#<span class="keyword">include</span> &lt;iostream&gt;</span></div><div class="line"><span class="preprocessor">#<span class="keyword">include</span> &lt;cmath&gt;</span></div><div class="line"><span class="preprocessor">#<span class="keyword">include</span> &lt;cstdio&gt;</span></div><div class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</div><div class="line"></div><div class="line"></div><div class="line"><span class="keyword">long</span> <span class="keyword">long</span> x, y, m, n, l;</div><div class="line"><span class="keyword">long</span> <span class="keyword">long</span> a, b, d, k, s, t;</div><div class="line"></div><div class="line"><span class="keyword">long</span> <span class="keyword">long</span> gcd(<span class="keyword">long</span> <span class="keyword">long</span> a, <span class="keyword">long</span> <span class="keyword">long</span> b)</div><div class="line">{</div><div class="line">    <span class="keyword">long</span> <span class="keyword">long</span> c;</div><div class="line">    <span class="keyword">if</span> (a &lt; b)</div><div class="line">    {</div><div class="line">        c = a;    a = b;</div><div class="line">        b = c;</div><div class="line">    }</div><div class="line">    <span class="keyword">while</span> (b)</div><div class="line">    {</div><div class="line">        c = b;</div><div class="line">        b = a % b;</div><div class="line">        a = c;</div><div class="line">    }</div><div class="line">    <span class="keyword">return</span> a;</div><div class="line">}</div><div class="line"></div><div class="line"><span class="keyword">long</span> <span class="keyword">long</span> extended_gcd(<span class="keyword">long</span> <span class="keyword">long</span> a, <span class="keyword">long</span> <span class="keyword">long</span> b, <span class="keyword">long</span> <span class="keyword">long</span> &x, <span class="keyword">long</span> <span class="keyword">long</span> &y)</div><div class="line">{</div><div class="line">    <span class="keyword">long</span> <span class="keyword">long</span> ans, t;</div><div class="line">    <span class="keyword">if</span> (b == <span class="number">0</span>)</div><div class="line">    {</div><div class="line">        x = <span class="number">1</span>;    y = <span class="number">0</span>;</div><div class="line">        <span class="keyword">return</span> a;</div><div class="line">    }</div><div class="line">    <span class="keyword">else</span></div><div class="line">    {</div><div class="line">        ans = extended_gcd(b, a % b, x, y);</div><div class="line">        t = x;    x = y;</div><div class="line">        y = t - (a / b) * y;</div><div class="line">    }</div><div class="line">    <span class="keyword">return</span> ans;</div><div class="line">}</div><div class="line"></div><div class="line"><span class="keyword">int</span> main(<span class="keyword">int</span> argc, <span class="keyword">char</span> <span class="keyword">const</span> *argv[])</div><div class="line">{</div><div class="line">    <span class="keyword">while</span> (<span class="built_in">scanf</span>(<span class="string">"%lld %lld %lld %lld %lld"</span>, &x, &y, &m, &n, &l) != EOF)</div><div class="line">    {</div><div class="line">        a = n - m;</div><div class="line">        b = l;</div><div class="line">        d = x - y;</div><div class="line">        <span class="keyword">long</span> <span class="keyword">long</span> r = gcd(a, b);</div><div class="line">        <span class="keyword">if</span> (d % r != <span class="number">0</span>)</div><div class="line">        {</div><div class="line">            <span class="built_in">printf</span>(<span class="string">"Impossible\n"</span>);</div><div class="line">            <span class="keyword">continue</span>;</div><div class="line">        }</div><div class="line">        a /= r;</div><div class="line">        b /= r;</div><div class="line">        d /= r;</div><div class="line">        extended_gcd(a, b, s, k);</div><div class="line">        s = s * d;</div><div class="line">        k = k * d;</div><div class="line">        t = s / b;</div><div class="line">        s = s - t * b;</div><div class="line">        <span class="keyword">if</span> (s &lt; <span class="number">0</span>)</div><div class="line">            s += b;</div><div class="line">        <span class="built_in">printf</span>(<span class="string">"%lld\n"</span>, s);</div><div class="line">    }</div><div class="line">    <span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">}</div></pre></td></tr></table></figure>

<h1 id="更新日志">更新日志</h1>
<ul>
<li>2014年07月23日 已AC。</li>
</ul>
]]></content>
    <summary type="html"><![CDATA[<h1 id="题目">题目</h1>
<p>源地址：<a href="http://poj.org/problem?id=1061" target="_blank" rel="external">http://poj.org/problem?id=1061</a></p>
<h1 id="理解">理解</h1>
<p>扩展欧几里德方程的模板体。当初没有做出来，现在好像明白一点了。</p>
]]></summary>
    
      <category term="ACM" scheme="http://xuanwo.tk/tags/ACM/"/>
    
      <category term="POJ" scheme="http://xuanwo.tk/tags/POJ/"/>
    
      <category term="C/C++" scheme="http://xuanwo.tk/tags/CC++/"/>
    
      <category term="数论" scheme="http://xuanwo.tk/tags/%E6%95%B0%E8%AE%BA/"/>
    
      <category term="Exercise" scheme="http://xuanwo.tk/categories/Exercise/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[POJ 1318 Word Amalgamation]]></title>
    <link href="http://xuanwo.tk/2014/07/23/POJ-1318-Word-Amalgamation/"/>
    <id>http://xuanwo.tk/2014/07/23/POJ-1318-Word-Amalgamation/</id>
    <published>2014-07-23T05:38:41.000Z</published>
    <updated>2014-07-23T05:41:11.327Z</updated>
    <content type="html"><![CDATA[<h1 id="题目">题目</h1>
<p>源地址：<a href="http://poj.org/problem?id=1318" target="_blank" rel="external">http://poj.org/problem?id=1318</a></p>
<h1 id="理解">理解</h1>
<p>一开始的思路有点偏，想要单纯的使用string类的compare函数来解决问题。但是稍微考虑一下之后发现，复杂度有点高。事实上，我根本就不需要知道它们是不是匹配，只要排序之后匹配即可。</p>
<a id="more"></a>

<h1 id="代码">代码</h1>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div></pre></td><td class="code"><pre><div class="line"><span class="preprocessor">#<span class="keyword">include</span> &lt;iostream&gt;</span></div><div class="line"><span class="preprocessor">#<span class="keyword">include</span> &lt;algorithm&gt;</span></div><div class="line"><span class="preprocessor">#<span class="keyword">include</span> &lt;string&gt;</span></div><div class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</div><div class="line"><span class="preprocessor">#<span class="keyword">define</span> MAX 105</span></div><div class="line"></div><div class="line"><span class="built_in">string</span> dic[MAX], out[MAX], tmp;</div><div class="line"><span class="keyword">int</span> n, i;</div><div class="line"><span class="keyword">int</span> flag;</div><div class="line"></div><div class="line"><span class="keyword">int</span> main(<span class="keyword">int</span> argc, <span class="keyword">char</span> <span class="keyword">const</span> *argv[])</div><div class="line">{</div><div class="line">    <span class="keyword">while</span> (<span class="built_in">cin</span> &gt;&gt; dic[i] && dic[i][<span class="number">0</span>] != <span class="string">'X'</span>)  i++;</div><div class="line">    sort(dic, dic + i);</div><div class="line">    n = i;</div><div class="line">    <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; n; i++)</div><div class="line">    {</div><div class="line">        out[i] = dic[i];</div><div class="line">        sort(dic[i].begin(), dic[i].end());</div><div class="line">    }</div><div class="line">    <span class="keyword">while</span> (<span class="built_in">cin</span> &gt;&gt; tmp)</div><div class="line">    {</div><div class="line">        <span class="keyword">if</span> (tmp[<span class="number">0</span>] == <span class="string">'X'</span>)   <span class="keyword">break</span>;</div><div class="line">        flag = <span class="number">0</span>;</div><div class="line">        sort(tmp.begin(), tmp.end());</div><div class="line">        <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; n; i++)</div><div class="line">        {</div><div class="line">            <span class="keyword">if</span> (tmp == dic[i])</div><div class="line">            {</div><div class="line">                flag = <span class="number">1</span>;</div><div class="line">                <span class="built_in">cout</span> &lt;&lt; out[i] &lt;&lt; endl;</div><div class="line">            }</div><div class="line">        }</div><div class="line">        <span class="keyword">if</span> (flag == <span class="number">0</span>)</div><div class="line">            <span class="built_in">cout</span> &lt;&lt; <span class="string">"NOT A VALID WORD"</span> &lt;&lt; endl;</div><div class="line">        <span class="built_in">cout</span> &lt;&lt; <span class="string">"******"</span> &lt;&lt; endl;</div><div class="line">    }</div><div class="line">    <span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">}</div></pre></td></tr></table></figure>

<h1 id="更新日志">更新日志</h1>
<ul>
<li>2014年07月23日 已AC。</li>
</ul>
]]></content>
    <summary type="html"><![CDATA[<h1 id="题目">题目</h1>
<p>源地址：<a href="http://poj.org/problem?id=1318" target="_blank" rel="external">http://poj.org/problem?id=1318</a></p>
<h1 id="理解">理解</h1>
<p>一开始的思路有点偏，想要单纯的使用string类的compare函数来解决问题。但是稍微考虑一下之后发现，复杂度有点高。事实上，我根本就不需要知道它们是不是匹配，只要排序之后匹配即可。</p>
]]></summary>
    
      <category term="ACM" scheme="http://xuanwo.tk/tags/ACM/"/>
    
      <category term="POJ" scheme="http://xuanwo.tk/tags/POJ/"/>
    
      <category term="C/C++" scheme="http://xuanwo.tk/tags/CC++/"/>
    
      <category term="字符串" scheme="http://xuanwo.tk/tags/%E5%AD%97%E7%AC%A6%E4%B8%B2/"/>
    
      <category term="Exercise" scheme="http://xuanwo.tk/categories/Exercise/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[POJ 1316 Self Numbers]]></title>
    <link href="http://xuanwo.tk/2014/07/23/POJ-1316-Self-Numbers/"/>
    <id>http://xuanwo.tk/2014/07/23/POJ-1316-Self-Numbers/</id>
    <published>2014-07-22T18:43:24.000Z</published>
    <updated>2014-07-22T18:44:25.240Z</updated>
    <content type="html"><![CDATA[<h1 id="题目">题目</h1>
<p>源地址：<a href="http://poj.org/problem?id=1316" target="_blank" rel="external">http://poj.org/problem?id=1316</a></p>
<h1 id="理解">理解</h1>
<p>水题，开一个数组模拟，水过～</p>
<a id="more"></a>

<h1 id="代码">代码</h1>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div></pre></td><td class="code"><pre><div class="line"><span class="preprocessor">#<span class="keyword">include</span> &lt;stdio.h&gt;</span></div><div class="line"></div><div class="line"><span class="keyword">int</span> data[<span class="number">10010</span>] = {<span class="number">0</span>};</div><div class="line"></div><div class="line"><span class="keyword">int</span> sum(<span class="keyword">int</span> num)</div><div class="line">{</div><div class="line">    <span class="keyword">int</span> ans = <span class="number">0</span>;</div><div class="line">    <span class="keyword">while</span> (num &gt; <span class="number">0</span>)</div><div class="line">    {</div><div class="line">        ans += num % <span class="number">10</span>;</div><div class="line">        num /= <span class="number">10</span>;</div><div class="line">    }</div><div class="line">    <span class="keyword">return</span> ans;</div><div class="line">}</div><div class="line"></div><div class="line"><span class="keyword">int</span> main(<span class="keyword">int</span> argc, <span class="keyword">char</span> <span class="keyword">const</span> *argv[])</div><div class="line">{</div><div class="line">    <span class="keyword">int</span> i = <span class="number">0</span>;</div><div class="line">    <span class="keyword">for</span> (i = <span class="number">1</span>; i &lt; <span class="number">10001</span>; ++i)</div><div class="line">    {</div><div class="line">        data[i + sum(i)] = <span class="number">1</span>;</div><div class="line">    }</div><div class="line">    <span class="keyword">for</span> (i = <span class="number">1</span>; i &lt; <span class="number">10001</span>; ++i)</div><div class="line">    {</div><div class="line">        <span class="keyword">if</span> (!data[i])</div><div class="line">        {</div><div class="line">            <span class="built_in">printf</span>(<span class="string">"%d\n"</span>, i);</div><div class="line">        }</div><div class="line">    }</div><div class="line">}</div></pre></td></tr></table></figure>

<h1 id="更新日志">更新日志</h1>
<ul>
<li>2014年07月23日 已AC。</li>
</ul>
]]></content>
    <summary type="html"><![CDATA[<h1 id="题目">题目</h1>
<p>源地址：<a href="http://poj.org/problem?id=1316" target="_blank" rel="external">http://poj.org/problem?id=1316</a></p>
<h1 id="理解">理解</h1>
<p>水题，开一个数组模拟，水过～</p>
]]></summary>
    
      <category term="ACM" scheme="http://xuanwo.tk/tags/ACM/"/>
    
      <category term="POJ" scheme="http://xuanwo.tk/tags/POJ/"/>
    
      <category term="C/C++" scheme="http://xuanwo.tk/tags/CC++/"/>
    
      <category term="模拟" scheme="http://xuanwo.tk/tags/%E6%A8%A1%E6%8B%9F/"/>
    
      <category term="Exercise" scheme="http://xuanwo.tk/categories/Exercise/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[POJ 1298 史上最难的问题]]></title>
    <link href="http://xuanwo.tk/2014/07/23/POJ-1298-The-Hardest-Problem-Ever/"/>
    <id>http://xuanwo.tk/2014/07/23/POJ-1298-The-Hardest-Problem-Ever/</id>
    <published>2014-07-22T18:35:36.000Z</published>
    <updated>2014-07-22T18:39:13.048Z</updated>
    <content type="html"><![CDATA[<h1 id="题目">题目</h1>
<p>源地址：<a href="http://poj.org/problem?id=1298" target="_blank" rel="external">http://poj.org/problem?id=1298</a></p>
<h1 id="理解">理解</h1>
<p>问题的纠结之处在于编译器根本就不给<code>gets</code>和<code>puts</code>改过自新的机会，调试花了很久= =。恩，我也应该培养避免使用这些函数的习惯。回到题目上来，题意还是比较清楚的，向后移动五位即可。</p>
<a id="more"></a>

<h1 id="代码">代码</h1>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div></pre></td><td class="code"><pre><div class="line"><span class="preprocessor">#<span class="keyword">include</span> &lt;stdio.h&gt;</span></div><div class="line"><span class="preprocessor">#<span class="keyword">include</span> &lt;stdlib.h&gt;</span></div><div class="line"><span class="preprocessor">#<span class="keyword">include</span> &lt;string.h&gt;</span></div><div class="line"><span class="keyword">int</span> main()</div><div class="line">{</div><div class="line">    <span class="keyword">char</span> *p, cipher[<span class="number">128</span>];</div><div class="line">    gets(cipher);</div><div class="line">    <span class="keyword">while</span> (<span class="built_in">strcmp</span>(cipher, <span class="string">"ENDOFINPUT"</span>))</div><div class="line">    {</div><div class="line">        <span class="keyword">if</span> (!<span class="built_in">strcmp</span>(cipher, <span class="string">"START"</span>))</div><div class="line">        {</div><div class="line">            gets(cipher);</div><div class="line">            <span class="keyword">while</span> (<span class="built_in">strcmp</span>(cipher, <span class="string">"END"</span>))</div><div class="line">            {</div><div class="line">                <span class="keyword">for</span> (p = cipher; *p; ++p)</div><div class="line">                {</div><div class="line">                    <span class="keyword">if</span> (<span class="string">'A'</span> &lt;= *p && *p &lt;= <span class="string">'Z'</span>)</div><div class="line">                    {</div><div class="line">                        *p = *p &lt; <span class="string">'F'</span> ? <span class="number">21</span> + *p : *p - <span class="number">5</span>;</div><div class="line">                    }</div><div class="line">                    <span class="built_in">putchar</span>(*p);</div><div class="line">                }</div><div class="line">                gets(cipher);</div><div class="line">            }</div><div class="line">            <span class="built_in">putchar</span>(<span class="string">'\n'</span>);</div><div class="line">        }</div><div class="line">        gets(cipher);</div><div class="line">    }</div><div class="line">    <span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">}</div></pre></td></tr></table></figure>

<h1 id="更新日志">更新日志</h1>
<ul>
<li>2014年07月23日 已AC。</li>
</ul>
]]></content>
    <summary type="html"><![CDATA[<h1 id="题目">题目</h1>
<p>源地址：<a href="http://poj.org/problem?id=1298" target="_blank" rel="external">http://poj.org/problem?id=1298</a></p>
<h1 id="理解">理解</h1>
<p>问题的纠结之处在于编译器根本就不给<code>gets</code>和<code>puts</code>改过自新的机会，调试花了很久= =。恩，我也应该培养避免使用这些函数的习惯。回到题目上来，题意还是比较清楚的，向后移动五位即可。</p>
]]></summary>
    
      <category term="ACM" scheme="http://xuanwo.tk/tags/ACM/"/>
    
      <category term="POJ" scheme="http://xuanwo.tk/tags/POJ/"/>
    
      <category term="C/C++" scheme="http://xuanwo.tk/tags/CC++/"/>
    
      <category term="字符串" scheme="http://xuanwo.tk/tags/%E5%AD%97%E7%AC%A6%E4%B8%B2/"/>
    
      <category term="Exercise" scheme="http://xuanwo.tk/categories/Exercise/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[POJ 1256 Anagram]]></title>
    <link href="http://xuanwo.tk/2014/07/23/POJ-1256-Anagram/"/>
    <id>http://xuanwo.tk/2014/07/23/POJ-1256-Anagram/</id>
    <published>2014-07-22T18:07:50.000Z</published>
    <updated>2014-07-22T18:09:29.752Z</updated>
    <content type="html"><![CDATA[<h1 id="题目">题目</h1>
<p>源地址：<a href="http://poj.org/problem?id=1256" target="_blank" rel="external">http://poj.org/problem?id=1256</a></p>
<h1 id="理解">理解</h1>
<p>再次遇到一道使用<code>next_permutation</code>的题目，不过这一次需要针对题目的给出的条件重新写一个<code>cmp</code>函数。</p>
<a id="more"></a>

<h1 id="代码">代码</h1>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div></pre></td><td class="code"><pre><div class="line"><span class="preprocessor">#<span class="keyword">include</span> &lt;cstdio&gt;</span></div><div class="line"><span class="preprocessor">#<span class="keyword">include</span> &lt;iostream&gt;</span></div><div class="line"><span class="preprocessor">#<span class="keyword">include</span> &lt;algorithm&gt;</span></div><div class="line"><span class="preprocessor">#<span class="keyword">include</span> &lt;string&gt;</span></div><div class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</div><div class="line"></div><div class="line"><span class="keyword">bool</span> cmp(<span class="keyword">char</span> a, <span class="keyword">char</span> b)</div><div class="line">{</div><div class="line">    <span class="keyword">if</span> (<span class="built_in">tolower</span>(a) == <span class="built_in">tolower</span>(b))</div><div class="line">        <span class="keyword">return</span> a &lt; b;</div><div class="line">    <span class="keyword">else</span></div><div class="line">        <span class="keyword">return</span> <span class="built_in">tolower</span>(a) &lt; <span class="built_in">tolower</span>(b);</div><div class="line">}</div><div class="line"></div><div class="line"><span class="keyword">int</span> main()</div><div class="line">{</div><div class="line">    <span class="keyword">int</span> t;</div><div class="line">    <span class="built_in">cin</span> &gt;&gt; t;</div><div class="line">    <span class="keyword">while</span> (t--)</div><div class="line">    {</div><div class="line">        <span class="built_in">string</span> str;</div><div class="line">        <span class="built_in">cin</span> &gt;&gt; str;</div><div class="line">        sort(str.begin(), str.end(), cmp);</div><div class="line">        <span class="keyword">do</span></div><div class="line">        {</div><div class="line">            <span class="built_in">cout</span> &lt;&lt; str &lt;&lt; endl;</div><div class="line">        }</div><div class="line">        <span class="keyword">while</span> (next_permutation(str.begin(), str.end(), cmp));</div><div class="line">    }</div><div class="line">    <span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">}</div></pre></td></tr></table></figure>

<h1 id="更新日志">更新日志</h1>
<ul>
<li>2014年07月23日 已AC。</li>
</ul>
]]></content>
    <summary type="html"><![CDATA[<h1 id="题目">题目</h1>
<p>源地址：<a href="http://poj.org/problem?id=1256" target="_blank" rel="external">http://poj.org/problem?id=1256</a></p>
<h1 id="理解">理解</h1>
<p>再次遇到一道使用<code>next_permutation</code>的题目，不过这一次需要针对题目的给出的条件重新写一个<code>cmp</code>函数。</p>
]]></summary>
    
      <category term="ACM" scheme="http://xuanwo.tk/tags/ACM/"/>
    
      <category term="POJ" scheme="http://xuanwo.tk/tags/POJ/"/>
    
      <category term="C/C++" scheme="http://xuanwo.tk/tags/CC++/"/>
    
      <category term="STL" scheme="http://xuanwo.tk/tags/STL/"/>
    
      <category term="Exercise" scheme="http://xuanwo.tk/categories/Exercise/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[POJ 1247 Magnificent Meatballs]]></title>
    <link href="http://xuanwo.tk/2014/07/23/POJ-1247-Magnificent-Meatballs/"/>
    <id>http://xuanwo.tk/2014/07/23/POJ-1247-Magnificent-Meatballs/</id>
    <published>2014-07-22T18:03:12.000Z</published>
    <updated>2014-07-22T18:05:00.256Z</updated>
    <content type="html"><![CDATA[<h1 id="题目">题目</h1>
<p>源地址：<a href="http://poj.org/problem?id=1247" target="_blank" rel="external">http://poj.org/problem?id=1247</a></p>
<h1 id="理解">理解</h1>
<p>让给的肉丸子少的人继续给，直到最后判断是否相等。</p>
<a id="more"></a>

<h1 id="代码">代码</h1>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div></pre></td><td class="code"><pre><div class="line"><span class="preprocessor">#<span class="keyword">include</span> &lt;iostream&gt;</span></div><div class="line"><span class="preprocessor">#<span class="keyword">include</span> &lt;cstdio&gt;</span></div><div class="line"><span class="preprocessor">#<span class="keyword">include</span> &lt;cstring&gt;</span></div><div class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</div><div class="line"></div><div class="line"><span class="keyword">int</span> table[<span class="number">33</span>];</div><div class="line"></div><div class="line"><span class="keyword">int</span> main(<span class="keyword">int</span> argc, <span class="keyword">char</span> <span class="keyword">const</span> *argv[])</div><div class="line">{</div><div class="line">    <span class="keyword">int</span> n;</div><div class="line">    <span class="keyword">while</span>(<span class="built_in">cin</span>&gt;&gt;n,n)</div><div class="line">    {</div><div class="line">        <span class="built_in">memset</span>(table,<span class="number">0</span>,<span class="keyword">sizeof</span>(table));</div><div class="line">        <span class="keyword">int</span> i;</div><div class="line">        <span class="keyword">for</span>(i=<span class="number">1</span>;i&lt;=n;i++)</div><div class="line">        {</div><div class="line">            <span class="built_in">cin</span>&gt;&gt;table[i];</div><div class="line">        }</div><div class="line">        <span class="keyword">int</span> sumE=<span class="number">0</span>,sumS=<span class="number">0</span>;</div><div class="line">        <span class="keyword">int</span> postE=n,postS=<span class="number">1</span>;</div><div class="line">        <span class="keyword">while</span>(postS&lt;=postE)</div><div class="line">        {</div><div class="line">            <span class="keyword">if</span>(sumE&gt;=sumS) {sumS+=table[postS];postS++;}</div><div class="line">            <span class="keyword">else</span> {sumE+=table[postE];postE--;}</div><div class="line">        }</div><div class="line">        <span class="keyword">if</span>(sumE!=sumS)</div><div class="line">        {</div><div class="line">            <span class="built_in">cout</span>&lt;&lt;<span class="string">"No equal partitioning."</span>&lt;&lt;endl;</div><div class="line">        }</div><div class="line">        <span class="keyword">else</span> <span class="built_in">cout</span>&lt;&lt;<span class="string">"Sam stops at position "</span>&lt;&lt;--postS&lt;&lt;<span class="string">" and Ella stops at position "</span>&lt;&lt;++postE&lt;&lt;<span class="string">"."</span>&lt;&lt;endl;</div><div class="line">    }</div><div class="line">    <span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">}</div></pre></td></tr></table></figure>

<h1 id="更新日志">更新日志</h1>
<ul>
<li>2014年07月23日 已AC。</li>
</ul>
]]></content>
    <summary type="html"><![CDATA[<h1 id="题目">题目</h1>
<p>源地址：<a href="http://poj.org/problem?id=1247" target="_blank" rel="external">http://poj.org/problem?id=1247</a></p>
<h1 id="理解">理解</h1>
<p>让给的肉丸子少的人继续给，直到最后判断是否相等。</p>
]]></summary>
    
      <category term="ACM" scheme="http://xuanwo.tk/tags/ACM/"/>
    
      <category term="POJ" scheme="http://xuanwo.tk/tags/POJ/"/>
    
      <category term="C/C++" scheme="http://xuanwo.tk/tags/CC++/"/>
    
      <category term="简单计算" scheme="http://xuanwo.tk/tags/%E7%AE%80%E5%8D%95%E8%AE%A1%E7%AE%97/"/>
    
      <category term="Exercise" scheme="http://xuanwo.tk/categories/Exercise/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[POJ 1218 THE DRUNK JAILER]]></title>
    <link href="http://xuanwo.tk/2014/07/22/POJ-1218-THE-DRUNK-JAILER/"/>
    <id>http://xuanwo.tk/2014/07/22/POJ-1218-THE-DRUNK-JAILER/</id>
    <published>2014-07-22T13:37:10.000Z</published>
    <updated>2014-07-22T13:37:36.832Z</updated>
    <content type="html"><![CDATA[<h1 id="题目">题目</h1>
<p>源地址：<a href="http://poj.org/problem?id=1218" target="_blank" rel="external">http://poj.org/problem?id=1218</a></p>
<h1 id="理解">理解</h1>
<p>汗= =，偷鸡水过了，正好是牢房数的平方根向下取整，不过没有严格的证明</p>
<a id="more"></a>

<h1 id="代码">代码</h1>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div></pre></td><td class="code"><pre><div class="line"><span class="preprocessor">#<span class="keyword">include</span> &lt;iostream&gt;</span></div><div class="line"><span class="preprocessor">#<span class="keyword">include</span> &lt;cmath&gt;</span></div><div class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</div><div class="line"></div><div class="line"><span class="keyword">int</span> main()</div><div class="line">{</div><div class="line">    <span class="keyword">int</span> n, a, k;</div><div class="line">    <span class="built_in">cin</span> &gt;&gt; n;</div><div class="line">    <span class="keyword">while</span> (n--)</div><div class="line">    {</div><div class="line">        <span class="built_in">cin</span> &gt;&gt; k;</div><div class="line">        a = <span class="built_in">sqrt</span>(k);</div><div class="line">        <span class="built_in">cout</span> &lt;&lt; a &lt;&lt; endl;</div><div class="line">    }</div><div class="line">    <span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">}</div></pre></td></tr></table></figure>

<h1 id="更新日志">更新日志</h1>
<ul>
<li>2014年07月22日 已AC，有待证明。</li>
</ul>
]]></content>
    <summary type="html"><![CDATA[<h1 id="题目">题目</h1>
<p>源地址：<a href="http://poj.org/problem?id=1218" target="_blank" rel="external">http://poj.org/problem?id=1218</a></p>
<h1 id="理解">理解</h1>
<p>汗= =，偷鸡水过了，正好是牢房数的平方根向下取整，不过没有严格的证明</p>
]]></summary>
    
      <category term="ACM" scheme="http://xuanwo.tk/tags/ACM/"/>
    
      <category term="POJ" scheme="http://xuanwo.tk/tags/POJ/"/>
    
      <category term="C/C++" scheme="http://xuanwo.tk/tags/CC++/"/>
    
      <category term="简单计算" scheme="http://xuanwo.tk/tags/%E7%AE%80%E5%8D%95%E8%AE%A1%E7%AE%97/"/>
    
      <category term="Exercise" scheme="http://xuanwo.tk/categories/Exercise/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[POJ 1163 The Triangle]]></title>
    <link href="http://xuanwo.tk/2014/07/22/POJ-1163-The-Triangle/"/>
    <id>http://xuanwo.tk/2014/07/22/POJ-1163-The-Triangle/</id>
    <published>2014-07-22T13:12:47.000Z</published>
    <updated>2014-07-22T13:18:22.473Z</updated>
    <content type="html"><![CDATA[<h1 id="题目">题目</h1>
<p>源地址：<a href="http://poj.org/problem?id=1163" target="_blank" rel="external">http://poj.org/problem?id=1163</a></p>
<h1 id="理解">理解</h1>
<p>这是第一道关于DP的题目，据说是用暴力的方法会直接超时，因为有大量的重复计算。使用DP可以避免这一点，最关键的公式是<br><code>triangle[i][j] += max(triangle[i + 1][j] : triangle[i + 1][j + 1])</code></p>
<a id="more"></a>

<h1 id="代码">代码</h1>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div></pre></td><td class="code"><pre><div class="line"><span class="preprocessor">#<span class="keyword">include</span>&lt;stdio.h&gt;</span></div><div class="line"><span class="preprocessor">#<span class="keyword">define</span> MAX 100</span></div><div class="line"></div><div class="line"><span class="keyword">int</span> triangle[MAX][MAX];</div><div class="line"></div><div class="line"><span class="keyword">int</span> main()</div><div class="line">{</div><div class="line">    <span class="keyword">int</span> n, i, j;</div><div class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &n);</div><div class="line">    <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; n; i++)</div><div class="line">        <span class="keyword">for</span> (j = <span class="number">0</span>; j &lt;= i; j++)</div><div class="line">            <span class="built_in">scanf</span>(<span class="string">"%d"</span>, triangle[i] + j);</div><div class="line">    <span class="keyword">for</span> (i = n - <span class="number">2</span>; i &gt;= <span class="number">0</span>; i--)</div><div class="line">        <span class="keyword">for</span> (j = <span class="number">0</span>; j &lt;= i; j++)</div><div class="line">            triangle[i][j] += triangle[i + <span class="number">1</span>][j] &gt; triangle[i + <span class="number">1</span>][j + <span class="number">1</span>] ? triangle[i + <span class="number">1</span>][j] : triangle[i + <span class="number">1</span>][j + <span class="number">1</span>];</div><div class="line">    <span class="built_in">printf</span>(<span class="string">"%d\n"</span>, triangle[<span class="number">0</span>][<span class="number">0</span>]);</div><div class="line">    <span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">}</div></pre></td></tr></table></figure>

<h1 id="更新日志">更新日志</h1>
<ul>
<li>2014年07月22日 已AC。</li>
</ul>
]]></content>
    <summary type="html"><![CDATA[<h1 id="题目">题目</h1>
<p>源地址：<a href="http://poj.org/problem?id=1163" target="_blank" rel="external">http://poj.org/problem?id=1163</a></p>
<h1 id="理解">理解</h1>
<p>这是第一道关于DP的题目，据说是用暴力的方法会直接超时，因为有大量的重复计算。使用DP可以避免这一点，最关键的公式是<br><code>triangle[i][j] += max(triangle[i + 1][j] : triangle[i + 1][j + 1])</code></p>
]]></summary>
    
      <category term="ACM" scheme="http://xuanwo.tk/tags/ACM/"/>
    
      <category term="POJ" scheme="http://xuanwo.tk/tags/POJ/"/>
    
      <category term="C/C++" scheme="http://xuanwo.tk/tags/CC++/"/>
    
      <category term="DP" scheme="http://xuanwo.tk/tags/DP/"/>
    
      <category term="Exercise" scheme="http://xuanwo.tk/categories/Exercise/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[POJ 1083 Moving Tables]]></title>
    <link href="http://xuanwo.tk/2014/07/22/POJ-1083-Moving-Tables/"/>
    <id>http://xuanwo.tk/2014/07/22/POJ-1083-Moving-Tables/</id>
    <published>2014-07-22T13:03:10.000Z</published>
    <updated>2014-07-22T13:05:14.689Z</updated>
    <content type="html"><![CDATA[<h1 id="题目">题目</h1>
<p>源地址：<a href="http://poj.org/problem?id=1083" target="_blank" rel="external">http://poj.org/problem?id=1083</a></p>
<h1 id="理解">理解</h1>
<p>题目不难，关键在于理解题意。开一个数组，求出每一张桌子移动的时间，遍历找出最大值即可。</p>
<a id="more"></a>

<h1 id="代码">代码</h1>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div></pre></td><td class="code"><pre><div class="line"><span class="preprocessor">#<span class="keyword">include</span> &lt;stdlib.h&gt;</span></div><div class="line"><span class="preprocessor">#<span class="keyword">include</span> &lt;stdio.h&gt;</span></div><div class="line"><span class="preprocessor">#<span class="keyword">include</span> &lt;string.h&gt;</span></div><div class="line"></div><div class="line"><span class="keyword">int</span> main(<span class="keyword">int</span> argc, <span class="keyword">char</span> <span class="keyword">const</span> *argv[])</div><div class="line">{</div><div class="line">    <span class="keyword">int</span> n, tables, corridor[<span class="number">200</span>], i, j, start, end, time, x, y;</div><div class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &n);</div><div class="line">    <span class="keyword">while</span> (n-- &gt; <span class="number">0</span>)</div><div class="line">    {</div><div class="line">        <span class="built_in">memset</span>(corridor, <span class="number">0</span>, <span class="keyword">sizeof</span>(corridor));</div><div class="line">        time = <span class="number">0</span>;</div><div class="line">        <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &tables);</div><div class="line">        <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; tables; i++)</div><div class="line">        {</div><div class="line">            <span class="built_in">scanf</span>(<span class="string">"%d%d"</span>, &x, &y);</div><div class="line">            start = ((x &lt; y ? x : y) - <span class="number">1</span>) / <span class="number">2</span>;</div><div class="line">            end = ((x &gt; y ? x : y) - <span class="number">1</span>) / <span class="number">2</span>;</div><div class="line">            <span class="keyword">for</span> (j = start; j &lt;= end; j++)</div><div class="line">                corridor[j] += <span class="number">10</span>;</div><div class="line">        }</div><div class="line">        <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; <span class="number">200</span>; i++)</div><div class="line">            time = corridor[i] &gt; time ? corridor[i] : time;</div><div class="line">        <span class="built_in">printf</span>(<span class="string">"%d\n"</span>, time);</div><div class="line">    }</div><div class="line">    <span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">}</div></pre></td></tr></table></figure>

<h1 id="更新日志">更新日志</h1>
<ul>
<li>2014年07月22日 已AC。</li>
</ul>
]]></content>
    <summary type="html"><![CDATA[<h1 id="题目">题目</h1>
<p>源地址：<a href="http://poj.org/problem?id=1083" target="_blank" rel="external">http://poj.org/problem?id=1083</a></p>
<h1 id="理解">理解</h1>
<p>题目不难，关键在于理解题意。开一个数组，求出每一张桌子移动的时间，遍历找出最大值即可。</p>
]]></summary>
    
      <category term="ACM" scheme="http://xuanwo.tk/tags/ACM/"/>
    
      <category term="POJ" scheme="http://xuanwo.tk/tags/POJ/"/>
    
      <category term="C/C++" scheme="http://xuanwo.tk/tags/CC++/"/>
    
      <category term="简单计算" scheme="http://xuanwo.tk/tags/%E7%AE%80%E5%8D%95%E8%AE%A1%E7%AE%97/"/>
    
      <category term="Exercise" scheme="http://xuanwo.tk/categories/Exercise/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[POJ 1146 ID Codes]]></title>
    <link href="http://xuanwo.tk/2014/07/22/POJ-1146-ID-Codes/"/>
    <id>http://xuanwo.tk/2014/07/22/POJ-1146-ID-Codes/</id>
    <published>2014-07-22T12:52:19.000Z</published>
    <updated>2014-07-22T12:54:33.137Z</updated>
    <content type="html"><![CDATA[<h1 id="题目">题目</h1>
<p>源地址：<a href="http://poj.org/problem?id=1146" target="_blank" rel="external">http://poj.org/problem?id=1146</a></p>
<h1 id="理解">理解</h1>
<p>使用<code>STL</code>里面的<code>next_permutation</code>轻松水掉。</p>
<a id="more"></a>

<h1 id="新技能get">新技能get</h1>
<p><a href="http://www.cplusplus.com/reference/algorithm/next_permutation/" target="_blank" rel="external"><code>next_permutation</code></a></p>
<h1 id="代码">代码</h1>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div></pre></td><td class="code"><pre><div class="line"><span class="preprocessor">#<span class="keyword">include</span>&lt;stdio.h&gt;</span></div><div class="line"><span class="preprocessor">#<span class="keyword">include</span>&lt;string&gt;</span></div><div class="line"><span class="preprocessor">#<span class="keyword">include</span>&lt;iostream&gt;</span></div><div class="line"><span class="preprocessor">#<span class="keyword">include</span>&lt;algorithm&gt;</span></div><div class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</div><div class="line"></div><div class="line"><span class="keyword">int</span> main()</div><div class="line">{</div><div class="line">    <span class="built_in">string</span> str;</div><div class="line">    <span class="keyword">while</span>(<span class="built_in">cin</span>&gt;&gt;str,str[<span class="number">0</span>]!=<span class="string">'#'</span>)</div><div class="line">    {</div><div class="line">        <span class="keyword">bool</span> flag=<span class="keyword">true</span>;</div><div class="line">        <span class="keyword">if</span>(next_permutation(str.begin(),str.end()))</div><div class="line">        {</div><div class="line">            flag=<span class="keyword">false</span>;</div><div class="line">            <span class="built_in">cout</span>&lt;&lt;str&lt;&lt;endl;</div><div class="line">        }</div><div class="line">        <span class="keyword">if</span>(flag)<span class="built_in">printf</span>(<span class="string">"No Successor\n"</span>);</div><div class="line">    }</div><div class="line">}</div></pre></td></tr></table></figure>

<h1 id="更新日志">更新日志</h1>
<ul>
<li>2014年07月22日 已AC。</li>
</ul>
]]></content>
    <summary type="html"><![CDATA[<h1 id="题目">题目</h1>
<p>源地址：<a href="http://poj.org/problem?id=1146" target="_blank" rel="external">http://poj.org/problem?id=1146</a></p>
<h1 id="理解">理解</h1>
<p>使用<code>STL</code>里面的<code>next_permutation</code>轻松水掉。</p>
]]></summary>
    
      <category term="ACM" scheme="http://xuanwo.tk/tags/ACM/"/>
    
      <category term="POJ" scheme="http://xuanwo.tk/tags/POJ/"/>
    
      <category term="C/C++" scheme="http://xuanwo.tk/tags/CC++/"/>
    
      <category term="STL" scheme="http://xuanwo.tk/tags/STL/"/>
    
      <category term="Exercise" scheme="http://xuanwo.tk/categories/Exercise/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[POJ 1068 Parencodings]]></title>
    <link href="http://xuanwo.tk/2014/07/22/POJ-1068-Parencodings/"/>
    <id>http://xuanwo.tk/2014/07/22/POJ-1068-Parencodings/</id>
    <published>2014-07-22T12:37:35.000Z</published>
    <updated>2014-07-22T12:42:18.029Z</updated>
    <content type="html"><![CDATA[<h1 id="题目">题目</h1>
<p>源地址：<a href="http://poj.org/problem?id=1068" target="_blank" rel="external">http://poj.org/problem?id=1068</a></p>
<h1 id="理解">理解</h1>
<p>模拟栈操作，主要是对题目意思的理解。</p>
<a id="more"></a>

<h1 id="代码">代码</h1>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div></pre></td><td class="code"><pre><div class="line"><span class="preprocessor">#<span class="keyword">include</span>&lt;cstdio&gt;</span></div><div class="line"><span class="preprocessor">#<span class="keyword">include</span>&lt;iostream&gt;</span></div><div class="line"><span class="preprocessor">#<span class="keyword">include</span>&lt;stack&gt;</span></div><div class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</div><div class="line"><span class="keyword">int</span> a[<span class="number">25</span>], b[<span class="number">25</span>], c[<span class="number">100</span>];</div><div class="line"></div><div class="line"><span class="keyword">int</span> main(<span class="keyword">int</span> argc, <span class="keyword">char</span> <span class="keyword">const</span> *argv[])</div><div class="line">{</div><div class="line">    <span class="keyword">int</span> i, j, t, n, p, num;</div><div class="line">    <span class="stl_container"><span class="built_in">stack</span>&lt;<span class="keyword">int</span>&gt;</span> st;</div><div class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &t);</div><div class="line">    <span class="keyword">while</span> (t--)</div><div class="line">    {</div><div class="line">        num = <span class="number">0</span>;</div><div class="line">        <span class="built_in">cin</span> &gt;&gt; n;</div><div class="line">        a[<span class="number">0</span>] = <span class="number">0</span>;</div><div class="line">        p = <span class="number">0</span>;</div><div class="line">        <span class="keyword">for</span> (i = <span class="number">1</span>; i &lt;= n; i++)</div><div class="line">        {</div><div class="line">            <span class="built_in">cin</span> &gt;&gt; a[i];</div><div class="line">            <span class="keyword">for</span> (j = p; j &lt; p + a[i] - a[i - <span class="number">1</span>]; j++)</div><div class="line">                c[j] = j + <span class="number">1</span>;</div><div class="line">            c[p + a[i] - a[i - <span class="number">1</span>]] = -(p + a[i] - a[i - <span class="number">1</span>] + <span class="number">1</span>);</div><div class="line">            p = p + a[i] - a[i - <span class="number">1</span>] + <span class="number">1</span>;</div><div class="line">        }</div><div class="line">        j = <span class="number">0</span>;</div><div class="line">        <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; p; i++)</div><div class="line">        {</div><div class="line">            <span class="keyword">if</span> (c[i] &gt; <span class="number">0</span>)</div><div class="line">                st.push(c[i]);</div><div class="line">            <span class="keyword">else</span></div><div class="line">            {</div><div class="line">                num = st.top();</div><div class="line">                st.pop();</div><div class="line">                num = (-c[i] - num) / <span class="number">2</span> + <span class="number">1</span>;</div><div class="line">                b[j] = num;</div><div class="line">                j++;</div><div class="line">            }</div><div class="line">        }</div><div class="line">        <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; j - <span class="number">1</span>; i++)</div><div class="line">            <span class="built_in">printf</span>(<span class="string">"%d "</span>, b[i]);</div><div class="line">        <span class="built_in">printf</span>(<span class="string">"%d\n"</span>, b[j - <span class="number">1</span>]);</div><div class="line">    }</div><div class="line">    <span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">}</div></pre></td></tr></table></figure>

<h1 id="更新日志">更新日志</h1>
<ul>
<li>2014年07月22日 已AC。</li>
</ul>
]]></content>
    <summary type="html"><![CDATA[<h1 id="题目">题目</h1>
<p>源地址：<a href="http://poj.org/problem?id=1068" target="_blank" rel="external">http://poj.org/problem?id=1068</a></p>
<h1 id="理解">理解</h1>
<p>模拟栈操作，主要是对题目意思的理解。</p>
]]></summary>
    
      <category term="ACM" scheme="http://xuanwo.tk/tags/ACM/"/>
    
      <category term="POJ" scheme="http://xuanwo.tk/tags/POJ/"/>
    
      <category term="C/C++" scheme="http://xuanwo.tk/tags/CC++/"/>
    
      <category term="stack" scheme="http://xuanwo.tk/tags/stack/"/>
    
      <category term="Exercise" scheme="http://xuanwo.tk/categories/Exercise/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[POJ 2492 A Bug's Life]]></title>
    <link href="http://xuanwo.tk/2014/07/22/POJ-2492-A-Bug's-Life/"/>
    <id>http://xuanwo.tk/2014/07/22/POJ-2492-A-Bug's-Life/</id>
    <published>2014-07-22T09:12:30.000Z</published>
    <updated>2014-07-22T09:14:25.480Z</updated>
    <content type="html"><![CDATA[<h1 id="题目">题目</h1>
<p>源地址：<a href="http://poj.org/problem?id=2492" target="_blank" rel="external">http://poj.org/problem?id=2492</a></p>
<h1 id="理解">理解</h1>
<p>当初学习并查集的时候做得题目，是一个比较经典的关于并查集的题目</p>
<a id="more"></a>

<h1 id="代码">代码</h1>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div></pre></td><td class="code"><pre><div class="line"><span class="preprocessor">#<span class="keyword">include</span>&lt;cstdio&gt;</span></div><div class="line"></div><div class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn = <span class="number">2000</span> + <span class="number">10</span>;</div><div class="line"></div><div class="line"><span class="keyword">int</span> p[maxn];</div><div class="line"><span class="keyword">int</span> r[maxn];</div><div class="line"></div><div class="line"><span class="keyword">int</span> find(<span class="keyword">int</span> x)</div><div class="line">{</div><div class="line">    <span class="keyword">if</span> (x == p[x]) <span class="keyword">return</span> x;</div><div class="line"></div><div class="line">    <span class="keyword">int</span> t = p[x];</div><div class="line">    p[x] = find(p[x]);</div><div class="line">    r[x] = (r[x] + r[t]) % <span class="number">2</span>;</div><div class="line">    <span class="keyword">return</span> p[x];</div><div class="line">}</div><div class="line"></div><div class="line"><span class="keyword">void</span> Union(<span class="keyword">int</span> x, <span class="keyword">int</span> y)</div><div class="line">{</div><div class="line">    <span class="keyword">int</span> fx = find(x);</div><div class="line">    <span class="keyword">int</span> fy = find(y);</div><div class="line"></div><div class="line">    p[fx] = fy;</div><div class="line">    r[fx] = (r[x] + <span class="number">1</span> + r[y]) % <span class="number">2</span>;</div><div class="line">}</div><div class="line"></div><div class="line"><span class="keyword">void</span> <span class="built_in">set</span>(<span class="keyword">int</span> n)</div><div class="line">{</div><div class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i++)</div><div class="line">    {</div><div class="line">        p[i] = i;</div><div class="line">        r[i] = <span class="number">0</span>;</div><div class="line">    }</div><div class="line">}</div><div class="line"></div><div class="line"><span class="keyword">int</span> main(<span class="keyword">int</span> argc, <span class="keyword">char</span> <span class="keyword">const</span> *argv[])</div><div class="line">{</div><div class="line">    <span class="keyword">int</span> T;</div><div class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &T);</div><div class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= T; i++)</div><div class="line">    {</div><div class="line">        <span class="keyword">int</span> n, m;</div><div class="line">        <span class="built_in">scanf</span>(<span class="string">"%d%d"</span>, &n, &m);</div><div class="line"></div><div class="line">        <span class="built_in">set</span>(n);</div><div class="line"></div><div class="line">        <span class="keyword">int</span> x, y;</div><div class="line">        <span class="keyword">bool</span> flag = <span class="keyword">true</span>;</div><div class="line">        <span class="keyword">while</span> (m--)</div><div class="line">        {</div><div class="line">            <span class="built_in">scanf</span>(<span class="string">"%d%d"</span>, &x, &y);</div><div class="line">            <span class="keyword">if</span> (find(x) == find(y))</div><div class="line">            {</div><div class="line">                <span class="keyword">if</span> (r[x] == r[y])</div><div class="line">                {</div><div class="line">                    flag = <span class="keyword">false</span>;</div><div class="line">                    <span class="keyword">continue</span>;</div><div class="line">                }</div><div class="line">            }</div><div class="line">            <span class="keyword">else</span> Union(x, y);</div><div class="line">        }</div><div class="line">        <span class="built_in">printf</span>(<span class="string">"Scenario #%d:\n"</span>, i);</div><div class="line">        <span class="keyword">if</span> (flag) <span class="built_in">printf</span>(<span class="string">"No suspicious bugs found!\n"</span>);</div><div class="line">        <span class="keyword">else</span> <span class="built_in">printf</span>(<span class="string">"Suspicious bugs found!\n"</span>);</div><div class="line">        <span class="built_in">printf</span>(<span class="string">"\n"</span>);</div><div class="line">    }</div><div class="line">    <span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">}</div></pre></td></tr></table></figure>

<h1 id="更新日志">更新日志</h1>
<ul>
<li>2014年07月22日 已AC。</li>
</ul>
]]></content>
    <summary type="html"><![CDATA[<h1 id="题目">题目</h1>
<p>源地址：<a href="http://poj.org/problem?id=2492" target="_blank" rel="external">http://poj.org/problem?id=2492</a></p>
<h1 id="理解">理解</h1>
<p>当初学习并查集的时候做得题目，是一个比较经典的关于并查集的题目</p>
]]></summary>
    
      <category term="ACM" scheme="http://xuanwo.tk/tags/ACM/"/>
    
      <category term="POJ" scheme="http://xuanwo.tk/tags/POJ/"/>
    
      <category term="C/C++" scheme="http://xuanwo.tk/tags/CC++/"/>
    
      <category term="并查集" scheme="http://xuanwo.tk/tags/%E5%B9%B6%E6%9F%A5%E9%9B%86/"/>
    
      <category term="Exercise" scheme="http://xuanwo.tk/categories/Exercise/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[POJ 1988 Cube Stacking]]></title>
    <link href="http://xuanwo.tk/2014/07/22/POJ-1988-Cube-Stacking/"/>
    <id>http://xuanwo.tk/2014/07/22/POJ-1988-Cube-Stacking/</id>
    <published>2014-07-22T08:36:53.000Z</published>
    <updated>2014-07-22T08:40:42.624Z</updated>
    <content type="html"><![CDATA[<h1 id="题目">题目</h1>
<p>源地址：<a href="http://poj.org/problem?id=1988" target="_blank" rel="external">http://poj.org/problem?id=1988</a></p>
<h1 id="理解">理解</h1>
<p>这道题也想了很久。问题主要出在堆叠得过程中，我只考虑了根节点的变化，而没有去更新位于同一个根节点下的方块的高度变化。发现问题之后，试图寻找到一种有效得递归方法，但是失败了。无奈之后，决定再开一个deep数组来保存当前节点到根节点之间的深度差。</p>
<a id="more"></a>

<h1 id="代码">代码</h1>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div></pre></td><td class="code"><pre><div class="line"><span class="preprocessor">#<span class="keyword">include</span> &lt;cstdio&gt;</span></div><div class="line"><span class="preprocessor">#<span class="keyword">include</span> &lt;iostream&gt;</span></div><div class="line"><span class="preprocessor">#<span class="keyword">include</span> &lt;cstring&gt;</span></div><div class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</div><div class="line"><span class="preprocessor">#<span class="keyword">define</span> N 30010</span></div><div class="line"></div><div class="line"><span class="keyword">int</span> pre[N], son[N], deep[N];</div><div class="line"></div><div class="line"><span class="keyword">int</span> find(<span class="keyword">int</span> x)</div><div class="line">{</div><div class="line">    <span class="keyword">int</span> temp;</div><div class="line">    <span class="keyword">if</span> (x == pre[x])</div><div class="line">        <span class="keyword">return</span> x;</div><div class="line">    temp = pre[x];</div><div class="line">    pre[x] = find(temp);</div><div class="line">    deep[x] += deep[temp];</div><div class="line">    <span class="keyword">return</span> pre[x];</div><div class="line">}</div><div class="line"></div><div class="line"><span class="keyword">int</span> main(<span class="keyword">int</span> argc, <span class="keyword">char</span> <span class="keyword">const</span> *argv[])</div><div class="line">{</div><div class="line">    <span class="keyword">int</span> p;</div><div class="line">    <span class="keyword">char</span> ope;</div><div class="line">    <span class="keyword">int</span> a, b;</div><div class="line">    <span class="keyword">int</span> query;</div><div class="line">    <span class="keyword">int</span> root1, root2;</div><div class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &p);</div><div class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt; N; ++i)</div><div class="line">    {</div><div class="line">        pre[i] = i;</div><div class="line">        son[i] = <span class="number">1</span>;</div><div class="line">        deep[i] = <span class="number">0</span>;</div><div class="line">    }</div><div class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; p; ++i)</div><div class="line">    {</div><div class="line">        <span class="built_in">scanf</span>(<span class="string">"%*c%c"</span>, &ope);</div><div class="line">        <span class="keyword">if</span> (ope == <span class="string">'M'</span>)</div><div class="line">        {</div><div class="line">            <span class="built_in">scanf</span>(<span class="string">"%d%d"</span>, &a, &b);</div><div class="line">            root1 = find(a);</div><div class="line">            root2 = find(b);</div><div class="line">            <span class="keyword">if</span> (root1 != root2)</div><div class="line">            {</div><div class="line">                pre[root2] = root1;</div><div class="line">                deep[root2] = son[root1];</div><div class="line">                son[root1] += son[root2];</div><div class="line">            }</div><div class="line">        }</div><div class="line">        <span class="keyword">else</span></div><div class="line">        {</div><div class="line">            <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &query);</div><div class="line">            <span class="built_in">printf</span>(<span class="string">"%d\n"</span>, son[find(query)] - deep[query] - <span class="number">1</span>);</div><div class="line">        }</div><div class="line">    }</div><div class="line">    <span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">}</div></pre></td></tr></table></figure>

<h1 id="更新日志">更新日志</h1>
<ul>
<li>2014年07月22日 已AC。</li>
</ul>
]]></content>
    <summary type="html"><![CDATA[<h1 id="题目">题目</h1>
<p>源地址：<a href="http://poj.org/problem?id=1988" target="_blank" rel="external">http://poj.org/problem?id=1988</a></p>
<h1 id="理解">理解</h1>
<p>这道题也想了很久。问题主要出在堆叠得过程中，我只考虑了根节点的变化，而没有去更新位于同一个根节点下的方块的高度变化。发现问题之后，试图寻找到一种有效得递归方法，但是失败了。无奈之后，决定再开一个deep数组来保存当前节点到根节点之间的深度差。</p>
]]></summary>
    
      <category term="ACM" scheme="http://xuanwo.tk/tags/ACM/"/>
    
      <category term="POJ" scheme="http://xuanwo.tk/tags/POJ/"/>
    
      <category term="C/C++" scheme="http://xuanwo.tk/tags/CC++/"/>
    
      <category term="并查集" scheme="http://xuanwo.tk/tags/%E5%B9%B6%E6%9F%A5%E9%9B%86/"/>
    
      <category term="Exercise" scheme="http://xuanwo.tk/categories/Exercise/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[POJ 1703 Find them, Catch them]]></title>
    <link href="http://xuanwo.tk/2014/07/22/POJ-1703-Find-them-Catch-them/"/>
    <id>http://xuanwo.tk/2014/07/22/POJ-1703-Find-them-Catch-them/</id>
    <published>2014-07-22T05:51:22.000Z</published>
    <updated>2014-07-22T06:02:59.109Z</updated>
    <content type="html"><![CDATA[<h1 id="题目">题目</h1>
<p>源地址：<a href="http://poj.org/problem?id=1703" target="_blank" rel="external">http://poj.org/problem?id=1703</a></p>
<h1 id="理解">理解</h1>
<p>这个并查集有点不一样，之前做过的全都是判断是否连通，这一次确实要判断是否不连通。想了一想，其实还是可以转换过来的。假定r1，r2分别表示ab，bc之间的关系，0表示相同，1表示不同，则有下面的逻辑表。</p>
<table>
<thead>
<tr>
<th style="text-align:center">(a, b)</th>
<th style="text-align:center">(b, c)</th>
<th style="text-align:center">(a, c)</th>
<th style="text-align:center">(r1+r2)%2</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">0</td>
<td style="text-align:center">0</td>
<td style="text-align:center">0</td>
<td style="text-align:center">0</td>
</tr>
<tr>
<td style="text-align:center">0</td>
<td style="text-align:center">1</td>
<td style="text-align:center">1</td>
<td style="text-align:center">1</td>
</tr>
<tr>
<td style="text-align:center">1</td>
<td style="text-align:center">0</td>
<td style="text-align:center">1</td>
<td style="text-align:center">1</td>
</tr>
<tr>
<td style="text-align:center">1</td>
<td style="text-align:center">1</td>
<td style="text-align:center">0</td>
<td style="text-align:center">0</td>
</tr>
</tbody>
</table>
<a id="more"></a>

<h1 id="代码">代码</h1>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div></pre></td><td class="code"><pre><div class="line"><span class="preprocessor">#<span class="keyword">include</span>&lt;cstdio&gt;</span></div><div class="line"></div><div class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn = <span class="number">100000</span> + <span class="number">10</span>;</div><div class="line"></div><div class="line"><span class="keyword">int</span> p[maxn];</div><div class="line"><span class="keyword">int</span> r[maxn];</div><div class="line"></div><div class="line"><span class="keyword">int</span> find(<span class="keyword">int</span> x)</div><div class="line">{</div><div class="line">    <span class="keyword">if</span> (x == p[x]) <span class="keyword">return</span> x;</div><div class="line">    <span class="keyword">int</span> t = p[x];</div><div class="line">    p[x] = find(p[x]);</div><div class="line">    r[x] = (r[x] + r[t]) % <span class="number">2</span>;</div><div class="line">    <span class="keyword">return</span> p[x];</div><div class="line">}</div><div class="line"></div><div class="line"><span class="keyword">void</span> Union(<span class="keyword">int</span> x, <span class="keyword">int</span> y)</div><div class="line">{</div><div class="line">    <span class="keyword">int</span> fx = find(x);</div><div class="line">    <span class="keyword">int</span> fy = find(y);</div><div class="line"></div><div class="line">    p[fx] = fy;</div><div class="line">    r[fx] = (r[x] + <span class="number">1</span> + r[y]) % <span class="number">2</span>;</div><div class="line">}</div><div class="line"><span class="keyword">void</span> <span class="built_in">set</span>(<span class="keyword">int</span> n)</div><div class="line">{</div><div class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> x = <span class="number">1</span>; x &lt;= n; x++)</div><div class="line">    {</div><div class="line">        p[x] = x;</div><div class="line">        r[x] = <span class="number">0</span>;</div><div class="line">    }</div><div class="line">}</div><div class="line"></div><div class="line"><span class="keyword">int</span> main(<span class="keyword">int</span> argc, <span class="keyword">char</span> <span class="keyword">const</span> *argv[])</div><div class="line">{</div><div class="line">    <span class="keyword">int</span> T;</div><div class="line">    <span class="keyword">int</span> n, m;</div><div class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &T);</div><div class="line">    <span class="keyword">while</span> (T--)</div><div class="line">    {</div><div class="line">        <span class="built_in">scanf</span>(<span class="string">"%d%d%*c"</span>, &n, &m);</div><div class="line">        <span class="built_in">set</span>(n);</div><div class="line"></div><div class="line">        <span class="keyword">char</span> c;</div><div class="line">        <span class="keyword">int</span> x, y;</div><div class="line">        <span class="keyword">while</span> (m--)</div><div class="line">        {</div><div class="line">            <span class="built_in">scanf</span>(<span class="string">"%c%d%d%*c"</span>, &c, &x, &y);</div><div class="line">            <span class="keyword">if</span> (c == <span class="string">'A'</span>)</div><div class="line">            {</div><div class="line">                <span class="keyword">if</span> (find(x) == find(y))</div><div class="line">                {</div><div class="line">                    <span class="keyword">if</span> (r[x] != r[y]) <span class="built_in">printf</span>(<span class="string">"In different gangs.\n"</span>);</div><div class="line">                    <span class="keyword">else</span> <span class="built_in">printf</span>(<span class="string">"In the same gang.\n"</span>);</div><div class="line">                }</div><div class="line">                <span class="keyword">else</span> <span class="built_in">printf</span>(<span class="string">"Not sure yet.\n"</span>);</div><div class="line">            }</div><div class="line">            <span class="keyword">else</span> <span class="keyword">if</span> (c == <span class="string">'D'</span>)</div><div class="line">            {</div><div class="line">                Union(x, y);</div><div class="line">            }</div><div class="line">        }</div><div class="line">    }</div><div class="line">    <span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">}</div></pre></td></tr></table></figure>

<h1 id="更新日志">更新日志</h1>
<ul>
<li>2014年07月22日 已AC。</li>
</ul>
]]></content>
    <summary type="html"><![CDATA[<h1 id="题目">题目</h1>
<p>源地址：<a href="http://poj.org/problem?id=1703" target="_blank" rel="external">http://poj.org/problem?id=1703</a></p>
<h1 id="理解">理解</h1>
<p>这个并查集有点不一样，之前做过的全都是判断是否连通，这一次确实要判断是否不连通。想了一想，其实还是可以转换过来的。假定r1，r2分别表示ab，bc之间的关系，0表示相同，1表示不同，则有下面的逻辑表。</p>
<table>
<thead>
<tr>
<th style="text-align:center">(a, b)</th>
<th style="text-align:center">(b, c)</th>
<th style="text-align:center">(a, c)</th>
<th style="text-align:center">(r1+r2)%2</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">0</td>
<td style="text-align:center">0</td>
<td style="text-align:center">0</td>
<td style="text-align:center">0</td>
</tr>
<tr>
<td style="text-align:center">0</td>
<td style="text-align:center">1</td>
<td style="text-align:center">1</td>
<td style="text-align:center">1</td>
</tr>
<tr>
<td style="text-align:center">1</td>
<td style="text-align:center">0</td>
<td style="text-align:center">1</td>
<td style="text-align:center">1</td>
</tr>
<tr>
<td style="text-align:center">1</td>
<td style="text-align:center">1</td>
<td style="text-align:center">0</td>
<td style="text-align:center">0</td>
</tr>
</tbody>
</table>
]]></summary>
    
      <category term="ACM" scheme="http://xuanwo.tk/tags/ACM/"/>
    
      <category term="POJ" scheme="http://xuanwo.tk/tags/POJ/"/>
    
      <category term="C/C++" scheme="http://xuanwo.tk/tags/CC++/"/>
    
      <category term="并查集" scheme="http://xuanwo.tk/tags/%E5%B9%B6%E6%9F%A5%E9%9B%86/"/>
    
      <category term="Exercise" scheme="http://xuanwo.tk/categories/Exercise/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[POJ 2524 Ubiquitous Religions]]></title>
    <link href="http://xuanwo.tk/2014/07/22/POJ-2524-Ubiquitous-Religions/"/>
    <id>http://xuanwo.tk/2014/07/22/POJ-2524-Ubiquitous-Religions/</id>
    <published>2014-07-21T19:45:40.000Z</published>
    <updated>2014-07-21T19:47:58.386Z</updated>
    <content type="html"><![CDATA[<h1 id="题目">题目</h1>
<p>源地址：<a href="http://poj.org/problem?id=2524" target="_blank" rel="external">http://poj.org/problem?id=2524</a></p>
<h1 id="理解">理解</h1>
<p>POJ上最简单的一道关于并查集的题目，没有使用路径压缩，没有进行优化，直接水过。</p>
<a id="more"></a>

<h1 id="代码">代码</h1>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div></pre></td><td class="code"><pre><div class="line"><span class="preprocessor">#<span class="keyword">include</span> &lt;cstdio&gt;</span></div><div class="line"></div><div class="line"><span class="keyword">int</span> f[<span class="number">50005</span>], sum;</div><div class="line"></div><div class="line"><span class="keyword">int</span> find(<span class="keyword">int</span> x)</div><div class="line">{</div><div class="line">    <span class="keyword">if</span> (f[x] != x) f[x] = find(f[x]);</div><div class="line">    <span class="keyword">return</span> f[x];</div><div class="line">}</div><div class="line"></div><div class="line"><span class="keyword">void</span> make(<span class="keyword">int</span> a, <span class="keyword">int</span> b)</div><div class="line">{</div><div class="line">    <span class="keyword">int</span> f1 = find(a);</div><div class="line">    <span class="keyword">int</span> f2 = find(b);</div><div class="line">    <span class="keyword">if</span> (f1 != f2)</div><div class="line">    {</div><div class="line">        f[f2] = f1;</div><div class="line">        sum--;</div><div class="line">    }</div><div class="line">}</div><div class="line"></div><div class="line"><span class="keyword">int</span> main(<span class="keyword">int</span> argc, <span class="keyword">char</span> <span class="keyword">const</span> *argv[])</div><div class="line">{</div><div class="line">    <span class="keyword">int</span> n, m, p = <span class="number">1</span>, i;</div><div class="line">    <span class="keyword">while</span> (<span class="built_in">scanf</span>(<span class="string">"%d%d"</span>, &n, &m) != EOF)</div><div class="line">    {</div><div class="line">        <span class="keyword">if</span> (n == <span class="number">0</span> && m == <span class="number">0</span>)  <span class="keyword">break</span>;</div><div class="line">        <span class="keyword">for</span> (i = <span class="number">1</span>; i &lt;= n; i++)    f[i] = i;</div><div class="line">        sum = n;</div><div class="line">        <span class="keyword">for</span> (i = <span class="number">1</span>; i &lt;= m; i++)</div><div class="line">        {</div><div class="line">            <span class="keyword">int</span> a, b;</div><div class="line">            <span class="built_in">scanf</span>(<span class="string">"%d%d"</span>, &a, &b);</div><div class="line">            make(a, b);</div><div class="line">        }</div><div class="line">        <span class="built_in">printf</span>(<span class="string">"Case %d: %d\n"</span>, p++, sum );</div><div class="line">    }</div><div class="line">    <span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">}</div></pre></td></tr></table></figure>

<h1 id="更新日志">更新日志</h1>
<ul>
<li>2014年07月22日 已AC。</li>
</ul>
]]></content>
    <summary type="html"><![CDATA[<h1 id="题目">题目</h1>
<p>源地址：<a href="http://poj.org/problem?id=2524" target="_blank" rel="external">http://poj.org/problem?id=2524</a></p>
<h1 id="理解">理解</h1>
<p>POJ上最简单的一道关于并查集的题目，没有使用路径压缩，没有进行优化，直接水过。</p>
]]></summary>
    
      <category term="ACM" scheme="http://xuanwo.tk/tags/ACM/"/>
    
      <category term="POJ" scheme="http://xuanwo.tk/tags/POJ/"/>
    
      <category term="C/C++" scheme="http://xuanwo.tk/tags/CC++/"/>
    
      <category term="并查集" scheme="http://xuanwo.tk/tags/%E5%B9%B6%E6%9F%A5%E9%9B%86/"/>
    
      <category term="Exercise" scheme="http://xuanwo.tk/categories/Exercise/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[POJ 1082 食物链]]></title>
    <link href="http://xuanwo.tk/2014/07/22/POJ-1082-Food-Links/"/>
    <id>http://xuanwo.tk/2014/07/22/POJ-1082-Food-Links/</id>
    <published>2014-07-21T18:43:08.000Z</published>
    <updated>2014-07-21T18:53:50.642Z</updated>
    <content type="html"><![CDATA[<h1 id="题目">题目</h1>
<p>源地址：<a href="http://poj.org/problem?id=1082" target="_blank" rel="external">http://poj.org/problem?id=1082</a></p>
<h1 id="理解">理解</h1>
<p>理解时候的困难在于如何把题目中吃与被吃的关系用一个计算机能理解的方式表达出来。后来使用了0表示他们是同类，用1表示a吃b，用2表示b吃a。再使用并查集的相关知识得到最后得结果。</p>
<a id="more"></a>

<h1 id="代码">代码</h1>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div></pre></td><td class="code"><pre><div class="line"><span class="preprocessor">#<span class="keyword">include</span> &lt;iostream&gt;</span></div><div class="line"><span class="preprocessor">#<span class="keyword">include</span> &lt;cstdio&gt;</span></div><div class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</div><div class="line"><span class="keyword">const</span> <span class="keyword">int</span> Max = <span class="number">50005</span>;</div><div class="line"></div><div class="line"><span class="keyword">int</span> n, pa[Max], rank[Max];</div><div class="line"></div><div class="line"><span class="keyword">void</span> make_set()</div><div class="line">{</div><div class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> x = <span class="number">1</span>; x &lt;= n; x ++)</div><div class="line">    {</div><div class="line">        pa[x] = x;</div><div class="line">        rank[x] = <span class="number">0</span>;</div><div class="line">    }</div><div class="line">}</div><div class="line"></div><div class="line"><span class="keyword">int</span> find_set(<span class="keyword">int</span> x)</div><div class="line">{</div><div class="line">    <span class="keyword">int</span> tmp = pa[x];</div><div class="line">    <span class="keyword">if</span> (x != pa[x])</div><div class="line">    {</div><div class="line">        pa[x] = find_set(pa[x]);</div><div class="line">        rank[x] = (rank[x] + rank[tmp]) % <span class="number">3</span>;</div><div class="line">    }</div><div class="line">    <span class="keyword">return</span> pa[x];</div><div class="line">}</div><div class="line"></div><div class="line"><span class="keyword">void</span> union_set(<span class="keyword">int</span> x, <span class="keyword">int</span> y, <span class="keyword">int</span> w)</div><div class="line">{</div><div class="line">    <span class="keyword">int</span> a = find_set(x);</div><div class="line">    <span class="keyword">int</span> b = find_set(y);</div><div class="line">    pa[b] = a;</div><div class="line">    rank[b] = (rank[x] - rank[y] + w + <span class="number">3</span>) % <span class="number">3</span>;</div><div class="line">}</div><div class="line"></div><div class="line"><span class="keyword">int</span> main()</div><div class="line">{</div><div class="line">    <span class="keyword">int</span> t, ans = <span class="number">0</span>;</div><div class="line">    <span class="built_in">scanf</span>(<span class="string">"%d %d"</span>, &n, &t);</div><div class="line">    make_set();</div><div class="line">    <span class="keyword">while</span> (t --)</div><div class="line">    {</div><div class="line">        <span class="keyword">int</span> d, x, y;</div><div class="line">        <span class="built_in">scanf</span>(<span class="string">"%d %d %d"</span>, &d, &x, &y);</div><div class="line">        <span class="keyword">if</span> (x &gt; n || y &gt; n) ans ++;</div><div class="line">        <span class="keyword">else</span></div><div class="line">        {</div><div class="line">            <span class="keyword">if</span> (d == <span class="number">1</span>)</div><div class="line">            {</div><div class="line">                <span class="keyword">if</span> (find_set(x) == find_set(y) && rank[x] != rank[y]) ans ++;</div><div class="line">                <span class="keyword">else</span> union_set(x, y, <span class="number">0</span>);</div><div class="line">            }</div><div class="line">            <span class="keyword">if</span> (d == <span class="number">2</span>)</div><div class="line">            {</div><div class="line">                <span class="keyword">if</span> (find_set(x) == find_set(y) && (rank[x] + <span class="number">1</span>) % <span class="number">3</span> != rank[y]) ans ++;</div><div class="line">                <span class="keyword">else</span> union_set(x, y, <span class="number">1</span>);</div><div class="line">            }</div><div class="line">        }</div><div class="line">    }</div><div class="line">    <span class="built_in">printf</span>(<span class="string">"%d\n"</span>, ans);</div><div class="line">    <span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">}</div></pre></td></tr></table></figure>

<h1 id="更新日志">更新日志</h1>
<ul>
<li>2014年07月22日 已AC。</li>
</ul>
]]></content>
    <summary type="html"><![CDATA[<h1 id="题目">题目</h1>
<p>源地址：<a href="http://poj.org/problem?id=1082" target="_blank" rel="external">http://poj.org/problem?id=1082</a></p>
<h1 id="理解">理解</h1>
<p>理解时候的困难在于如何把题目中吃与被吃的关系用一个计算机能理解的方式表达出来。后来使用了0表示他们是同类，用1表示a吃b，用2表示b吃a。再使用并查集的相关知识得到最后得结果。</p>
]]></summary>
    
      <category term="ACM" scheme="http://xuanwo.tk/tags/ACM/"/>
    
      <category term="POJ" scheme="http://xuanwo.tk/tags/POJ/"/>
    
      <category term="C/C++" scheme="http://xuanwo.tk/tags/CC++/"/>
    
      <category term="并查集" scheme="http://xuanwo.tk/tags/%E5%B9%B6%E6%9F%A5%E9%9B%86/"/>
    
      <category term="Exercise" scheme="http://xuanwo.tk/categories/Exercise/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[POJ 1046 Color Me Less]]></title>
    <link href="http://xuanwo.tk/2014/07/21/POJ-1046-Color-Me-Less/"/>
    <id>http://xuanwo.tk/2014/07/21/POJ-1046-Color-Me-Less/</id>
    <published>2014-07-21T07:55:53.000Z</published>
    <updated>2014-07-21T07:57:57.847Z</updated>
    <content type="html"><![CDATA[<h1 id="题目">题目</h1>
<p>源地址：<a href="http://poj.org/problem?id=1046" target="_blank" rel="external">http://poj.org/problem?id=1046</a></p>
<h1 id="理解">理解</h1>
<p>题目并不难，暴力水过即可。用到了结构体的知识，可惜我对结构体的理解还是太过于表层。其实我可以把结构体作为函数的参数输入，这样可以减少很大的代码量。</p>
<p><a id="more"></a></p>
<h1 id="代码">代码</h1>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div></pre></td><td class="code"><pre><div class="line"><span class="preprocessor">#<span class="keyword">include</span> &lt;iostream&gt;</span></div><div class="line"><span class="preprocessor">#<span class="keyword">include</span> &lt;cmath&gt;</span></div><div class="line"><span class="preprocessor">#<span class="keyword">include</span> &lt;cstdio&gt;</span></div><div class="line"><span class="preprocessor">#<span class="keyword">include</span> &lt;cstdlib&gt;</span></div><div class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</div><div class="line"></div><div class="line"><span class="keyword">struct</span> <span class="built_in">list</span></div><div class="line">{</div><div class="line">    <span class="keyword">int</span> r, g, b;</div><div class="line">} standard[<span class="number">16</span>];</div><div class="line"></div><div class="line"><span class="keyword">double</span> dis, tmp;</div><div class="line"><span class="keyword">int</span>  ansr, ansg, ansb;</div><div class="line"><span class="keyword">int</span> r, g, b;</div><div class="line"></div><div class="line"><span class="keyword">double</span> cal(<span class="keyword">int</span> r1, <span class="keyword">int</span> r2, <span class="keyword">int</span> g1, <span class="keyword">int</span> g2, <span class="keyword">int</span> b1, <span class="keyword">int</span> b2)</div><div class="line">{</div><div class="line">    <span class="keyword">return</span> <span class="built_in">sqrt</span>((<span class="keyword">double</span>)((r1 - r2) * (r1 - r2) + (g1 - g2) * (g1 - g2) + (b1 - b2) * (b1 - b2)));</div><div class="line">}</div><div class="line"></div><div class="line"></div><div class="line"><span class="keyword">int</span> main(<span class="keyword">int</span> argc, <span class="keyword">char</span> <span class="keyword">const</span> *argv[])</div><div class="line">{</div><div class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">16</span>; i++) <span class="built_in">scanf</span>(<span class="string">"%d%d%d"</span>, &standard[i].r, &standard[i].g, &standard[i].b);</div><div class="line">    <span class="keyword">while</span> (<span class="built_in">scanf</span>(<span class="string">"%d%d%d"</span>, &r, &g, &b) && r != -<span class="number">1</span>)</div><div class="line">    {</div><div class="line">        dis = <span class="number">450.0</span>;</div><div class="line">        ansr=ansg=ansb=<span class="number">0</span>;</div><div class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">16</span>; i++)</div><div class="line">        {</div><div class="line">            tmp = cal(r, standard[i].r, g, standard[i].g, b, standard[i].b);</div><div class="line">            <span class="keyword">if</span> (tmp&lt;dis)</div><div class="line">            {</div><div class="line">                dis = tmp;</div><div class="line">                ansr = standard[i].r;</div><div class="line">                ansg = standard[i].g;</div><div class="line">                ansb = standard[i].b;</div><div class="line">            }</div><div class="line">            <span class="keyword">else</span></div><div class="line">                <span class="keyword">continue</span>;</div><div class="line">        }</div><div class="line">        <span class="built_in">printf</span>(<span class="string">"(%d,%d,%d) maps to (%d,%d,%d)\n"</span>, r, g, b, ansr, ansg, ansb);</div><div class="line">    }</div><div class="line">    <span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">}</div></pre></td></tr></table></figure>

<h1 id="更新日志">更新日志</h1>
<ul>
<li>2014年07月日 已AC。</li>
</ul>
]]></content>
    <summary type="html"><![CDATA[<h1 id="题目">题目</h1>
<p>源地址：<a href="http://poj.org/problem?id=1046" target="_blank" rel="external">http://poj.org/problem?id=1046</a></p>
<h1 id="理解">理解</h1>
<p>题目并不难，暴力水过即可。用到了结构体的知识，可惜我对结构体的理解还是太过于表层。其实我可以把结构体作为函数的参数输入，这样可以减少很大的代码量。</p>
<p>]]></summary>
    
      <category term="ACM" scheme="http://xuanwo.tk/tags/ACM/"/>
    
      <category term="POJ" scheme="http://xuanwo.tk/tags/POJ/"/>
    
      <category term="C/C++" scheme="http://xuanwo.tk/tags/CC++/"/>
    
      <category term="简单计算" scheme="http://xuanwo.tk/tags/%E7%AE%80%E5%8D%95%E8%AE%A1%E7%AE%97/"/>
    
      <category term="Exercise" scheme="http://xuanwo.tk/categories/Exercise/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[POJ 1028 Web Navigation]]></title>
    <link href="http://xuanwo.tk/2014/07/20/POJ-1028-Web-Navigation/"/>
    <id>http://xuanwo.tk/2014/07/20/POJ-1028-Web-Navigation/</id>
    <published>2014-07-20T07:40:31.000Z</published>
    <updated>2014-07-20T07:54:06.266Z</updated>
    <content type="html"><![CDATA[<h1 id="题目">题目</h1>
<p>源地址：<a href="http://poj.org/problem?id=1028" target="_blank" rel="external">http://poj.org/problem?id=1028</a></p>
<h1 id="理解">理解</h1>
<p>这是一道STL里面的栈的运用的一个模板题。构建两个栈，一个存放forward，一个存放backward，然后后再建立一个string类用于存放浏览器当前的页面。题目不难，但是要理解你现在的操作对栈影响是什么，先后顺序一点都不能错。</p>
<a id="more"></a>

<h1 id="新技能get">新技能get</h1>
<p>std::stack中几个常用的操作<br>|stack<int> example; |建立一个int型的栈                                 |<br>|example.push(a);    |将a的值放在example栈的最顶端                      |<br>|example.top();      |获取example栈当前最顶端的值，此处它的返回值为a的值|<br>|example.pop();      |将example栈最顶端的值丢弃                         |<br>|example.empty();    |判断example栈是否为空，是的话返回1，不是的话返回0 |</int></p>
<h1 id="代码">代码</h1>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div></pre></td><td class="code"><pre><div class="line"><span class="preprocessor">#<span class="keyword">include</span> &lt;iostream&gt;</span></div><div class="line"><span class="preprocessor">#<span class="keyword">include</span> &lt;stack&gt;</span></div><div class="line"><span class="preprocessor">#<span class="keyword">include</span> &lt;string&gt;</span></div><div class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</div><div class="line"></div><div class="line"><span class="stl_container"><span class="built_in">stack</span>&lt;<span class="built_in">string</span>&gt;</span> forward;</div><div class="line"><span class="stl_container"><span class="built_in">stack</span>&lt;<span class="built_in">string</span>&gt;</span> backward;</div><div class="line"><span class="built_in">string</span> order, tmp, now;</div><div class="line"></div><div class="line"><span class="keyword">int</span> main(<span class="keyword">int</span> argc, <span class="keyword">char</span> <span class="keyword">const</span> *argv[])</div><div class="line">{</div><div class="line">    now = <span class="string">"http://www.acm.org/"</span>;</div><div class="line">    <span class="keyword">while</span> (<span class="built_in">cin</span> &gt;&gt; order && order.compare(<span class="string">"QUIT"</span>))</div><div class="line">    {</div><div class="line">        <span class="keyword">if</span> (!order.compare(<span class="string">"VISIT"</span>))</div><div class="line">        {</div><div class="line">            backward.push(now);</div><div class="line">            <span class="built_in">cin</span> &gt;&gt; now;</div><div class="line">            <span class="built_in">cout</span> &lt;&lt; now &lt;&lt; endl;</div><div class="line">            <span class="keyword">while</span> (!forward.empty()) forward.pop();</div><div class="line">        }</div><div class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (!order.compare(<span class="string">"BACK"</span>))</div><div class="line">        {</div><div class="line">            <span class="keyword">if</span> (!backward.empty())</div><div class="line">            {</div><div class="line">                forward.push(now);</div><div class="line">                now = backward.top();</div><div class="line">                backward.pop();</div><div class="line">                <span class="built_in">cout</span> &lt;&lt; now &lt;&lt; endl;</div><div class="line">            }</div><div class="line">            <span class="keyword">else</span></div><div class="line">            {</div><div class="line">                <span class="built_in">cout</span> &lt;&lt; <span class="string">"Ignored\n"</span>;</div><div class="line">                <span class="keyword">continue</span>;</div><div class="line">            }</div><div class="line">        }</div><div class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (!order.compare(<span class="string">"FORWARD"</span>))</div><div class="line">        {</div><div class="line">            <span class="keyword">if</span> (!forward.empty())</div><div class="line">            {</div><div class="line">                backward.push(now);</div><div class="line">                now = forward.top();</div><div class="line">                forward.pop();</div><div class="line">                <span class="built_in">cout</span> &lt;&lt; now &lt;&lt; endl;</div><div class="line">            }</div><div class="line">            <span class="keyword">else</span></div><div class="line">            {</div><div class="line">                <span class="built_in">cout</span> &lt;&lt; <span class="string">"Ignored\n"</span>;</div><div class="line">                <span class="keyword">continue</span>;</div><div class="line">            }</div><div class="line">        }</div><div class="line">    }</div><div class="line">    <span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">}</div></pre></td></tr></table></figure>

<h1 id="更新日志">更新日志</h1>
<ul>
<li>2014年07月20日 已AC。</li>
</ul>
]]></content>
    <summary type="html"><![CDATA[<h1 id="题目">题目</h1>
<p>源地址：<a href="http://poj.org/problem?id=1028" target="_blank" rel="external">http://poj.org/problem?id=1028</a></p>
<h1 id="理解">理解</h1>
<p>这是一道STL里面的栈的运用的一个模板题。构建两个栈，一个存放forward，一个存放backward，然后后再建立一个string类用于存放浏览器当前的页面。题目不难，但是要理解你现在的操作对栈影响是什么，先后顺序一点都不能错。</p>
]]></summary>
    
      <category term="ACM" scheme="http://xuanwo.tk/tags/ACM/"/>
    
      <category term="POJ" scheme="http://xuanwo.tk/tags/POJ/"/>
    
      <category term="C/C++" scheme="http://xuanwo.tk/tags/CC++/"/>
    
      <category term="stack" scheme="http://xuanwo.tk/tags/stack/"/>
    
      <category term="STL" scheme="http://xuanwo.tk/tags/STL/"/>
    
      <category term="Exercise" scheme="http://xuanwo.tk/categories/Exercise/"/>
    
  </entry>
  
</feed>
