<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Xuanwo&#39;s Blog</title>
  <subtitle>A Long Way to Go</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://xuanwo.org/"/>
  <updated>2016-07-14T14:10:22.682Z</updated>
  <id>https://xuanwo.org/</id>
  
  <author>
    <name>Xuanwo</name>
    <email>xuanwo.cn@gmail.com</email>
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>新博客上线&amp;Hexo主题开发入门</title>
    <link href="https://xuanwo.org/2016/06/29/new-blog-new-life/"/>
    <id>https://xuanwo.org/2016/06/29/new-blog-new-life/</id>
    <published>2016-06-29T23:06:00.000Z</published>
    <updated>2016-07-14T14:10:22.682Z</updated>
    
    <content type="html">&lt;h1 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h1&gt;&lt;p&gt;曾经看过我的博客的同学大概都会发现，我的博客再一次大变样了~&lt;br&gt;这一次的更新其实酝酿了很久，早在刚开始用Hexo的时候就想着要有一个自己的主题。但是那个时候觉得这是一件很难的事情，要懂HTML，CSS，JavaScript，还要懂Swig，Ejs等模板语言，还要懂Hexo的内部原理，于是就一直搁置了。在独立实现了一个&lt;a href=&quot;https://xuanwo.org/2016/06/16/jade_ims/&quot;&gt;完整的项目&lt;/a&gt;之后，我认为自己已经有这样的能力了，于是决定正式开始。&lt;br&gt;在我看来的话，Hexo的使用者大概分为三个层次：第一种用别人的主题，第二种模仿现有的主题，第三种自己独立开发。我原来是第一种，在Next的基础上做了很多改动，这一次进入到了第二个层次。我找了一套自我感觉还不错的模板，然后套用它的CSS设定和页面结构，就成了我现在的主题。&lt;br&gt;利用两天学习和工作的闲暇时间，我大体上完成了这个主题。做得比较糙，很多细节还有待优化，但是我已经急不可耐地想要正式上线了，笑。在未来的话，我希望能把一些配置都能整理出来，优化一下代码，然后开源这个主题，希望大家能够喜欢~&lt;br&gt;庆祝的话已经说的差不多了，下面来讲一讲如何开发一个Hexo主题。&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h1 id=&quot;结构&quot;&gt;&lt;a href=&quot;#结构&quot; class=&quot;headerlink&quot; title=&quot;结构&quot;&gt;&lt;/a&gt;结构&lt;/h1&gt;&lt;h2 id=&quot;主题结构&quot;&gt;&lt;a href=&quot;#主题结构&quot; class=&quot;headerlink&quot; title=&quot;主题结构&quot;&gt;&lt;/a&gt;主题结构&lt;/h2&gt;&lt;p&gt;Hexo主题的结构大体如下：&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;├── _config.yml&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;├── languages&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;│   ├── default.yml&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;│   └── zh-Hans.yml&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;├── layout&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;│   ├── achieve.swig&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;│   ├── category.swig&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;│   ├── index.swig&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;│   ├── _layout.swig&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;│   ├── page.swig&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;│   ├── _partials&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;│   ├── post.swig&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;│   └── tag.swig&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;└── &lt;span class=&quot;built_in&quot;&gt;source&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    ├── css&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    ├── fonts&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    ├── img&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    ├── js&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    └── vendors&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;首先有一个&lt;code&gt;_config.yml&lt;/code&gt;负责提供主题级别的配置，可以在&lt;code&gt;layout&lt;/code&gt;中通过&lt;code&gt;theme.xxx&lt;/code&gt;的形式进行调用。&lt;br&gt;然后&lt;code&gt;languages&lt;/code&gt;负责实现博客的i18N功能，如果博客没有多语言的需求，只需要实现一个&lt;code&gt;default.yml&lt;/code&gt;即可。&lt;br&gt;其次是最为重要的&lt;code&gt;layout&lt;/code&gt;文件夹，这个里面主要存放博客的结构，Hexo 引擎会使用指定的渲染引擎将&lt;code&gt;layout&lt;/code&gt;文件渲染成HTML页面。&lt;br&gt;最后是&lt;code&gt;source&lt;/code&gt;，把所有主题需要用到的资源，比如CSS，Fonts，JS等都存放到这个文件夹中。&lt;/p&gt;
&lt;p&gt;这个主题使用了&lt;a href=&quot;http://paularmstrong.github.io/swig/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;swig&lt;/a&gt;。&lt;/p&gt;
&lt;h2 id=&quot;页面结构&quot;&gt;&lt;a href=&quot;#页面结构&quot; class=&quot;headerlink&quot; title=&quot;页面结构&quot;&gt;&lt;/a&gt;页面结构&lt;/h2&gt;&lt;p&gt;页面结构分为两个维度，一者是我要呈现哪些页面，二者是每个页面上都有哪些内容。&lt;/p&gt;
&lt;h3 id=&quot;哪些页面？&quot;&gt;&lt;a href=&quot;#哪些页面？&quot; class=&quot;headerlink&quot; title=&quot;哪些页面？&quot;&gt;&lt;/a&gt;哪些页面？&lt;/h3&gt;&lt;p&gt;作为一个博客，主要需要的页面有以下这些：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;主页&lt;/li&gt;
&lt;li&gt;单页&lt;/li&gt;
&lt;li&gt;归档页面&lt;/li&gt;
&lt;li&gt;分类页面&lt;/li&gt;
&lt;li&gt;标签页面&lt;/li&gt;
&lt;li&gt;文章页&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;哪些内容？&quot;&gt;&lt;a href=&quot;#哪些内容？&quot; class=&quot;headerlink&quot; title=&quot;哪些内容？&quot;&gt;&lt;/a&gt;哪些内容？&lt;/h3&gt;&lt;p&gt;如果没有什么特别的设计，博客的页面大体上可以分为这几个部分：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;head：头部文件&lt;/li&gt;
&lt;li&gt;body：主体内容&lt;ul&gt;
&lt;li&gt;header：题图，导航栏等&lt;/li&gt;
&lt;li&gt;content： 内容&lt;/li&gt;
&lt;li&gt;footer：尾部的联系方式等&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&quot;实现&quot;&gt;&lt;a href=&quot;#实现&quot; class=&quot;headerlink&quot; title=&quot;实现&quot;&gt;&lt;/a&gt;实现&lt;/h1&gt;&lt;p&gt;前面讲到了 Hexo 的结构，下面来聊一聊具体的实现。&lt;/p&gt;
&lt;h2 id=&quot;原理&quot;&gt;&lt;a href=&quot;#原理&quot; class=&quot;headerlink&quot; title=&quot;原理&quot;&gt;&lt;/a&gt;原理&lt;/h2&gt;&lt;p&gt;Hexo 渲染的入口是&lt;code&gt;_layout.swig&lt;/code&gt;，所以一个主题至少需要实现一个&lt;code&gt;_layout.swig&lt;/code&gt;。&lt;br&gt;然后Hexo会遍历Hexo目录下&lt;code&gt;source&lt;/code&gt;文件夹中的所有Markdown文件，根据Markdown文件所指定的layout进行渲染，默认类型为&lt;code&gt;post&lt;/code&gt;。&lt;/p&gt;
&lt;h2 id=&quot;技巧&quot;&gt;&lt;a href=&quot;#技巧&quot; class=&quot;headerlink&quot; title=&quot;技巧&quot;&gt;&lt;/a&gt;技巧&lt;/h2&gt;&lt;h3 id=&quot;layout-swig结构&quot;&gt;&lt;a href=&quot;#layout-swig结构&quot; class=&quot;headerlink&quot; title=&quot;_layout.swig结构&quot;&gt;&lt;/a&gt;_layout.swig结构&lt;/h3&gt;&lt;p&gt;整体的结构基本如下：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;!doctype html&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;html&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;head&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#123;% include &amp;apos;_partials/head.swig&amp;apos; %&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;lt;title&amp;gt;&amp;#123;% block title %&amp;#125;&amp;#123;% endblock %&amp;#125;&amp;lt;/title&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;/head&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;body id=&amp;quot;home&amp;quot;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#123;% include &amp;apos;_partials/menu.swig&amp;apos; %&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;lt;div id=&amp;quot;wrap&amp;quot;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#123;% include &amp;apos;_partials/nav.swig&amp;apos; %&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#123;% include &amp;apos;_partials/header.swig&amp;apos; %&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;lt;div id=&amp;quot;start&amp;quot; class=&amp;quot;container content&amp;quot;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &amp;#123;% block content %&amp;#125;&amp;#123;% endblock %&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;lt;/div&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#123;% include &amp;apos;_partials/footer.swig&amp;apos; %&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;lt;/div&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;/body&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;/html&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;实现文章渲染&quot;&gt;&lt;a href=&quot;#实现文章渲染&quot; class=&quot;headerlink&quot; title=&quot;实现文章渲染&quot;&gt;&lt;/a&gt;实现文章渲染&lt;/h3&gt;&lt;p&gt;这个地方主要是借鉴了NexT主题的设计，实现了一个swig的宏来生成对应的文章。这个宏主要有两个参数，第一个是post对象，第二个是是否为主页。如果是主页就只显示简略的内容，如果不是就输出全文。&lt;/p&gt;
&lt;p&gt;判断的部分实现如下：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;% if is_index %&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#123;% if post.excerpt %&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#123;&amp;#123; post.excerpt &amp;#125;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;lt;a class=&amp;quot;&amp;quot; href=&amp;quot;&amp;#123;&amp;#123; url_for(post.path) &amp;#125;&amp;#125;&amp;quot;&amp;gt;Read more&amp;lt;/a&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#123;% endif %&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;% else %&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#123;&amp;#123; post.content &amp;#125;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;% endif %&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;用到的post页的参数可以&lt;a href=&quot;https://hexo.io/zh-cn/docs/variables.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;我翻译的中文文档&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&quot;分页插件&quot;&gt;&lt;a href=&quot;#分页插件&quot; class=&quot;headerlink&quot; title=&quot;分页插件&quot;&gt;&lt;/a&gt;分页插件&lt;/h3&gt;&lt;p&gt;Hexo 自己实现了一个分页插件，直接使用paginator函数即可。&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;% if page.prev or page.next %&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;lt;nav class=&amp;quot;pagination&amp;quot;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#123;&amp;#123; paginator(&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            prev_text: &amp;apos;&amp;lt;i class=&amp;quot;fa fa-angle-left&amp;quot;&amp;gt;&amp;lt;/i&amp;gt;&amp;apos;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            next_text: &amp;apos;&amp;lt;i class=&amp;quot;fa fa-angle-right&amp;quot;&amp;gt;&amp;lt;/i&amp;gt;&amp;apos;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            mid_size: 1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;) &amp;#125;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;lt;/nav&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;% endif %&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;评论系统&quot;&gt;&lt;a href=&quot;#评论系统&quot; class=&quot;headerlink&quot; title=&quot;评论系统&quot;&gt;&lt;/a&gt;评论系统&lt;/h3&gt;&lt;p&gt;对于Hexo来说，评论系统就是调用一个第三方的JS。所以只需要在合适的位置插入代码即可。&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;div id=&amp;quot;disqus_thread&amp;quot;&amp;gt;&amp;lt;/div&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;script&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    var disqus_config = function () &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        this.page.url = &amp;apos;&amp;#123;&amp;#123; page.permalink &amp;#125;&amp;#125;&amp;apos;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        this.page.identifier = &amp;apos;&amp;#123;&amp;#123; page.path &amp;#125;&amp;#125;&amp;apos;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    (function () &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        var d = document, s = d.createElement(&amp;apos;script&amp;apos;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        s.src = &amp;apos;//abc.disqus.com/embed.js&amp;apos;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        s.setAttribute(&amp;apos;data-timestamp&amp;apos;, +new Date());&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        (d.head || d.body).appendChild(s);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;)();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;/script&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h1 id=&quot;需要注意的坑&quot;&gt;&lt;a href=&quot;#需要注意的坑&quot; class=&quot;headerlink&quot; title=&quot;需要注意的坑&quot;&gt;&lt;/a&gt;需要注意的坑&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;&lt;code&gt;page.posts&lt;/code&gt;是按照时间排序的，但是&lt;code&gt;site.posts&lt;/code&gt;是无序的。&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&quot;参考资料&quot;&gt;&lt;a href=&quot;#参考资料&quot; class=&quot;headerlink&quot; title=&quot;参考资料&quot;&gt;&lt;/a&gt;参考资料&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://hexo.io/zh-cn/docs/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Hexo 官方中文文档&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&quot;更新日志&quot;&gt;&lt;a href=&quot;#更新日志&quot; class=&quot;headerlink&quot; title=&quot;更新日志&quot;&gt;&lt;/a&gt;更新日志&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;2016年06月30日 首次发布&lt;/li&gt;
&lt;/ul&gt;
</content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h1&gt;&lt;p&gt;曾经看过我的博客的同学大概都会发现，我的博客再一次大变样了~&lt;br&gt;这一次的更新其实酝酿了很久，早在刚开始用Hexo的时候就想着要有一个自己的主题。但是那个时候觉得这是一件很难的事情，要懂HTML，CSS，JavaScript，还要懂Swig，Ejs等模板语言，还要懂Hexo的内部原理，于是就一直搁置了。在独立实现了一个&lt;a href=&quot;https://xuanwo.org/2016/06/16/jade_ims/&quot;&gt;完整的项目&lt;/a&gt;之后，我认为自己已经有这样的能力了，于是决定正式开始。&lt;br&gt;在我看来的话，Hexo的使用者大概分为三个层次：第一种用别人的主题，第二种模仿现有的主题，第三种自己独立开发。我原来是第一种，在Next的基础上做了很多改动，这一次进入到了第二个层次。我找了一套自我感觉还不错的模板，然后套用它的CSS设定和页面结构，就成了我现在的主题。&lt;br&gt;利用两天学习和工作的闲暇时间，我大体上完成了这个主题。做得比较糙，很多细节还有待优化，但是我已经急不可耐地想要正式上线了，笑。在未来的话，我希望能把一些配置都能整理出来，优化一下代码，然后开源这个主题，希望大家能够喜欢~&lt;br&gt;庆祝的话已经说的差不多了，下面来讲一讲如何开发一个Hexo主题。&lt;/p&gt;
    
    </summary>
    
      <category term="Develop" scheme="https://xuanwo.org/categories/Develop/"/>
    
    
      <category term="Hexo" scheme="https://xuanwo.org/tags/Hexo/"/>
    
      <category term="Blog" scheme="https://xuanwo.org/tags/Blog/"/>
    
      <category term="Nodejs" scheme="https://xuanwo.org/tags/Nodejs/"/>
    
      <category term="HTML" scheme="https://xuanwo.org/tags/HTML/"/>
    
      <category term="JavaScript" scheme="https://xuanwo.org/tags/JavaScript/"/>
    
  </entry>
  
  <entry>
    <title>马可波罗珠宝进销存系统开发手记</title>
    <link href="https://xuanwo.org/2016/06/16/jade_ims/"/>
    <id>https://xuanwo.org/2016/06/16/jade_ims/</id>
    <published>2016-06-16T22:00:00.000Z</published>
    <updated>2016-07-14T14:10:22.682Z</updated>
    
    <content type="html">&lt;p&gt;&lt;img src=&quot;/imgs/develop/jade-ims-index.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;h1 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h1&gt;&lt;p&gt;这个项目从我们这个学期开了&lt;strong&gt;系统分析与设计&lt;/strong&gt;这门课之后就开始了，首次创建这个项目是在3月26号，实际上真正的开发时间集中在6月上旬。差不多用两个星期的闲暇时间时间完成了这个简单的进销存系统。这个系统基于Flask框架，使用SQLite3数据库，前端则是使用Bootstrap框架，实现了包括客户，库存，销售，进货等管理子系统。说是管理，其实也就是简单的增加和删除而已。&lt;br&gt;前人经常说，不要重复造轮子。既然有类似于Odoo这样强大的ERP系统珠玉在前，我为什么要再自己造一个功能简单，甚至根本不会有人用的轮子呢？从前我确实是这么想的，但是稍微有一点工作经验之后发现再造轮子的原因有两条：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;作为一个处在知识积累阶段的学生而言，再造轮子很有必要。不造一次轮子，你就永远不会明白轮子内部的真实构造。很多技术虽然看起来简单，但是想要有一个完善且健壮的实现却有很多坑需要踩。踩这些坑的过程，也正是一个技术人员成长最快的过程。&lt;/li&gt;
&lt;li&gt;别人的轮子终究是别人的。你不知道这个轮子最大能承受多少压力，你也不知道这个轮子在什么样的情况下会爆胎。当一个轮子装上企业呼呼向前的列车，再要想把它替换下来是一件很难且成本很高的事情。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;接下来，讲讲造这个轮子的一些经历吧~&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h1 id=&quot;项目启动&quot;&gt;&lt;a href=&quot;#项目启动&quot; class=&quot;headerlink&quot; title=&quot;项目启动&quot;&gt;&lt;/a&gt;项目启动&lt;/h1&gt;&lt;p&gt;正如前言中说的，这个项目是系统分析与设计这门课的课程设计，也是贯穿着整个学期的一个主旋律。早在这学期开学之初，我们就知道了自己需要做这样的一个系统。经历了上个学期各种技术炫了半天，最后却只是抄袭各种开源项目草草实现的&lt;a href=&quot;https://xuanwo.org/2015/06/30/together-project/&quot;&gt;失败&lt;/a&gt;，这个学期我务实了很多。从最开始的讨论就一直跟组员强调技术的可行性，基本上否决了所有试图增大项目复杂度的建议，把主题定在了一个纯粹的进销存管理系统。之所以如此，是因为我的观念发生了很大的变化：原来觉得技术的先进是最重要的，开发项目一定要用最现代的技术，最炫目的特效；现在觉得哪怕是一个用VB写出来的能稳定运行的丑陋系统都要胜过采用了种种最新潮技术却漏洞百出根本没法运行的“先进”系统。&lt;br&gt;在讨论到最极端的时候，我甚至想只做一个仓库的管理系统，只包括进库和出库这样的简单功能。这样的态度曾经闹得有一次讨论直接不欢而散，好在组员都是非常Nice的人，在我主动表达歉意之后大度地表示没什么。经过多次讨论之后，我们终于达成了共识，要做一个进销存系统，功能尽可能简单，在实现基础功能的前提下，再考虑加入新的功能。&lt;br&gt;接下来的事情就没有什么大的分歧了，整体系统采用B/S架构，开发语言选用我个人比较喜欢的Python，使用Flask框架，数据库选用无需配置的SQLite。然后服务器选择阿里云的学生机，系统选择成熟稳定的CentOS 7.2，Web Server选用Nginx，也就是我个人目前比较喜欢的开发平台——LESP(Linux, Nginx, SQLite, Python)。&lt;/p&gt;
&lt;h1 id=&quot;项目细节&quot;&gt;&lt;a href=&quot;#项目细节&quot; class=&quot;headerlink&quot; title=&quot;项目细节&quot;&gt;&lt;/a&gt;项目细节&lt;/h1&gt;&lt;p&gt;下面再介绍一下项目的细节。&lt;/p&gt;
&lt;h2 id=&quot;设计模式&quot;&gt;&lt;a href=&quot;#设计模式&quot; class=&quot;headerlink&quot; title=&quot;设计模式&quot;&gt;&lt;/a&gt;设计模式&lt;/h2&gt;&lt;p&gt;项目大体上采用了MVC的思想，不过在具体的实现上并没有太过纠结于概念上的东西。所有的网页模板都在&lt;code&gt;templates&lt;/code&gt;文件夹下，静态资源都扔到了&lt;code&gt;static&lt;/code&gt;目录，使用一个&lt;code&gt;models.py&lt;/code&gt;模块来单独存放所有的数据库定义，然后所有的路由以及操作都在&lt;code&gt;views&lt;/code&gt;中实现。对于我来说，快速地实现需求才是头等大事，是不是符合正统的MVC理念并不是十分重要。实际上现在这样的结构开发起来感觉也蛮顺手的，需要调整前端的样式和表单就在&lt;code&gt;templates&lt;/code&gt;文件夹下操作，需要修改程序的逻辑就去&lt;code&gt;views&lt;/code&gt;，他们基本上是一一对应的关系。&lt;a href=&quot;https://spacewander.github.io/explore-flask-zh/4-organizing_your_project.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;这里&lt;/a&gt;有更加清晰的讲解，值得一看。&lt;/p&gt;
&lt;h2 id=&quot;项目中的问题-amp-解决方案&quot;&gt;&lt;a href=&quot;#项目中的问题-amp-解决方案&quot; class=&quot;headerlink&quot; title=&quot;项目中的问题&amp;amp;解决方案&quot;&gt;&lt;/a&gt;项目中的问题&amp;amp;解决方案&lt;/h2&gt;&lt;h3 id=&quot;在Flask框架中同时使用蓝图与Flask-SQLAlchemy&quot;&gt;&lt;a href=&quot;#在Flask框架中同时使用蓝图与Flask-SQLAlchemy&quot; class=&quot;headerlink&quot; title=&quot;在Flask框架中同时使用蓝图与Flask_SQLAlchemy&quot;&gt;&lt;/a&gt;在Flask框架中同时使用蓝图与Flask_SQLAlchemy&lt;/h3&gt;&lt;p&gt;&lt;a href=&quot;https://segmentfault.com/q/1010000005640527&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://segmentfault.com/q/1010000005640527&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;感谢@Ethan和@，他们强有力地向我证明了有师傅带路的好处。&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;这个问题纯粹是因为一直以来都是一个脚本Boy，没有系统性的学习过软件开发导致的。很显然，按照我原来的代码去产生实例，就会导致循环导入的错误。想要解决这样的问题，就需要使用工厂函数去生成实例，而不是自己去生成它。&lt;/p&gt;
&lt;p&gt;在&lt;code&gt;__init__.py&lt;/code&gt;中添加一个&lt;code&gt;create_app()&lt;/code&gt;函数，在函数中进行参数配置，初始化和导入蓝图的操作：&lt;/p&gt;
&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;bps = [&lt;span class=&quot;string&quot;&gt;&#39;jade_ims.views.dashboard:dashboard&#39;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       &lt;span class=&quot;string&quot;&gt;&#39;jade_ims.views.install:install&#39;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       &lt;span class=&quot;string&quot;&gt;&#39;jade_ims.views.login:login&#39;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       &lt;span class=&quot;string&quot;&gt;&#39;jade_ims.views.sale:sale&#39;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       &lt;span class=&quot;string&quot;&gt;&#39;jade_ims.views.customer:customer&#39;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       &lt;span class=&quot;string&quot;&gt;&#39;jade_ims.views.purchase.inputbill:inputbill&#39;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       &lt;span class=&quot;string&quot;&gt;&#39;jade_ims.views.purchase.supplier:supplier&#39;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       &lt;span class=&quot;string&quot;&gt;&#39;jade_ims.views.stock.enterstockbill:enterstockbill&#39;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       &lt;span class=&quot;string&quot;&gt;&#39;jade_ims.views.stock.leavestockbill:leavestockbill&#39;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       &lt;span class=&quot;string&quot;&gt;&#39;jade_ims.views.stock.stock:stock&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       ]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;create_app&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt;:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    app = Flask(__name__)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    app.config.from_object(&lt;span class=&quot;string&quot;&gt;&#39;config&#39;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    app.config.from_pyfile(&lt;span class=&quot;string&quot;&gt;&#39;config.py&#39;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    db.init_app(app)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; path &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; bps:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        bp = import_string(path)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        app.register_blueprint(bp)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; app&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;Flask如何优雅地重定向所有未登录用户到登陆界面&quot;&gt;&lt;a href=&quot;#Flask如何优雅地重定向所有未登录用户到登陆界面&quot; class=&quot;headerlink&quot; title=&quot;Flask如何优雅地重定向所有未登录用户到登陆界面&quot;&gt;&lt;/a&gt;Flask如何优雅地重定向所有未登录用户到登陆界面&lt;/h3&gt;&lt;p&gt;&lt;a href=&quot;https://segmentfault.com/q/1010000005645821&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://segmentfault.com/q/1010000005645821&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;感谢@zwillon和@igaozp&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;有一个Feature是想要把所有未登录的用户都重定向到登录页面。当时手头上的技术方案主要有两种：第一种是自己包装一个装饰器，并添加在每一个视图函数中；第二种是使用第三方库&lt;code&gt;Flask-Login&lt;/code&gt;，在视图函数中添加&lt;code&gt;@login_required&lt;/code&gt;。但是感觉姿势都不怎么优雅，因为我需要不断地在视图函数中添加这个装饰器，不太符合DRY(Don’t Repeat Yourself)准则。&lt;br&gt;SF的老司机给了我一个相当优雅的方案——Hook到app的&lt;code&gt;before_request&lt;/code&gt;方法。也就是这样来实现：&lt;/p&gt;
&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;@app.before_request&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;check_need_login&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt;:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;# 检查登录的逻辑&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;pass&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;我第一次是这样实现的：&lt;/p&gt;
&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;@app.before_request&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;check_need_login&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt;:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&#39;logged_in&#39;&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;not&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; session:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; redirect(url_for(&lt;span class=&quot;string&quot;&gt;&#39;login.user_login&#39;&lt;/span&gt;))&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;这样就带来了一个问题，对于未登录的用户来说，所有页面都会不断地重定向从而导致整个应用崩溃。因此还需要指定在某些情况下停止重定向，所以我们还需要修改一下&lt;code&gt;check_need_login&lt;/code&gt;的逻辑：&lt;/p&gt;
&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;@app.before_request&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;check_need_login&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt;:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&#39;logged_in&#39;&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;not&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; session &lt;span class=&quot;keyword&quot;&gt;and&lt;/span&gt; request.endpoint &lt;span class=&quot;keyword&quot;&gt;not&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; (&lt;span class=&quot;string&quot;&gt;&#39;login.user_login&#39;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;static&#39;&lt;/span&gt;):&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; redirect(url_for(&lt;span class=&quot;string&quot;&gt;&#39;login.user_login&#39;&lt;/span&gt;))&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;当&lt;code&gt;session&lt;/code&gt;中没有&lt;code&gt;logged_in&lt;/code&gt;字段且&lt;code&gt;endpoint&lt;/code&gt;不是&lt;code&gt;user_login&lt;/code&gt;和&lt;code&gt;static&lt;/code&gt;的时候就重定向到登录页面，这样就比较优雅地解决了重定向未登录用户到登陆界面的需求。&lt;/p&gt;
&lt;h3 id=&quot;flask-sqlalchemy-插入数据时发生错误后如何处理&quot;&gt;&lt;a href=&quot;#flask-sqlalchemy-插入数据时发生错误后如何处理&quot; class=&quot;headerlink&quot; title=&quot;flask_sqlalchemy 插入数据时发生错误后如何处理&quot;&gt;&lt;/a&gt;flask_sqlalchemy 插入数据时发生错误后如何处理&lt;/h3&gt;&lt;p&gt;&lt;a href=&quot;https://segmentfault.com/q/1010000005647431&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://segmentfault.com/q/1010000005647431&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;在实际开发的过程中发现，如果&lt;code&gt;db.session&lt;/code&gt;中添加的记录有问题，在commit的时候会出现一个报错。所以我们需要在出错的时候进行一些处理，以保证程序出错之后还能够正常地运行。网友 @学不会编程的永仲 给出的回答是我应该在form中验证数据的正确性。虽然我相信他的理解可能是正确的，但是不太符合我的哲学，我更加倾向于&lt;strong&gt;让它崩溃，然后处理异常&lt;/strong&gt;而不是&lt;strong&gt;事先处理好所有的错误&lt;/strong&gt;。&lt;br&gt;通过查阅文档，了解到&lt;code&gt;db.session.rollback()&lt;/code&gt;这一函数可以在出错是进行回滚，于是最后的实现变成了这样：&lt;/p&gt;
&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;@supplier.route(&#39;/purchase/supplier/add&#39;, methods=[&#39;POST&#39;])&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;add_supplier&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt;:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    form = request.form&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; request.method == &lt;span class=&quot;string&quot;&gt;&#39;POST&#39;&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        print(form)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        supplier = Supplier(form[&lt;span class=&quot;string&quot;&gt;&#39;supplier_name&#39;&lt;/span&gt;],&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                            form[&lt;span class=&quot;string&quot;&gt;&#39;supplier_constract&#39;&lt;/span&gt;],&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                            form[&lt;span class=&quot;string&quot;&gt;&#39;supplier_phone&#39;&lt;/span&gt;],&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                            form[&lt;span class=&quot;string&quot;&gt;&#39;supplier_address&#39;&lt;/span&gt;],&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                            form[&lt;span class=&quot;string&quot;&gt;&#39;supplier_remark&#39;&lt;/span&gt;])&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;try&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            db.session.add(supplier)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            db.session.commit()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            flash(&lt;span class=&quot;string&quot;&gt;&#39;供应商添加成功！&#39;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;success&#39;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;except&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            db.session.rollback()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            flash(&lt;span class=&quot;string&quot;&gt;&#39;输入不合法，请重新输入！&#39;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;danger&#39;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; redirect(url_for(&lt;span class=&quot;string&quot;&gt;&#39;supplier.list_supplier&#39;&lt;/span&gt;))&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h1 id=&quot;项目总结&quot;&gt;&lt;a href=&quot;#项目总结&quot; class=&quot;headerlink&quot; title=&quot;项目总结&quot;&gt;&lt;/a&gt;项目总结&lt;/h1&gt;&lt;p&gt;随着答辩的完成，这个项目进入了尾声。因为很多东西需要去学习，有新的东西需要去探索，所以这个项目也很有可能不会再继续维护了。那么这个项目开源出来的价值在哪里呢？我想，这个项目虽然简单，但它毕竟还算是一个完整的Flask项目，除了&lt;code&gt;flask_sqlalchemy&lt;/code&gt;之外没有多余的依赖，非常适合一个跟我一样的Python初学者进行入门学习。如果说有人能够因为这个项目少走一些弯路，少在一些死胡同浪费时间，我想这个项目的价值就已经实现了。如果再往大一点来说，开源的价值也就实现了。&lt;br&gt;如果要我自评的话，我觉得这样的项目应该有60分。之所以给一个及格分，是因为这个项目毕竟实现了需求的大多数功能，也有好好地跑在阿里云的服务器上。丢分的话，大体上是因为这个项目毫无注释，没有安装文档，也没有配置手册，很多东西都是硬编码到了代码中。不仅如此，编程的风格也是相当的不佳，在模板部分缺乏良好的顶层设计，出现了大量的重复代码。这些问题希望自己能在下一个项目中得到一些改善。&lt;br&gt;Anyway，随着这个项目的结束，我的大三生涯也要结束了。接下来是波澜壮阔的实习阶段，希望自己能够在实习的时候多踩一些坑，多走一些弯路，多&lt;br&gt;得到一些来自“长者”的指点。&lt;/p&gt;
&lt;h1 id=&quot;参考资源&quot;&gt;&lt;a href=&quot;#参考资源&quot; class=&quot;headerlink&quot; title=&quot;参考资源&quot;&gt;&lt;/a&gt;参考资源&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://docs.jinkan.org/docs/flask/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Flask 中文文档 &lt;em&gt;文档略有过时，代码以Github上为准&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://spacewander.github.io/explore-flask-zh/index.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Flask 之旅&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://docs.jinkan.org/docs/flask-sqlalchemy/index.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Flask-SQLALchemy 中文文档&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&quot;更新日志&quot;&gt;&lt;a href=&quot;#更新日志&quot; class=&quot;headerlink&quot; title=&quot;更新日志&quot;&gt;&lt;/a&gt;更新日志&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;2016年06月17日 首次发布&lt;/li&gt;
&lt;/ul&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;/imgs/develop/jade-ims-index.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;h1 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h1&gt;&lt;p&gt;这个项目从我们这个学期开了&lt;strong&gt;系统分析与设计&lt;/strong&gt;这门课之后就开始了，首次创建这个项目是在3月26号，实际上真正的开发时间集中在6月上旬。差不多用两个星期的闲暇时间时间完成了这个简单的进销存系统。这个系统基于Flask框架，使用SQLite3数据库，前端则是使用Bootstrap框架，实现了包括客户，库存，销售，进货等管理子系统。说是管理，其实也就是简单的增加和删除而已。&lt;br&gt;前人经常说，不要重复造轮子。既然有类似于Odoo这样强大的ERP系统珠玉在前，我为什么要再自己造一个功能简单，甚至根本不会有人用的轮子呢？从前我确实是这么想的，但是稍微有一点工作经验之后发现再造轮子的原因有两条：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;作为一个处在知识积累阶段的学生而言，再造轮子很有必要。不造一次轮子，你就永远不会明白轮子内部的真实构造。很多技术虽然看起来简单，但是想要有一个完善且健壮的实现却有很多坑需要踩。踩这些坑的过程，也正是一个技术人员成长最快的过程。&lt;/li&gt;
&lt;li&gt;别人的轮子终究是别人的。你不知道这个轮子最大能承受多少压力，你也不知道这个轮子在什么样的情况下会爆胎。当一个轮子装上企业呼呼向前的列车，再要想把它替换下来是一件很难且成本很高的事情。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;接下来，讲讲造这个轮子的一些经历吧~&lt;/p&gt;
    
    </summary>
    
      <category term="Develop" scheme="https://xuanwo.org/categories/Develop/"/>
    
    
      <category term="Information" scheme="https://xuanwo.org/tags/Information/"/>
    
      <category term="项目" scheme="https://xuanwo.org/tags/%E9%A1%B9%E7%9B%AE/"/>
    
      <category term="Python" scheme="https://xuanwo.org/tags/Python/"/>
    
      <category term="Flask" scheme="https://xuanwo.org/tags/Flask/"/>
    
      <category term="HTML" scheme="https://xuanwo.org/tags/HTML/"/>
    
      <category term="JavaScript" scheme="https://xuanwo.org/tags/JavaScript/"/>
    
  </entry>
  
  <entry>
    <title>在QingCloud上部署弹性扩容的OwnCloud</title>
    <link href="https://xuanwo.org/2016/06/03/owncloud-on-qingcloud/"/>
    <id>https://xuanwo.org/2016/06/03/owncloud-on-qingcloud/</id>
    <published>2016-06-03T08:00:00.000Z</published>
    <updated>2016-07-14T14:10:22.682Z</updated>
    
    <content type="html">&lt;h1 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h1&gt;&lt;p&gt;因为实在不满意百度云的一些缺陷，我们最终决定部署一套团队内部使用的云存储平台，用于团队协作及资料长期存储。希望能够达到如下目标：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;数据安全性高&lt;/li&gt;
&lt;li&gt;权限控制能力强&lt;/li&gt;
&lt;li&gt;分享功能更强，可以设置密码和过期时间等&lt;/li&gt;
&lt;li&gt;允许匿名第三方上传数据&lt;/li&gt;
&lt;li&gt;没有文件上传大小限制&lt;/li&gt;
&lt;li&gt;支持多平台同步功能&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;综合考量各开源项目之后，我最终选定基于QingCloud部署一套开源存储项目OwnCloud。&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h1 id=&quot;部署&quot;&gt;&lt;a href=&quot;#部署&quot; class=&quot;headerlink&quot; title=&quot;部署&quot;&gt;&lt;/a&gt;部署&lt;/h1&gt;&lt;p&gt;在部署之前，我们首先要考虑这套系统大概会有多少人用，会使用多大的空间，需要多少带宽，服务器的配置等问题。我们现在有几个TB的数据，10人使用，未来人数无法预估，各资源使用量也无法预估。但是非常有意思的事情是，在青云QingCloud平台上，一切都是可以动态扩容的，所以我完全可以以最少的资源验证服务是否符合需求，然后再增加服务所使用的资源。&lt;/p&gt;
&lt;p&gt;整个部署过程概括为如下4步：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;验证功能及预估花费&lt;/li&gt;
&lt;li&gt;在QingCloud上创建主机、网络等资源并修改配置&lt;/li&gt;
&lt;li&gt;安装OwnCloud环境&lt;/li&gt;
&lt;li&gt;使用LVM管理分区，实现空间动态扩容&lt;/li&gt;
&lt;li&gt;在网页端安装OwnCloud&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;资源编排&quot;&gt;&lt;a href=&quot;#资源编排&quot; class=&quot;headerlink&quot; title=&quot;资源编排&quot;&gt;&lt;/a&gt;资源编排&lt;/h2&gt;&lt;p&gt;在实际生成需要的资源之前，我先通过青云QingCloud的提供的资源编排功能看看青云是否能够满足我们的需求以及搭建这一套服务需要多少钱：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/imgs/opinion/qingcloud-owncloud-1.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;如图所示，我们在一个私有网络中创建一台主机和一个数据库，并为整个VPC网络分配了一个公网IP和防火墙。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/imgs/opinion/qingcloud-owncloud-tp.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;如图，整套资源预计需要每小时0.56元。&lt;/p&gt;
&lt;h2 id=&quot;创建并修改配置&quot;&gt;&lt;a href=&quot;#创建并修改配置&quot; class=&quot;headerlink&quot; title=&quot;创建并修改配置&quot;&gt;&lt;/a&gt;创建并修改配置&lt;/h2&gt;&lt;p&gt;生成模板之后，点击创建。等待大概一分钟之后，所有资源全部创建完毕。在SSH连接上服务器开始实际的配置工作之前，需要先修改VPC的设置。&lt;/p&gt;
&lt;h3 id=&quot;添加端口转发规则&quot;&gt;&lt;a href=&quot;#添加端口转发规则&quot; class=&quot;headerlink&quot; title=&quot;添加端口转发规则&quot;&gt;&lt;/a&gt;添加端口转发规则&lt;/h3&gt;&lt;p&gt;我需要将来自公网的流量转发到我的主机上，主要有两条，一个是SSH，一个是HTTP。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/imgs/opinion/qingcloud-owncloud-2.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;主机的内网地址是&lt;code&gt;192.168.0.2&lt;/code&gt;，所以需要把所有来自22和80的端口都转发到这个地址。&lt;/p&gt;
&lt;h3 id=&quot;添加防火墙规则&quot;&gt;&lt;a href=&quot;#添加防火墙规则&quot; class=&quot;headerlink&quot; title=&quot;添加防火墙规则&quot;&gt;&lt;/a&gt;添加防火墙规则&lt;/h3&gt;&lt;p&gt;出于安全性考虑，青云的防火墙默认只开放了22和ICMP。为了可以正常访问到主机，还需要添加80端口的例外规则：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/imgs/opinion/qingcloud-owncloud-3.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;我们看到青云在右边提供了常用端口的配置，选择http即可。&lt;/p&gt;
&lt;h2 id=&quot;安装OwnCloud&quot;&gt;&lt;a href=&quot;#安装OwnCloud&quot; class=&quot;headerlink&quot; title=&quot;安装OwnCloud&quot;&gt;&lt;/a&gt;安装OwnCloud&lt;/h2&gt;&lt;p&gt;OwnCloud为CentOS平台提供了二进制的包，没有特殊需求的话，直接使用即可。&lt;br&gt;首先添加OwnCloud官方的Key文件：&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;rpm --import https://download.owncloud.org/download/repositories/stable/CentOS_7/repodata/repomd.xml.key&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;然后添加OwnCloud的repo：&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;wget http://download.owncloud.org/download/repositories/stable/CentOS_7/ce:stable.repo -O /etc/yum.repos.d/ce:stable.repo&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;更新repo之后开始安装：&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;yum clean expire-cache&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;yum install owncloud&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;yum将会自动处理依赖，如果速度不佳的话，可以直接将包下载到本地：&lt;a href=&quot;http://download.owncloud.org/download/repositories/stable/CentOS_7/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;直接下载&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;启用httpd，并测试是否安装正确&quot;&gt;&lt;a href=&quot;#启用httpd，并测试是否安装正确&quot; class=&quot;headerlink&quot; title=&quot;启用httpd，并测试是否安装正确&quot;&gt;&lt;/a&gt;启用httpd，并测试是否安装正确&lt;/h2&gt;&lt;p&gt;OwnCloud默认使用Apache作为Web服务器，上一步已经安装了Apache，接下来需要启用它：&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;systemctl start httpd&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;如需要开机自行启动，可以输入：&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;systemctl &lt;span class=&quot;built_in&quot;&gt;enable&lt;/span&gt; httpd&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;然后在浏览器中访问：&lt;code&gt;http://&amp;lt;your ip&amp;gt;/owncloud&lt;/code&gt;，如果出现OwnCloud的安装界面，说明已经配置成功了。&lt;/p&gt;
&lt;h2 id=&quot;使用LVM管理分区，实现空间动态扩容&quot;&gt;&lt;a href=&quot;#使用LVM管理分区，实现空间动态扩容&quot; class=&quot;headerlink&quot; title=&quot;使用LVM管理分区，实现空间动态扩容&quot;&gt;&lt;/a&gt;使用LVM管理分区，实现空间动态扩容&lt;/h2&gt;&lt;p&gt;OwnCloud在安装的时候只能选择一个目录，为了能够实现空间的动态扩容，需要使用LVM创建一个逻辑分区并挂载到指定的数据目录下。&lt;/p&gt;
&lt;p&gt;首先在青云QingCloud的控制台中创建一块硬盘，然后挂载到主机中。之后，就能够通过&lt;code&gt;/dev/sdb&lt;/code&gt;等形式来访问这块硬盘。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;需要注意的是，主机在每次重启的时候硬盘的顺序可能会发生改变，所以如果需要自动挂载的话，需要使用UUID或者LABLE的方式来指定硬盘，不能使用设备名。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;接下来需要在CentOS下使用LVM来配置分区，实现分区的动态扩容。&lt;/p&gt;
&lt;h3 id=&quot;安装LVM工具&quot;&gt;&lt;a href=&quot;#安装LVM工具&quot; class=&quot;headerlink&quot; title=&quot;安装LVM工具&quot;&gt;&lt;/a&gt;安装LVM工具&lt;/h3&gt;&lt;p&gt;青云QingCloud提供的CentOS 7.2默认映像是没有LVM工具的，所以首先需要安装它：&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;yum install lvm2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;创建物理卷（PV）&quot;&gt;&lt;a href=&quot;#创建物理卷（PV）&quot; class=&quot;headerlink&quot; title=&quot;创建物理卷（PV）&quot;&gt;&lt;/a&gt;创建物理卷（PV）&lt;/h3&gt;&lt;p&gt;首先检测能够被作为物理卷的设备：&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;lvmdiskscan&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;然后在指定设备上创建物理卷，所有需要用到的设备都需要执行如下命令：&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;pvcreate /dev/sdb&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;然后查看已经创建好的物理卷：&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;pvdisplay&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;输出大概如下：&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;--- Physical volume ---&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; PV Name               /dev/sdb&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; PV Size               1000.00 GiB / not usable 4.00 MiB&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; Allocatable           yes&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; PE Size               4.00 MiB&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; Total PE              255999&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; Free PE               255999&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; Allocated PE          0&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; PV UUID               EHIeTJ-WBPv-rQkQ-LnuI-0IWE-SM4z-bMPAWx&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;创建卷组（VG）&quot;&gt;&lt;a href=&quot;#创建卷组（VG）&quot; class=&quot;headerlink&quot; title=&quot;创建卷组（VG）&quot;&gt;&lt;/a&gt;创建卷组（VG）&lt;/h3&gt;&lt;p&gt;物理卷创建完毕后，需要创建一个卷组来实现物理卷的统一管理：&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;vgcreate owncloud-vg /dev/sdb /dev/sdc /dev/sdd&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;后续如果需要扩展的话，可以使用如下命令：&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;vgextend owncloud-vg /dev/sde&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;同样地，使用&lt;code&gt;vgdisplay&lt;/code&gt;来查看创建好的卷组：&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;--- Volume group ---&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; VG Name               owncloud-vg&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; Format                lvm2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; Metadata Areas        1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; Metadata Sequence No  2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; VG Access             &lt;span class=&quot;built_in&quot;&gt;read&lt;/span&gt;/write&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; VG Status             resizable&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; MAX LV                0&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; Cur LV                1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; Open LV               1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; Max PV                0&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; Cur PV                1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; Act PV                1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; VG Size               1000.00 GiB&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; PE Size               4.00 MiB&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; Total PE              255999&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; Alloc PE / Size       230400 / 900.00 GiB&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; Free  PE / Size       25599 / 100.00 GiB&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; VG UUID               xCCtSR-QFcZ-StcI-HM7O-KDAz-PvMC-EgYcSV&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;创建逻辑卷（LV）&quot;&gt;&lt;a href=&quot;#创建逻辑卷（LV）&quot; class=&quot;headerlink&quot; title=&quot;创建逻辑卷（LV）&quot;&gt;&lt;/a&gt;创建逻辑卷（LV）&lt;/h3&gt;&lt;p&gt;然后就可以开始创建逻辑卷了：&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;lvcreate -L 900G owncloud-vg -n owncloud-data&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;创建完毕后，就可以通过&lt;code&gt;/dev/mapper/owncloud--vg-owncloud--data&lt;/code&gt;或者&lt;code&gt;/dev/owncloud-vg/owncloud-data&lt;/code&gt;来访问这个设备了。&lt;/p&gt;
&lt;p&gt;如果需要扩大逻辑卷，可以使用：&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;lvextend -L 1000G /dev/owncloud-vg/owncloud-data&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;确认扩展成功后，再更新文件系统：&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;resize2fs /dev/owncloud-vg/owncloud-data&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;创建文件系统并挂载&quot;&gt;&lt;a href=&quot;#创建文件系统并挂载&quot; class=&quot;headerlink&quot; title=&quot;创建文件系统并挂载&quot;&gt;&lt;/a&gt;创建文件系统并挂载&lt;/h3&gt;&lt;p&gt;在逻辑卷上创建一个ext4分区：&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;mkfs.ext4 /dev/mapper/owncloud--vg-owncloud--data&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;然后将分区挂载到期望的目录下，比如&lt;code&gt;/data&lt;/code&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;mount /dev/mapper/owncloud--vg-owncloud--data /data&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;修改文件夹权限&quot;&gt;&lt;a href=&quot;#修改文件夹权限&quot; class=&quot;headerlink&quot; title=&quot;修改文件夹权限&quot;&gt;&lt;/a&gt;修改文件夹权限&lt;/h2&gt;&lt;p&gt;为了OwnCloud能够正确读写数据分区，需要修改&lt;code&gt;/data&lt;/code&gt;的所有者和权限：&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;chown -R apache:apache /data&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;chmod 775 /data -R&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;网页安装OwnCloud&quot;&gt;&lt;a href=&quot;#网页安装OwnCloud&quot; class=&quot;headerlink&quot; title=&quot;网页安装OwnCloud&quot;&gt;&lt;/a&gt;网页安装OwnCloud&lt;/h2&gt;&lt;p&gt;全部配置完毕后，可以开始在网页进行OwnCloud安装了。&lt;/p&gt;
&lt;p&gt;管理员帐号： 自定义&lt;br&gt;管理员密码： 自定义&lt;br&gt;数据路径：&lt;code&gt;/data&lt;/code&gt;&lt;br&gt;数据库用户：&lt;code&gt;root&lt;/code&gt;&lt;br&gt;数据库密码：&lt;code&gt;&amp;lt;your password&amp;gt;&lt;/code&gt;&lt;br&gt;数据库名称自定义，比如：&lt;code&gt;owncloud&lt;/code&gt;&lt;br&gt;数据库地址：&lt;code&gt;&amp;lt;your rdb ip&amp;gt;&lt;/code&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;在创建RDB时，系统会自动用相同的密码创建Root用户。OwnCloud在安装时需要创建一个新的账户来进行管理，而青云提供的默认用户没有这样的权限。因此需要使用Root用户而不是创建时指定的用户。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;提示创建完毕后，就可以使用管理员用户登陆了。&lt;/p&gt;
&lt;h1 id=&quot;维护&quot;&gt;&lt;a href=&quot;#维护&quot; class=&quot;headerlink&quot; title=&quot;维护&quot;&gt;&lt;/a&gt;维护&lt;/h1&gt;&lt;h2 id=&quot;自动备份&quot;&gt;&lt;a href=&quot;#自动备份&quot; class=&quot;headerlink&quot; title=&quot;自动备份&quot;&gt;&lt;/a&gt;自动备份&lt;/h2&gt;&lt;p&gt;一个存储类的应用，必须要有自动备份的功能，保证用户在最坏的情况下都能找回他们的数据，对于存储着工作资料的私有云存储而言更是如此。所以，需要对主机，硬盘和数据库进行定时备份。&lt;/p&gt;
&lt;h3 id=&quot;主机和硬盘&quot;&gt;&lt;a href=&quot;#主机和硬盘&quot; class=&quot;headerlink&quot; title=&quot;主机和硬盘&quot;&gt;&lt;/a&gt;主机和硬盘&lt;/h3&gt;&lt;p&gt;青云QingCloud 提供了一个叫定时器的功能，可以设置在每天的三点重复执行备份任务。&lt;/p&gt;
&lt;p&gt;首先创建一个定时器，每天3：00重复执行：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/imgs/opinion/qingcloud-owncloud-backup-1.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;然后在该定时器中添加对应的定时器任务：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/imgs/opinion/qingcloud-owncloud-backup-2.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;选中需要备份的主机和硬盘即可。&lt;/p&gt;
&lt;h3 id=&quot;数据库&quot;&gt;&lt;a href=&quot;#数据库&quot; class=&quot;headerlink&quot; title=&quot;数据库&quot;&gt;&lt;/a&gt;数据库&lt;/h3&gt;&lt;p&gt;青云QingCloud 上的数据库自带自动备份功能，只需要开启它。&lt;/p&gt;
&lt;p&gt;在需要备份的数据库上右击，选择&lt;code&gt;修改自动备份策略&lt;/code&gt;：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/imgs/opinion/qingcloud-owncloud-backup-3.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;青云QingCloud 首次备份是全量备份，之后是增量备份。当变化较大时，会自动创建新的备份链。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;自动伸缩&quot;&gt;&lt;a href=&quot;#自动伸缩&quot; class=&quot;headerlink&quot; title=&quot;自动伸缩&quot;&gt;&lt;/a&gt;自动伸缩&lt;/h2&gt;&lt;p&gt;云存储服务的一个最显著的特点是有明显的高峰期，如果能够实现高峰期时自动增加带宽，低峰期时自动降低带宽就能够节省昂贵的带宽费用的目的。青云QingCloud提供的自动伸缩就能有效地满足这一痛点。&lt;/p&gt;
&lt;p&gt;首先创建一个自动伸缩策略：&lt;/p&gt;
&lt;p&gt;操作类型为调整公网IP带宽上限，然后选择需要自动伸缩的资源。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/imgs/opinion/qingcloud-owncloud-autoscaling-1.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;然后添加带宽提高和降低的触发条件：&lt;/p&gt;
&lt;p&gt;以带宽提高为例，我们可以在公网进流量连续15分钟平均值大于当前带宽的80%时提高带宽。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;青云QingCloud的监控周期为5分钟，而数据采样周期为1分钟。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;img src=&quot;/imgs/opinion/qingcloud-owncloud-autoscaling-2.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;最后添加操作参数：&lt;/p&gt;
&lt;p&gt;可以设置每次提高5Mbps，最高允许的带宽为20Mbps。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/imgs/opinion/qingcloud-owncloud-autoscaling-3.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;h1 id=&quot;应用&quot;&gt;&lt;a href=&quot;#应用&quot; class=&quot;headerlink&quot; title=&quot;应用&quot;&gt;&lt;/a&gt;应用&lt;/h1&gt;&lt;p&gt;下面来聊一聊OwnCloud的一些应用。&lt;/p&gt;
&lt;h2 id=&quot;分享功能&quot;&gt;&lt;a href=&quot;#分享功能&quot; class=&quot;headerlink&quot; title=&quot;分享功能&quot;&gt;&lt;/a&gt;分享功能&lt;/h2&gt;&lt;p&gt;&lt;img src=&quot;/imgs/opinion/qingcloud-owncloud-4.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;分享功能是我比较看重的一个部分。OwnCloud的分享可以选择用户和组，然后还能通过链接进行分享。通过链接分享时，可以指定密码和过期时间，还能允许编辑。这样就可以实现给用户发送需要的资料以及收集来自合作伙伴的视频，文件等功能。&lt;/p&gt;
&lt;h2 id=&quot;团队协作&quot;&gt;&lt;a href=&quot;#团队协作&quot; class=&quot;headerlink&quot; title=&quot;团队协作&quot;&gt;&lt;/a&gt;团队协作&lt;/h2&gt;&lt;p&gt;OwnCloud内建了一个版本管理功能，同一个文件可以提供多个历史版本，这样方便大家进行版本追溯和管理，为团队协作编辑提供了便利。除此以外还有评论系统，实时性能还不错，基本可以用于对具体文档的简单协作。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/imgs/opinion/qingcloud-owncloud-show-1.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;h1 id=&quot;更新日志&quot;&gt;&lt;a href=&quot;#更新日志&quot; class=&quot;headerlink&quot; title=&quot;更新日志&quot;&gt;&lt;/a&gt;更新日志&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;2016年06月03日 首次发布&lt;/li&gt;
&lt;li&gt;2016年06月11日 增加自动备份和自动伸缩的配置&lt;/li&gt;
&lt;/ul&gt;
</content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h1&gt;&lt;p&gt;因为实在不满意百度云的一些缺陷，我们最终决定部署一套团队内部使用的云存储平台，用于团队协作及资料长期存储。希望能够达到如下目标：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;数据安全性高&lt;/li&gt;
&lt;li&gt;权限控制能力强&lt;/li&gt;
&lt;li&gt;分享功能更强，可以设置密码和过期时间等&lt;/li&gt;
&lt;li&gt;允许匿名第三方上传数据&lt;/li&gt;
&lt;li&gt;没有文件上传大小限制&lt;/li&gt;
&lt;li&gt;支持多平台同步功能&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;综合考量各开源项目之后，我最终选定基于QingCloud部署一套开源存储项目OwnCloud。&lt;/p&gt;
    
    </summary>
    
      <category term="Opinion" scheme="https://xuanwo.org/categories/Opinion/"/>
    
    
      <category term="Software" scheme="https://xuanwo.org/tags/Software/"/>
    
      <category term="QingCloud" scheme="https://xuanwo.org/tags/QingCloud/"/>
    
      <category term="Work" scheme="https://xuanwo.org/tags/Work/"/>
    
  </entry>
  
  <entry>
    <title>我从Qingchat中学到的教训</title>
    <link href="https://xuanwo.org/2016/05/29/learn-from-qingchat/"/>
    <id>https://xuanwo.org/2016/05/29/learn-from-qingchat/</id>
    <published>2016-05-29T20:57:00.000Z</published>
    <updated>2016-07-14T14:10:22.682Z</updated>
    
    <content type="html">&lt;h1 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h1&gt;&lt;p&gt;之前的一段时间一直在从事&lt;a href=&quot;https://github.com/Xuanwo/qingchat&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Qingchat&lt;/a&gt;的相关开发工作，这个项目是一个基于Mojo-Weixin提供的Rest API开发的一个微信机器人，承担了十余个群，上千人的微信直播活动。秉承着ACM训练出来的“暴力加乱搞”风格，我花了大概一个星期的课余时间，搞出了一个可用的版本。期间也迭代了很多次，既欣慰于Coding的力量，也苦恼于当初设计的不完善带来的种种问题。在这个项目即将大规模重构的前夕，我总结一下开发Qingchat的过程中的经验教训，希望自己能成为一个更好更聪明的Coder。&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h1 id=&quot;经验教训&quot;&gt;&lt;a href=&quot;#经验教训&quot; class=&quot;headerlink&quot; title=&quot;经验教训&quot;&gt;&lt;/a&gt;经验教训&lt;/h1&gt;&lt;h2 id=&quot;没有稳定性的世界&quot;&gt;&lt;a href=&quot;#没有稳定性的世界&quot; class=&quot;headerlink&quot; title=&quot;没有稳定性的世界&quot;&gt;&lt;/a&gt;没有稳定性的世界&lt;/h2&gt;&lt;p&gt;从最开始Coding的时候，就有着一个根深蒂固的信念：计算机不会出错。1是1，0是0，只要自己的实现是对的，那最后的结果也一定是对的。然后，真相并非如此：我们存在于一个没有稳定性的世界。&lt;br&gt;你访问的路径可能是不存在的，你访问的文件可能是不存在或者已经上锁，你期望的服务器响应因为网络环境太差变成了超时。不仅如此，有时候你还会遇到神出鬼没的黑客们，稍有不慎你可能就永远失去了对数据的掌控权（&lt;em&gt;我测试用的服务器被人暴力尝试登陆34万次&lt;/em&gt;）。&lt;br&gt;所以我们在编程的时候就应当完全抛弃“这个服务是稳定的”这种前提，学会在万物皆有可能出错的假设下编程，不要轻视程序的鲁棒性。你永远都不会知道用户会以何种方式使用你的程序，同样的，你也不会知道用户到底会输入什么样的数据。灵活运用“防御式编程”和“让它出错”两种思想，让你的代码更健壮。&lt;/p&gt;
&lt;h2 id=&quot;拥抱多线程，走向非阻塞&quot;&gt;&lt;a href=&quot;#拥抱多线程，走向非阻塞&quot; class=&quot;headerlink&quot; title=&quot;拥抱多线程，走向非阻塞&quot;&gt;&lt;/a&gt;拥抱多线程，走向非阻塞&lt;/h2&gt;&lt;p&gt;现在回过头来看，自己当初实现的群发功能就是一个彻头彻尾的失败品：容错性差，效率低下。这些问题其实是由同一个原因导致的：我使用了一个单线程阻塞式的实现，不仅如此，还没有做任何异常的处理。这样导致的结果就是只要某个环节出错，整个群发任务就会直接退出。速度是跟微信群的数量成正比的，群的数量上升之后，群发速度过慢成了我的同事们经常向我吐嘈的问题。&lt;br&gt;开发的时候不计算网络传输延时绝对是一个重大失误——实际上，网络延时是整个系统的关键瓶颈。为了解决这个问题，Node.js 采用了一种单线程非阻塞的设计（一家之言，轻喷）。对于Python来说也是一样的，适度地拥抱多线程开发以提高并行效率，多采用非阻塞式设计以避免单个任务执行时间过长拖慢运行速度。&lt;br&gt;在一次去上课的路上，我形象地把这种设计比作“射后不管”，好像是飞毛腿导弹？&lt;/p&gt;
&lt;h2 id=&quot;开源非万能&quot;&gt;&lt;a href=&quot;#开源非万能&quot; class=&quot;headerlink&quot; title=&quot;开源非万能&quot;&gt;&lt;/a&gt;开源非万能&lt;/h2&gt;&lt;p&gt;我原来是一个开源的死忠粉，认为开源可以解决一切问题，那个时候每天思考的问题就是为什么Windows不开源？等到真的进入业界，才明白自己的这种想法有多么幼稚。&lt;br&gt;除去那些大型的有基金会在背后支撑的项目，绝大多数项目完全依靠开发者个人热情来维持，某些涉及到商业支持的项目更是存在着“人走项目死”的现象。比如我参与管理的&lt;a href=&quot;https://github.com/hexojs&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Hexo&lt;/a&gt;项目在作者tommy开始实习之后就进展缓慢，再比如我接手但是现状非常差的&lt;a href=&quot;https://github.com/staticfile/static&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;staticfile&lt;/a&gt;（&lt;em&gt;很抱歉我并没有能够做出什么正面的贡献，反而让状况变得更加糟糕了&lt;/em&gt;）。&lt;br&gt;这些实践都告诉我，开源并不是万能的，真正想要解决一个问题，需要一个完善的制度以及各方面的激励机制。单纯依赖于开发者个人的热情往往不利于一个项目的长远发展，而在自行开发的项目中依赖于一个开源项目往往会带来更多的风险。开发者不一定会开发你期望的功能，开发者也不一定会按照你期望的进度进行开发。&lt;br&gt;作为我个人，我依然是一个热爱开源项目，崇尚开源理念的人；然而作为一个产品的开发者，一个服务的提供者，你必须权衡自行开发，采购商业产品以及使用开源项目之间的利弊。不同的选择取决于不同的项目，不同的需求，不同的自主开发能力，不同的后续维护能力。一味的强调开源理念，不顾实际，往往对开源事业的发展有害无益，挫伤人们对开源的信赖。&lt;/p&gt;
&lt;h1 id=&quot;未来展望&quot;&gt;&lt;a href=&quot;#未来展望&quot; class=&quot;headerlink&quot; title=&quot;未来展望&quot;&gt;&lt;/a&gt;未来展望&lt;/h1&gt;&lt;p&gt;一个项目最具活力与激情的时刻就是在设计之初实现之前，等到实现的时候往往寸步难行，到了后续维护的时候时常想就此了断。我希望这个项目能够存活更长的时间，希望自己向同事们提出的构想都能够一一变为现实。本次重构希望能够实现一个更加稳定更加高效的Qingchat，希望能够进一步减少重复劳动，提高效率。&lt;br&gt;最后感谢同事们的不杀之恩，感谢青云QingCloud的自由空间，可以允许我以自己想要的方式完成工作。最后以青云CTO Reno在某次会上说的话自勉：“你们是青云的Devloper，No excuse。”&lt;/p&gt;
&lt;h1 id=&quot;更新日志&quot;&gt;&lt;a href=&quot;#更新日志&quot; class=&quot;headerlink&quot; title=&quot;更新日志&quot;&gt;&lt;/a&gt;更新日志&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;2016年05月30日 初稿&lt;/li&gt;
&lt;/ul&gt;
</content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h1&gt;&lt;p&gt;之前的一段时间一直在从事&lt;a href=&quot;https://github.com/Xuanwo/qingchat&quot;&gt;Qingchat&lt;/a&gt;的相关开发工作，这个项目是一个基于Mojo-Weixin提供的Rest API开发的一个微信机器人，承担了十余个群，上千人的微信直播活动。秉承着ACM训练出来的“暴力加乱搞”风格，我花了大概一个星期的课余时间，搞出了一个可用的版本。期间也迭代了很多次，既欣慰于Coding的力量，也苦恼于当初设计的不完善带来的种种问题。在这个项目即将大规模重构的前夕，我总结一下开发Qingchat的过程中的经验教训，希望自己能成为一个更好更聪明的Coder。&lt;/p&gt;
    
    </summary>
    
      <category term="Develop" scheme="https://xuanwo.org/categories/Develop/"/>
    
    
      <category term="python" scheme="https://xuanwo.org/tags/python/"/>
    
      <category term="qingchat" scheme="https://xuanwo.org/tags/qingchat/"/>
    
      <category term="实习" scheme="https://xuanwo.org/tags/%E5%AE%9E%E4%B9%A0/"/>
    
      <category term="QingCloud" scheme="https://xuanwo.org/tags/QingCloud/"/>
    
  </entry>
  
  <entry>
    <title>基于MSP430G2553的打铃系统开发手记</title>
    <link href="https://xuanwo.org/2016/05/09/msp430g2553-bellring/"/>
    <id>https://xuanwo.org/2016/05/09/msp430g2553-bellring/</id>
    <published>2016-05-09T08:42:00.000Z</published>
    <updated>2016-07-14T14:10:22.682Z</updated>
    
    <content type="html">&lt;h1 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h1&gt;&lt;p&gt;我萌萌哒的妹纸是一个代码苦手，完全无法理解 C 语言，所以每一次到单片机上机需要交作业的时候都是愁眉苦脸的样子。而我又总是因为自己确实不懂单片机里面的种种奇怪定义（中断，串口，P1.x 之类），所以也一直没有什么好办法去帮她。这一次的作业对编码能力要求较高，但是涉及到的硬件比较少，于是决定以此为契机，开始我的嵌入式开发之旅。&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h1 id=&quot;需求&quot;&gt;&lt;a href=&quot;#需求&quot; class=&quot;headerlink&quot; title=&quot;需求&quot;&gt;&lt;/a&gt;需求&lt;/h1&gt;&lt;p&gt;这次的如下：&lt;/p&gt;
&lt;h2 id=&quot;基本要求&quot;&gt;&lt;a href=&quot;#基本要求&quot; class=&quot;headerlink&quot; title=&quot;基本要求&quot;&gt;&lt;/a&gt;基本要求&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;基本计时和显示功能(用 12 小时制显示)。&lt;br&gt;包括上下午标志,时、分的数字显示,秒信号指示。&lt;/li&gt;
&lt;li&gt;能设置当前时间(含上、下午,时,分)&lt;/li&gt;
&lt;li&gt;能实现基本打铃功能,规定:&lt;br&gt;上午 6:00 起床铃;打铃 5 秒、停 2 秒、再打铃 5 秒。&lt;br&gt;下午 10:30 熄灯铃;打铃 5 秒、停 2 秒、再打铃 5 秒。&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;铃声可用 LED 灯光显示,如果实验装置没有 LED 发光管,可以用七段显示管的小数点显示,也可以用显示小时的十位数码管的多余段显示。凡是用到铃声功能的均可如此处理。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;发挥部分&quot;&gt;&lt;a href=&quot;#发挥部分&quot; class=&quot;headerlink&quot; title=&quot;发挥部分&quot;&gt;&lt;/a&gt;发挥部分&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;增加整点报时功能,整点时响铃 5 秒,要求有控制启动和关闭功能。&lt;/li&gt;
&lt;li&gt;增加调整起床铃、熄灯铃时间的功能。&lt;/li&gt;
&lt;li&gt;增加调整打铃时间长短和间歇时间长短的功能。&lt;/li&gt;
&lt;li&gt;增设上午 4 节课的上、下课打铃功能,规定:&lt;br&gt;7:30 上课,8:20 下课;8:30 上课,9:20 下课;9:40 上课,10:30 下课;10:40 上课,11:30 下课;每次铃声 5 秒。&lt;/li&gt;
&lt;li&gt;利用板上按键做一个 12 小时/24 小时的显示格式切换&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&quot;分析&quot;&gt;&lt;a href=&quot;#分析&quot; class=&quot;headerlink&quot; title=&quot;分析&quot;&gt;&lt;/a&gt;分析&lt;/h1&gt;&lt;blockquote&gt;
&lt;p&gt;既然我都出动了，肯定不能满足于只完成基本要求，决定把所有功能全都完整的实现。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;简单的来说，整体需求可以分为三个部分：显示，打铃，修改。&lt;/p&gt;
&lt;p&gt;需要用到的东西有：串口，指示灯和一个按键。&lt;/p&gt;
&lt;h2 id=&quot;显示&quot;&gt;&lt;a href=&quot;#显示&quot; class=&quot;headerlink&quot; title=&quot;显示&quot;&gt;&lt;/a&gt;显示&lt;/h2&gt;&lt;p&gt;遵循简单的前后端分离的思想，我们可以使用三个全局变量 hour ， minute ， second 来存储当前的时间，只需要在显示的时候区分上下午和 12 小时／ 24 小时即可。这两个部分解耦之后会发现，我们后面的利用板上按键修改显示格式也变得容易了很多。&lt;br&gt;通过串口显示也就是需要向指定变量发送字符，将这个功能抽象并封装之后，对于我后续的编程来说，也就是调用一下 Send_Str(str) 的过程。&lt;/p&gt;
&lt;h2 id=&quot;打铃&quot;&gt;&lt;a href=&quot;#打铃&quot; class=&quot;headerlink&quot; title=&quot;打铃&quot;&gt;&lt;/a&gt;打铃&lt;/h2&gt;&lt;p&gt;打铃是这套系统的重头戏，因为学校方面的资源限制，所以使用指示灯示意的方法来代替打铃。&lt;br&gt;指示灯的亮灭是通过控制一个变量的值来确定的，于是我只要在正确时候设置正确的值，打铃系统就能按照我期望的方式工作。&lt;/p&gt;
&lt;h2 id=&quot;修改&quot;&gt;&lt;a href=&quot;#修改&quot; class=&quot;headerlink&quot; title=&quot;修改&quot;&gt;&lt;/a&gt;修改&lt;/h2&gt;&lt;p&gt;修改同样是通过串口进行的。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;在最开始的设计文档中，本来是要求使用4个按键来进行设计，也就是说跟一个普通的电子表差不多。但是非常因缺思艇的事情是学校的按键不够了，所以老师要求所有功能都用串口实现。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;跟显示有些不同的地方是，通过串口向芯片发送数据需要正确使用串口中断。&lt;/p&gt;
&lt;p&gt;综上，这个系统所需要的全部内容就已经实现了。可以看到我做了很多将对硬件的操作抽象化的处理，其实这一点非常重要。因为对于我来说，嵌入式开发最大的难题在于，我不知道里面种种变量的含义，不知道如何操作具体的硬件。将硬件操作抽象化处理之后，我就可以很方便地开展我的后续开发。&lt;/p&gt;
&lt;h1 id=&quot;问题&quot;&gt;&lt;a href=&quot;#问题&quot; class=&quot;headerlink&quot; title=&quot;问题&quot;&gt;&lt;/a&gt;问题&lt;/h1&gt;&lt;p&gt;实现就不再赘述了，想必读者一定都比我强，下面聊一聊遇到的问题以及 debug 的经历。&lt;/p&gt;
&lt;h2 id=&quot;串口配置&quot;&gt;&lt;a href=&quot;#串口配置&quot; class=&quot;headerlink&quot; title=&quot;串口配置&quot;&gt;&lt;/a&gt;串口配置&lt;/h2&gt;&lt;p&gt;串口的收和发其实是分开的，这里用到了两个变量： UCA0TXBUF ， UCA0RXBUF 。从字面意思上可以看出，前一个用于发送，后一个用于接收（相对于开发者来说）。发送和接收其实就是给这两个值赋值的过程，看起来这两个变量在接受到值之后会将这个值传给别的变量，所以只要不断的将值赋给它就行，我们写了这样的函数：&lt;/p&gt;
&lt;figure class=&quot;highlight c&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;#&lt;span class=&quot;meta-keyword&quot;&gt;pragma&lt;/span&gt; vector=USCIAB0RX_VECTOR &lt;span class=&quot;comment&quot;&gt;//中断服务函数&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;number&quot;&gt;__&lt;/span&gt;&lt;span class=&quot;function&quot;&gt;interrupt &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;uart&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    rec = UCA0RXBUF;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//读取到缓冲区&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    strtmp[&lt;span class=&quot;built_in&quot;&gt;strlen&lt;/span&gt;++] = rec;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    strtmp[&lt;span class=&quot;built_in&quot;&gt;strlen&lt;/span&gt;] = &lt;span class=&quot;string&quot;&gt;&#39;\0&#39;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//切换模式&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mode = strtmp[&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//发送字符&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;Send_Char&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(&lt;span class=&quot;keyword&quot;&gt;char&lt;/span&gt; ch)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;while&lt;/span&gt; (!(IFG2 &amp;amp; UCA0TXIFG));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    UCA0TXBUF = ch;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//发送字符串&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;Send_Str&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(&lt;span class=&quot;keyword&quot;&gt;char&lt;/span&gt; *p)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;unsigned&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;char&lt;/span&gt; i;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    i = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;while&lt;/span&gt; (*(p + i) != &lt;span class=&quot;string&quot;&gt;&#39;\0&#39;&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;while&lt;/span&gt; (!(IFG2 &amp;amp; UCA0TXIFG));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        UCA0TXBUF = *(p + i);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        i++;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    Send_Char(&lt;span class=&quot;number&quot;&gt;0x0d&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    Send_Char(&lt;span class=&quot;number&quot;&gt;0x0a&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;uart 貌似是一个内置的中断函数，用来处理串口的接收，只要将变量 UCA0RXBUF 的值存储起来即可；后面的 Send_Str 就非常好理解了，将值发送给 UCA0TXBUF ，从而实现串口的输出。&lt;/p&gt;
&lt;p&gt;思路如此清晰，但是测试的时候却遇到了问题，我们的输出是空的，转为16进制显示后，全都是0x00。这个问题调试了很久，拿着原来的代码逐行比对之后发现，出了这样的问题：&lt;/p&gt;
&lt;figure class=&quot;highlight c&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;- UCA0BR0 = &lt;span class=&quot;number&quot;&gt;130&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;- UCA0BR1 = &lt;span class=&quot;number&quot;&gt;6&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;+ UCA0BR0 = &lt;span class=&quot;number&quot;&gt;104&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;+ UCA0BR1 = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;Google 一下才明白，原来 UCA0BR0 和 UCA0BR1 是由系统的时钟速度和波特率决定的值，如果设置错误就会导致串口发送失败。具体的值可以参考&lt;a href=&quot;http://www.ti.com/lit/ug/slau144j/slau144j.pdf&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;用户手册&lt;/a&gt;， Ctrl＋F 搜索 &lt;code&gt;Table 15-4. Commonly Used Baud Rates&lt;/code&gt; 即可。&lt;/p&gt;
&lt;h2 id=&quot;串口输出异常&quot;&gt;&lt;a href=&quot;#串口输出异常&quot; class=&quot;headerlink&quot; title=&quot;串口输出异常&quot;&gt;&lt;/a&gt;串口输出异常&lt;/h2&gt;&lt;p&gt;前面提到我们直接使用三个变量保存当前时间，在输出时做进一步处理，转为字符串的过程中，我们进行了这样的操作：&lt;/p&gt;
&lt;figure class=&quot;highlight c&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;Time[&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;] = hour / &lt;span class=&quot;number&quot;&gt;10&lt;/span&gt; + &lt;span class=&quot;string&quot;&gt;&#39;0&#39;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;但有趣的事情是，在初始化之后，我们得到的输出是这样的： &lt;code&gt;0/:0/:0/&lt;/code&gt; 。随手输出了一下 &lt;code&gt;/&lt;/code&gt; 的 ASCII 码，发现它刚好比 &lt;code&gt;0&lt;/code&gt; 小一。&lt;/p&gt;
&lt;p&gt;难道说，存储器中的默认值不是 0 吗？ Google 一下之后发现，还真的不是 0 。 MSP430G2553 中的 Flash 存储器在默认状态下的值全为 1 ，然后写入时只能将 1 置为 0 ，所以每一次写入数据都需要先清空再写入。那么问题来了，为什么全为 1 会导致最后输出的结果小 1 呢？我来简单的阐述一下我的理解：&lt;/p&gt;
&lt;p&gt;假设这个存储器只有 8 位，也就是说，现在的值为 &lt;code&gt;11111111&lt;/code&gt; ，然后我加上一个 &lt;code&gt;1&lt;/code&gt; ，于是我们得到：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;  11111111&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;+        1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; 100000000&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;显然，我们最后的结果已经移除了，此时会产生截断，也就是说，存储器现在的数据变成了 &lt;code&gt;00000000&lt;/code&gt; ，也就是 &lt;code&gt;0&lt;/code&gt;，跟我们期望的结果 &lt;code&gt;1&lt;/code&gt; 刚好相差一。&lt;/p&gt;
&lt;p&gt;当然，实际的情况要比我上面的举例要复杂的多，不过我想已经足够我们认识到这个 BUG 的本质，就不再多说啦。&lt;/p&gt;
&lt;h2 id=&quot;Flash-存储器未清空&quot;&gt;&lt;a href=&quot;#Flash-存储器未清空&quot; class=&quot;headerlink&quot; title=&quot;Flash 存储器未清空&quot;&gt;&lt;/a&gt;Flash 存储器未清空&lt;/h2&gt;&lt;p&gt;在测试中，我们发现每一次烧录程序之后， Flash 存储器不会清空，依然会从上一次我们保存的时间开始计时。我觉得这是正确的行为，没有在意，但是我妹纸和她的队友告诉我她们在完成上一个作业的时候每次都是会清空的。我对着这次和上次的代码研究了很久，认为代码里面根本就没有清空 Flash 存储器的操作，如果有的话，掉电保存这项功能根本无从谈起。我妹纸她们也同意我的分析，但是她们的实践确实证明了每次都会清空 Flash 存储区。&lt;/p&gt;
&lt;p&gt;这个问题也困扰了很久，直到第二天，用别人的电脑重新烧录了一遍程序，发现他们的是会正常清空的。所以说，问题在于 CCS 的版本：我妹纸使用的 CCS 版本是 6.1 ，而&lt;br&gt;他们用的版本是 5.1.1 ，也就是说，不同版本的 CCS 在烧录程序期间的不同行为导致了这次错误。我们换用了 5.1.1 之后，成功解决了这个问题。&lt;/p&gt;
&lt;h1 id=&quot;总结&quot;&gt;&lt;a href=&quot;#总结&quot; class=&quot;headerlink&quot; title=&quot;总结&quot;&gt;&lt;/a&gt;总结&lt;/h1&gt;&lt;p&gt;对嵌入式开发有了初步的了解，向着真·全栈开发工程师又近了一步。&lt;/p&gt;
&lt;p&gt;这一次的开发经历遇到了很多因缺思艇的问题，因为嵌入式开发本身比较偏向底层，这次开发甚至还遇到了存储器的存储原理。也有一点将自己看的 CSAPP 融会贯通的感觉，还是很有意思的。&lt;/p&gt;
&lt;h1 id=&quot;更新日志&quot;&gt;&lt;a href=&quot;#更新日志&quot; class=&quot;headerlink&quot; title=&quot;更新日志&quot;&gt;&lt;/a&gt;更新日志&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;2016年05月09日  首次发布&lt;/li&gt;
&lt;/ul&gt;
</content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h1&gt;&lt;p&gt;我萌萌哒的妹纸是一个代码苦手，完全无法理解 C 语言，所以每一次到单片机上机需要交作业的时候都是愁眉苦脸的样子。而我又总是因为自己确实不懂单片机里面的种种奇怪定义（中断，串口，P1.x 之类），所以也一直没有什么好办法去帮她。这一次的作业对编码能力要求较高，但是涉及到的硬件比较少，于是决定以此为契机，开始我的嵌入式开发之旅。&lt;/p&gt;
    
    </summary>
    
      <category term="Develop" scheme="https://xuanwo.org/categories/Develop/"/>
    
    
      <category term="C" scheme="https://xuanwo.org/tags/C/"/>
    
      <category term="单片机" scheme="https://xuanwo.org/tags/%E5%8D%95%E7%89%87%E6%9C%BA/"/>
    
  </entry>
  
  <entry>
    <title>Gitlab部署和汉化以及简单运维</title>
    <link href="https://xuanwo.org/2016/04/13/gitlab-install-intro/"/>
    <id>https://xuanwo.org/2016/04/13/gitlab-install-intro/</id>
    <published>2016-04-13T23:20:00.000Z</published>
    <updated>2016-07-14T14:10:22.678Z</updated>
    
    <content type="html">&lt;h1 id=&quot;起因&quot;&gt;&lt;a href=&quot;#起因&quot; class=&quot;headerlink&quot; title=&quot;起因&quot;&gt;&lt;/a&gt;起因&lt;/h1&gt;&lt;p&gt;在跟网络中心的老师沟通成立镜像站的相关事宜的时候，意外地接下来搭建一套校内的 Git 服务的任务。&lt;br&gt;&lt;a href=&quot;https://imnerd.org/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;@怡红公子&lt;/a&gt; 曾经搭建过一套类似的服务，但由于服务器端没有开启 VT 虚拟化导致不能安装 64 位的操作系统，再加上 Gitlab 不提供 32 位的安装包，所以长期以来怡红公子一直都是自行编译并配置 Gitlab 。考虑到后续维护的方便，我们决定趁着这个机会使用另一台支持安装 64 位操作系统的服务器，一劳永逸地解决这个问题。&lt;br&gt;我们的服务器环境是 &lt;strong&gt;CentOS 7.2 64bit&lt;/strong&gt; ，以下所有操作均以此为基准。&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h1 id=&quot;Gitlab-安装&quot;&gt;&lt;a href=&quot;#Gitlab-安装&quot; class=&quot;headerlink&quot; title=&quot;Gitlab 安装&quot;&gt;&lt;/a&gt;Gitlab 安装&lt;/h1&gt;&lt;p&gt;推荐使用 &lt;a href=&quot;https://about.gitlab.com/downloads&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Install a GitLab CE Omnibus package&lt;/a&gt; 安装 ，其他发行版可以点选对应版本，不再赘述。&lt;/p&gt;
&lt;h2 id=&quot;安装和配置依赖&quot;&gt;&lt;a href=&quot;#安装和配置依赖&quot; class=&quot;headerlink&quot; title=&quot;安装和配置依赖&quot;&gt;&lt;/a&gt;安装和配置依赖&lt;/h2&gt;&lt;p&gt;如果需要安装 Postfix 来发送邮件，则需要在安装过程中选择 &lt;code&gt;Internet Site&lt;/code&gt;。你也可以使用 Sendmail 之类的第三方发信服务或者使用自行配制的 SMTP 服务器。&lt;br&gt;除此以外，下列命令将会在防火墙中打开 HTTP(80) 和 SSH(22) 对应端口。&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;sudo yum install curl policycoreutils openssh-server openssh-clients&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;sudo systemctl &lt;span class=&quot;built_in&quot;&gt;enable&lt;/span&gt; sshd&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;sudo systemctl start sshd&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;sudo yum install postfix&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;sudo systemctl &lt;span class=&quot;built_in&quot;&gt;enable&lt;/span&gt; postfix&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;sudo systemctl start postfix&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;sudo firewall-cmd --permanent --add-service=http&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;sudo systemctl reload firewalld&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;添加-Gitlab-源并安装&quot;&gt;&lt;a href=&quot;#添加-Gitlab-源并安装&quot; class=&quot;headerlink&quot; title=&quot;添加 Gitlab 源并安装&quot;&gt;&lt;/a&gt;添加 Gitlab 源并安装&lt;/h2&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;curl &lt;span class=&quot;_&quot;&gt;-s&lt;/span&gt;S https://packages.gitlab.com/install/repositories/gitlab/gitlab-ce/script.rpm.sh | sudo bash&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;sudo yum install gitlab-ce&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;这个脚本会在源中添加 Gitlab-CE ，并自动执行&lt;code&gt;yum makecache&lt;/code&gt;，然后安装&lt;code&gt;gitlab-ce&lt;/code&gt;。由于源在国外，可能速度较慢，也可以手动添加来自 清华tuna 的源： &lt;a href=&quot;https://mirrors.tuna.tsinghua.edu.cn/help/gitlab-ce/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://mirrors.tuna.tsinghua.edu.cn/help/gitlab-ce/&lt;/a&gt; ， 链接中为各发行版下的教程，感谢 清华tuna 提供镜像。&lt;/p&gt;
&lt;h2 id=&quot;配置并启动-Gitlab&quot;&gt;&lt;a href=&quot;#配置并启动-Gitlab&quot; class=&quot;headerlink&quot; title=&quot;配置并启动 Gitlab&quot;&gt;&lt;/a&gt;配置并启动 Gitlab&lt;/h2&gt;&lt;p&gt;此时已经可以启动服务了：&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;sudo gitlab-ctl reconfigure&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;进行一长串复杂的启动流程之后， gitlab 就已经可以通过 &lt;code&gt;localhost&lt;/code&gt; 进行访问了。&lt;/p&gt;
&lt;h1 id=&quot;Gitlab-配置&quot;&gt;&lt;a href=&quot;#Gitlab-配置&quot; class=&quot;headerlink&quot; title=&quot;Gitlab 配置&quot;&gt;&lt;/a&gt;Gitlab 配置&lt;/h1&gt;&lt;h2 id=&quot;修改域名&quot;&gt;&lt;a href=&quot;#修改域名&quot; class=&quot;headerlink&quot; title=&quot;修改域名&quot;&gt;&lt;/a&gt;修改域名&lt;/h2&gt;&lt;p&gt;默认的配置文件保存在 &lt;code&gt;/etc/gitlab/gitlab.rb&lt;/code&gt; ，执行：&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;sudo vim /etc/gitlab/gitlab.rb&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;打开文件，并修改：&lt;/p&gt;
&lt;figure class=&quot;highlight ruby&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;external_url &lt;span class=&quot;string&quot;&gt;&#39;http://your.domain&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;再次执行&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;sudo gitlab-ctl reconfigure&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;即可。&lt;/p&gt;
&lt;p&gt;有一定概率出现 502 错误，刷新浏览器或者再次更新配置即可。&lt;/p&gt;
&lt;h2 id=&quot;Gitlab-汉化&quot;&gt;&lt;a href=&quot;#Gitlab-汉化&quot; class=&quot;headerlink&quot; title=&quot;Gitlab 汉化&quot;&gt;&lt;/a&gt;Gitlab 汉化&lt;/h2&gt;&lt;p&gt;由于服务对象是广大师生，为了降低新手上手的难度，所有进行汉化也是非常有必要的。好在国内有人已经进行了这方面的工作，我们只需要共享其成果即可（欢迎向&lt;a href=&quot;https://gitlab.com/larryli/gitlab&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;原项目&lt;/a&gt;提交高质量翻译）。&lt;/p&gt;
&lt;p&gt;首先确认版本：&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;sudo cat /opt/gitlab/embedded/service/gitlab-rails/VERSION&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;并确认当前汉化版本的 VERSION 是否相同，当前最新的汉化版本为 8.6 。&lt;br&gt;如果安装版本小于当前汉化版本，请先升级。如果安装版本大于当前汉化版本，请在本项目中提交新的 issue。&lt;br&gt;如果版本相同，首先在本地 clone 仓库。&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# GitLab.com 仓库&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;git &lt;span class=&quot;built_in&quot;&gt;clone&lt;/span&gt; https://gitlab.com/larryli/gitlab.git&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# 或 Coding.net 镜像&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;git &lt;span class=&quot;built_in&quot;&gt;clone&lt;/span&gt; https://git.coding.net/larryli/gitlab.git&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;根据我的测试， Coding.net 的镜像不完整，clone 之后无法 checkout&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;然后比较汉化分支和原分支，导出 patch 用的 diff 文件。&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# 8.1 版本的汉化补丁&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;git diff origin/8-6-stable..8-6-zh &amp;gt; ../8.6.diff&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;然后上传 &lt;code&gt;8.6.diff&lt;/code&gt; 文件到服务器。&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# 停止 gitlab&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;sudo gitlab-ctl stop&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;sudo patch &lt;span class=&quot;_&quot;&gt;-d&lt;/span&gt; /opt/gitlab/embedded/service/gitlab-rails -p1 &amp;lt; 8.6.diff&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;确定没有 .rej 文件，重启 GitLab 即可。&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;sudo gitlab-ctl start&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;如果汉化中出现问题，请重新安装 GitLab（&lt;strong&gt;注意备份数据&lt;/strong&gt;）。&lt;/p&gt;
&lt;h1 id=&quot;Gitlab-运维&quot;&gt;&lt;a href=&quot;#Gitlab-运维&quot; class=&quot;headerlink&quot; title=&quot;Gitlab 运维&quot;&gt;&lt;/a&gt;Gitlab 运维&lt;/h1&gt;&lt;h2 id=&quot;管理&quot;&gt;&lt;a href=&quot;#管理&quot; class=&quot;headerlink&quot; title=&quot;管理&quot;&gt;&lt;/a&gt;管理&lt;/h2&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# 启动所有 gitlab 组件：&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;sudo gitlab-ctl start&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# 停止所有 gitlab 组件：&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;sudo gitlab-ctl stop&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# 重启所有 gitlab 组件：&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;sudo gitlab-ctl restart&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;备份&quot;&gt;&lt;a href=&quot;#备份&quot; class=&quot;headerlink&quot; title=&quot;备份&quot;&gt;&lt;/a&gt;备份&lt;/h2&gt;&lt;p&gt;备份GitLab repositories and GitLab metadata&lt;br&gt;在 crontab 中加入如下命令：&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;0 2 * * * /usr/bin/gitlab-rake gitlab:backup:create&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h2 id=&quot;恢复&quot;&gt;&lt;a href=&quot;#恢复&quot; class=&quot;headerlink&quot; title=&quot;恢复&quot;&gt;&lt;/a&gt;恢复&lt;/h2&gt;&lt;p&gt;首先进入备份 gitlab 的目录，这个目录是配置文件中的&lt;code&gt;gitlab_rails[&amp;#39;backup_path&amp;#39;]&lt;/code&gt;，默认为&lt;code&gt;/var/opt/gitlab/backups&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;然后停止 unicorn 和 sidekiq ，保证数据库没有新的连接，不会有写数据情况。&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;sudo gitlab-ctl stop unicorn&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# ok: down: unicorn: 0s, normally up&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;sudo gitlab-ctl stop sidekiq&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# ok: down: sidekiq: 0s, normally up&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;然后恢复数据，1406691018为备份文件的时间戳&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;gitlab-rake gitlab:backup:restore BACKUP=1406691018&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;修改数据存储地址&quot;&gt;&lt;a href=&quot;#修改数据存储地址&quot; class=&quot;headerlink&quot; title=&quot;修改数据存储地址&quot;&gt;&lt;/a&gt;修改数据存储地址&lt;/h2&gt;&lt;p&gt;默认情况下，gitlab 将数据存储在&lt;code&gt;/var/opt/gitlab/git-data&lt;/code&gt;目录下，受限于分区情况&amp;amp;方便管理，我们需要将数据迁移到别的目录下。&lt;/p&gt;
&lt;h3 id=&quot;无需数据迁移&quot;&gt;&lt;a href=&quot;#无需数据迁移&quot; class=&quot;headerlink&quot; title=&quot;无需数据迁移&quot;&gt;&lt;/a&gt;无需数据迁移&lt;/h3&gt;&lt;p&gt;如果还没有投入使用，则可以直接在配置文件中添加：&lt;/p&gt;
&lt;figure class=&quot;highlight ruby&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;git_data_dir &lt;span class=&quot;string&quot;&gt;&quot;/path/to/git-data&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;然后执行：&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;sudo gitlab-ctl reconfigure&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;就可以生效了。&lt;/p&gt;
&lt;h3 id=&quot;进行数据迁移&quot;&gt;&lt;a href=&quot;#进行数据迁移&quot; class=&quot;headerlink&quot; title=&quot;进行数据迁移&quot;&gt;&lt;/a&gt;进行数据迁移&lt;/h3&gt;&lt;p&gt;如果已经有数据了，则需要进行迁移。&lt;/p&gt;
&lt;p&gt;首先需要暂停服务，避免用户在迁移期间读写数据：&lt;/p&gt;
&lt;figure class=&quot;highlight ruby&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;sudo gitlab-ctl stop&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;然后使用rsync数据进行迁移：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;注意前一个地址不需要&lt;code&gt;/&lt;/code&gt;，后一个地址需要&lt;code&gt;/&lt;/code&gt;，且只需要迁移&lt;code&gt;repositories&lt;/code&gt;目录即可&lt;/p&gt;
&lt;/blockquote&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;sudo rsync -av /var/opt/gitlab/git-data/repositories /path/to/git-data/&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;然后运行配置工具以更新并重启服务：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;官网文档是先更新配置再启动服务，但我在使用中发现先更新配置会提示无法连接上服务器，出现这种问题时可以先启动服务再更新配置。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;sudo gitlab-ctl reconfigure&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;sudo gitlab-ctl start&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;最后不要忘了在网页端确认数据的地址是否正确。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;关于权限问题&lt;br&gt;在使用中，我一开始创建了一个&lt;code&gt;gitlabhq&lt;/code&gt;用户并创建了一个文件夹，然后修改地址，服务正常启动后提示500。&lt;br&gt;后来使用&lt;code&gt;root&lt;/code&gt;账户在&lt;code&gt;/home&lt;/code&gt;下直接创建文件夹解决了这个问题。&lt;br&gt;如果有遇到类似问题的，可以尝试用&lt;code&gt;root&lt;/code&gt;创建目录。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;监听IPv6&quot;&gt;&lt;a href=&quot;#监听IPv6&quot; class=&quot;headerlink&quot; title=&quot;监听IPv6&quot;&gt;&lt;/a&gt;监听IPv6&lt;/h2&gt;&lt;p&gt;教育网拥有得天独厚的IPv6资源，所以为我们的gitlab服务添加IPv6支持很有必要。&lt;/p&gt;
&lt;p&gt;修改&lt;code&gt;/etc/gitlab/gitlab.rb&lt;/code&gt;文件中的：&lt;/p&gt;
&lt;figure class=&quot;highlight ruby&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# nginx[&#39;listen_addresses&#39;] = [&#39;*&#39;]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;为&lt;/p&gt;
&lt;figure class=&quot;highlight ruby&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;nginx[&lt;span class=&quot;string&quot;&gt;&#39;listen_addresses&#39;&lt;/span&gt;] = [&lt;span class=&quot;string&quot;&gt;&#39;*&#39;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;[::]&#39;&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;然后执行&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;sudo gitlab-ctl reconfigure&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;然后就可以通过IPv6访问了。&lt;/p&gt;
&lt;h1 id=&quot;参考资料&quot;&gt;&lt;a href=&quot;#参考资料&quot; class=&quot;headerlink&quot; title=&quot;参考资料&quot;&gt;&lt;/a&gt;参考资料&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://about.gitlab.com/downloads/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Gitlab 下载&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://gitlab.com/larryli/gitlab/wikis/home&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;GitLab Community Edition · Wiki&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://linuxtools-rst.readthedocs.org/zh_CN/latest/tool/crontab.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;crontab 定时任务&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://gitlab.com/gitlab-org/gitlab-ce/blob/master/doc/raketasks/backup_restore.md&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Backup restore&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://gitlab.com/gitlab-org/omnibus-gitlab/blob/master/doc/settings/configuration.md#storing-git-data-in-an-alternative-directory&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Storing Git data in an alternative directory&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&quot;更新日志&quot;&gt;&lt;a href=&quot;#更新日志&quot; class=&quot;headerlink&quot; title=&quot;更新日志&quot;&gt;&lt;/a&gt;更新日志&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;2016年04月14日 首次发布&lt;/li&gt;
&lt;li&gt;2016年04月18日 新增数据迁移&amp;amp;监听IPv6配置&lt;/li&gt;
&lt;/ul&gt;
</content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;起因&quot;&gt;&lt;a href=&quot;#起因&quot; class=&quot;headerlink&quot; title=&quot;起因&quot;&gt;&lt;/a&gt;起因&lt;/h1&gt;&lt;p&gt;在跟网络中心的老师沟通成立镜像站的相关事宜的时候，意外地接下来搭建一套校内的 Git 服务的任务。&lt;br&gt;&lt;a href=&quot;https://imnerd.org/&quot;&gt;@怡红公子&lt;/a&gt; 曾经搭建过一套类似的服务，但由于服务器端没有开启 VT 虚拟化导致不能安装 64 位的操作系统，再加上 Gitlab 不提供 32 位的安装包，所以长期以来怡红公子一直都是自行编译并配置 Gitlab 。考虑到后续维护的方便，我们决定趁着这个机会使用另一台支持安装 64 位操作系统的服务器，一劳永逸地解决这个问题。&lt;br&gt;我们的服务器环境是 &lt;strong&gt;CentOS 7.2 64bit&lt;/strong&gt; ，以下所有操作均以此为基准。&lt;/p&gt;
    
    </summary>
    
      <category term="Operate" scheme="https://xuanwo.org/categories/Operate/"/>
    
    
      <category term="运维" scheme="https://xuanwo.org/tags/%E8%BF%90%E7%BB%B4/"/>
    
      <category term="CUGBLUG" scheme="https://xuanwo.org/tags/CUGBLUG/"/>
    
      <category term="Gitlab" scheme="https://xuanwo.org/tags/Gitlab/"/>
    
  </entry>
  
  <entry>
    <title>docopt——好用的Python命令行参数解释器</title>
    <link href="https://xuanwo.org/2016/04/04/docopt-intro/"/>
    <id>https://xuanwo.org/2016/04/04/docopt-intro/</id>
    <published>2016-04-04T21:39:00.000Z</published>
    <updated>2016-07-14T14:10:22.678Z</updated>
    
    <content type="html">&lt;h1 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h1&gt;&lt;p&gt;&lt;a href=&quot;https://github.com/Xuanwo/qingchat&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;&lt;code&gt;Qingchat&lt;/code&gt;&lt;/a&gt; 使用的命令行参数解释器是 &lt;a href=&quot;http://docopt.org/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;&lt;code&gt;docopt&lt;/code&gt;&lt;/a&gt;，用下来感觉非常棒，所以决定介绍一下这个库。（&lt;em&gt;奉劝各位看官，珍爱生命，远离argparse。&lt;/em&gt;）&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h1 id=&quot;介绍&quot;&gt;&lt;a href=&quot;#介绍&quot; class=&quot;headerlink&quot; title=&quot;介绍&quot;&gt;&lt;/a&gt;介绍&lt;/h1&gt;&lt;p&gt;docopt 本质上是在 Python 中引入了一种针对命令行参数的形式语言，在代码的最开头使用&lt;code&gt;&amp;quot;&amp;quot;&amp;quot;&lt;/code&gt;文档注释的形式写出符合要求的文档，就会自动生成对应的parse，体验非常赞。&lt;/p&gt;
&lt;h1 id=&quot;用法&quot;&gt;&lt;a href=&quot;#用法&quot; class=&quot;headerlink&quot; title=&quot;用法&quot;&gt;&lt;/a&gt;用法&lt;/h1&gt;&lt;h2 id=&quot;样例&quot;&gt;&lt;a href=&quot;#样例&quot; class=&quot;headerlink&quot; title=&quot;样例&quot;&gt;&lt;/a&gt;样例&lt;/h2&gt;&lt;p&gt;docopt的使用非常简单，以Qingchat为例，你只需要在代码最开头加入：&lt;/p&gt;
&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;string&quot;&gt;&quot;&quot;&quot;Qingchat CLI&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Usage:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  qingchat config ip &amp;lt;ip&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  qingchat config port &amp;lt;port&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  qingchat config login&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  qingchat group list&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  qingchat group choose &amp;lt;group_name&amp;gt;...&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  qingchat group clean&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  qingchat group send -t &amp;lt;content&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  qingchat group send -i &amp;lt;media&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  qingchat group send -f &amp;lt;file&amp;gt; [&amp;lt;delaytime&amp;gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Options:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  -h --help     Show this screen.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  -v --version     Show version.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&quot;&quot;&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;然后在执行代码中加入：&lt;/p&gt;
&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;arguments = docopt(__doc__, version=&lt;span class=&quot;string&quot;&gt;&#39;Qingchat 0.3.2&#39;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;就会在你的程序中导入一个&lt;code&gt;arguments&lt;/code&gt;字典，这个字典中的内容形如：&lt;/p&gt;
&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;string&quot;&gt;&#39;-f&#39;&lt;/span&gt;: &lt;span class=&quot;keyword&quot;&gt;False&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;string&quot;&gt;&#39;-i&#39;&lt;/span&gt;: &lt;span class=&quot;keyword&quot;&gt;False&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;string&quot;&gt;&#39;-t&#39;&lt;/span&gt;: &lt;span class=&quot;keyword&quot;&gt;False&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;string&quot;&gt;&#39;&amp;lt;content&amp;gt;&#39;&lt;/span&gt;: &lt;span class=&quot;keyword&quot;&gt;None&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;string&quot;&gt;&#39;&amp;lt;file&amp;gt;&#39;&lt;/span&gt;: &lt;span class=&quot;keyword&quot;&gt;None&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;string&quot;&gt;&#39;&amp;lt;group_name&amp;gt;&#39;&lt;/span&gt;: [],&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;string&quot;&gt;&#39;&amp;lt;ip&amp;gt;&#39;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&#39;127.0.0.1&#39;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;string&quot;&gt;&#39;&amp;lt;media&amp;gt;&#39;&lt;/span&gt;: &lt;span class=&quot;keyword&quot;&gt;None&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;string&quot;&gt;&#39;&amp;lt;port&amp;gt;&#39;&lt;/span&gt;: &lt;span class=&quot;keyword&quot;&gt;None&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;string&quot;&gt;&#39;choose&#39;&lt;/span&gt;: &lt;span class=&quot;keyword&quot;&gt;False&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;string&quot;&gt;&#39;clean&#39;&lt;/span&gt;: &lt;span class=&quot;keyword&quot;&gt;False&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;string&quot;&gt;&#39;config&#39;&lt;/span&gt;: &lt;span class=&quot;keyword&quot;&gt;True&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;string&quot;&gt;&#39;group&#39;&lt;/span&gt;: &lt;span class=&quot;keyword&quot;&gt;False&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;string&quot;&gt;&#39;ip&#39;&lt;/span&gt;: &lt;span class=&quot;keyword&quot;&gt;True&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;string&quot;&gt;&#39;list&#39;&lt;/span&gt;: &lt;span class=&quot;keyword&quot;&gt;False&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;string&quot;&gt;&#39;login&#39;&lt;/span&gt;: &lt;span class=&quot;keyword&quot;&gt;False&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;string&quot;&gt;&#39;port&#39;&lt;/span&gt;: &lt;span class=&quot;keyword&quot;&gt;False&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;string&quot;&gt;&#39;send&#39;&lt;/span&gt;: &lt;span class=&quot;keyword&quot;&gt;False&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;这样应该就能很容易看出来，我们在文档中写的每一个短语，都被转化为一个对应的类型。只要直接调用&lt;code&gt;arguments[&amp;#39;xxx&amp;#39;]&lt;/code&gt;就可以判断或者使用对应的值，从而实现对应的功能。&lt;/p&gt;
&lt;h2 id=&quot;详解&quot;&gt;&lt;a href=&quot;#详解&quot; class=&quot;headerlink&quot; title=&quot;详解&quot;&gt;&lt;/a&gt;详解&lt;/h2&gt;&lt;p&gt;前面我们举了一个例子，下面我们来详细介绍一下如何完成一个符合 &lt;code&gt;docopt&lt;/code&gt; 要求的注释文档。&lt;/p&gt;
&lt;h3 id=&quot;Usage&quot;&gt;&lt;a href=&quot;#Usage&quot; class=&quot;headerlink&quot; title=&quot;Usage&quot;&gt;&lt;/a&gt;Usage&lt;/h3&gt;&lt;p&gt;所有出现在&lt;code&gt;usage:&lt;/code&gt;（区分大小写）和一个空行之间的文本都会被识别为一个命令组合，&lt;code&gt;usage&lt;/code&gt;后的第一个字母将会被识别为这个程序的名字，所有命令组合的每一个部分（空格分隔）都会成为字典中的一个key。&lt;/p&gt;
&lt;h4 id=&quot;参数&quot;&gt;&lt;a href=&quot;#参数&quot; class=&quot;headerlink&quot; title=&quot;参数&quot;&gt;&lt;/a&gt;参数&lt;/h4&gt;&lt;p&gt;形如 &lt;code&gt;&amp;lt;argument&amp;gt;&lt;/code&gt; 或者 &lt;code&gt;ARGUMENT&lt;/code&gt; 的文本将会被识别为参数。&lt;br&gt;在转化后的字典中的取值为 &lt;code&gt;True&lt;/code&gt; 或者 &lt;code&gt;False&lt;/code&gt; 。&lt;/p&gt;
&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;Usage: my_program &amp;lt;host&amp;gt; &amp;lt;port&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4 id=&quot;选项&quot;&gt;&lt;a href=&quot;#选项&quot; class=&quot;headerlink&quot; title=&quot;选项&quot;&gt;&lt;/a&gt;选项&lt;/h4&gt;&lt;p&gt;形如 &lt;code&gt;-o&lt;/code&gt; 或者 &lt;code&gt;--option&lt;/code&gt; 的文本将会被识别为选项。&lt;br&gt;在转化后的字典中的取值为 &lt;code&gt;True&lt;/code&gt; 或者 &lt;code&gt;False&lt;/code&gt; 。&lt;/p&gt;
&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;Usage: my_program -f &amp;lt;file&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;Tips:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;短选项可以组合起来，比如&lt;code&gt;-abc&lt;/code&gt;等价于&lt;code&gt;-a -b -c&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;长选项需要的参数需要使用 &lt;code&gt;=&lt;/code&gt; 或者空格来分隔，&lt;code&gt;--input=ARG&lt;/code&gt; 等价于 &lt;code&gt;--input ARG&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;短选项可以不需要空格， &lt;code&gt;-f FILE&lt;/code&gt; 等价于 &lt;code&gt;-fFILE&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&quot;命令&quot;&gt;&lt;a href=&quot;#命令&quot; class=&quot;headerlink&quot; title=&quot;命令&quot;&gt;&lt;/a&gt;命令&lt;/h4&gt;&lt;p&gt;其他不满足 &lt;code&gt;--options&lt;/code&gt; 或者 &lt;code&gt;&amp;lt;arguments&amp;gt;&lt;/code&gt; 的文本将会被识别为（子）命令。&lt;br&gt;在转化后的字典中取值为 &lt;code&gt;True&lt;/code&gt; 或者 &lt;code&gt;False&lt;/code&gt;。&lt;/p&gt;
&lt;h4 id=&quot;可选项&quot;&gt;&lt;a href=&quot;#可选项&quot; class=&quot;headerlink&quot; title=&quot;可选项&quot;&gt;&lt;/a&gt;可选项&lt;/h4&gt;&lt;p&gt;形如 &lt;code&gt;[optional elements]&lt;/code&gt; 的文本是可选项。&lt;br&gt;&lt;code&gt;elements&lt;/code&gt;包括上述的三种类型：参数，选项以及命令。&lt;/p&gt;
&lt;p&gt;在相同或者不同的括号中都是一样的：&lt;/p&gt;
&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;Usage: my_program [command --option &amp;lt;argument&amp;gt;]&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;等价于&lt;/p&gt;
&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;Usage: my_program [command] [--option] [&amp;lt;argument&amp;gt;]&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4 id=&quot;必填项&quot;&gt;&lt;a href=&quot;#必填项&quot; class=&quot;headerlink&quot; title=&quot;必填项&quot;&gt;&lt;/a&gt;必填项&lt;/h4&gt;&lt;p&gt;形如 &lt;code&gt;(required elements)&lt;/code&gt; 的文本是必填项。&lt;br&gt;上述三种元素默认都是必填项，&lt;code&gt;()&lt;/code&gt;符号用在一些比较特殊的情形下，比如：&lt;/p&gt;
&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;Usage: my_program (--either-this &amp;lt;&lt;span class=&quot;keyword&quot;&gt;and&lt;/span&gt;-that&amp;gt; | &amp;lt;&lt;span class=&quot;keyword&quot;&gt;or&lt;/span&gt;-this&amp;gt;)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4 id=&quot;选择项&quot;&gt;&lt;a href=&quot;#选择项&quot; class=&quot;headerlink&quot; title=&quot;选择项&quot;&gt;&lt;/a&gt;选择项&lt;/h4&gt;&lt;p&gt;形如 &lt;code&gt;element|another&lt;/code&gt; 的文本是选择项，你可以从中选择一个值。&lt;/p&gt;
&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;Usage: my_program go (--up | --down | --left | --right)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4 id=&quot;列表项&quot;&gt;&lt;a href=&quot;#列表项&quot; class=&quot;headerlink&quot; title=&quot;列表项&quot;&gt;&lt;/a&gt;列表项&lt;/h4&gt;&lt;p&gt;形如 &lt;code&gt;element...&lt;/code&gt; 的文本是列表项，你可以输入多个参数。&lt;/p&gt;
&lt;p&gt;比如说：&lt;/p&gt;
&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;Usage: my_program open &amp;lt;file&amp;gt;...&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;然后你可以通过&lt;code&gt;arguments[&amp;#39;&amp;lt;file&amp;gt;&amp;#39;]&lt;/code&gt; 来访问这个列表。&lt;/p&gt;
&lt;h3 id=&quot;Option&quot;&gt;&lt;a href=&quot;#Option&quot; class=&quot;headerlink&quot; title=&quot;Option&quot;&gt;&lt;/a&gt;Option&lt;/h3&gt;&lt;p&gt;&lt;code&gt;Option&lt;/code&gt; 部分用于指定某些特殊情形，比如：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;将某个短参数与长参数关联起来，比如&lt;code&gt;-i &amp;lt;file&amp;gt;, --input &amp;lt;file&amp;gt;&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;某个选项有一个参数&lt;/li&gt;
&lt;li&gt;选项的默认值，比如&lt;code&gt;--coefficient=K  The K coefficient [default: 2.95]&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;校验&quot;&gt;&lt;a href=&quot;#校验&quot; class=&quot;headerlink&quot; title=&quot;校验&quot;&gt;&lt;/a&gt;校验&lt;/h3&gt;&lt;p&gt;如果对自己完成的文档有疑问，可以使用&lt;a href=&quot;http://try.docopt.org/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;在线工具&lt;/a&gt;进行校验。&lt;/p&gt;
&lt;h1 id=&quot;更新日志&quot;&gt;&lt;a href=&quot;#更新日志&quot; class=&quot;headerlink&quot; title=&quot;更新日志&quot;&gt;&lt;/a&gt;更新日志&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;2016年04月04日 首次发布&lt;/li&gt;
&lt;/ul&gt;
</content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h1&gt;&lt;p&gt;&lt;a href=&quot;https://github.com/Xuanwo/qingchat&quot;&gt;&lt;code&gt;Qingchat&lt;/code&gt;&lt;/a&gt; 使用的命令行参数解释器是 &lt;a href=&quot;http://docopt.org/&quot;&gt;&lt;code&gt;docopt&lt;/code&gt;&lt;/a&gt;，用下来感觉非常棒，所以决定介绍一下这个库。（&lt;em&gt;奉劝各位看官，珍爱生命，远离argparse。&lt;/em&gt;）&lt;/p&gt;
    
    </summary>
    
      <category term="Develop" scheme="https://xuanwo.org/categories/Develop/"/>
    
    
      <category term="python" scheme="https://xuanwo.org/tags/python/"/>
    
      <category term="qingchat" scheme="https://xuanwo.org/tags/qingchat/"/>
    
  </entry>
  
  <entry>
    <title>微信多群直播的新探索——Qingchat</title>
    <link href="https://xuanwo.org/2016/04/01/qingchat-intro/"/>
    <id>https://xuanwo.org/2016/04/01/qingchat-intro/</id>
    <published>2016-04-01T22:03:00.000Z</published>
    <updated>2016-07-14T14:10:22.682Z</updated>
    
    <content type="html">&lt;h1 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h1&gt;&lt;p&gt;在我之前写过的一篇文章中，我曾经探索过类似的问题：&lt;a href=&quot;https://xuanwo.org/2016/02/28/wechat-remove/&quot;&gt;微信群重复人员识别&lt;/a&gt;。当初我就提出过能否自动获取相关数据，但因为种种原因的限制不了了之了。后来发现了&lt;a href=&quot;https://github.com/sjdy521/Mojo-Weixin&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Mojo-Weixin&lt;/a&gt;这个库之后，我决定在这个的基础上实现一个微信多群直播的工具——Qingchat。（&lt;em&gt;尽管在刚刚实现完不久，微信就更新了转发到多个群的功能，Sad。&lt;/em&gt;）探索的成果如下： &lt;a href=&quot;https://github.com/Xuanwo/qingchat&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Qingchat&lt;/a&gt;，目前仅支持 python3 ，欢迎各位看官提 issues ，交 code ，或者拍砖。&lt;br&gt;接下来我会先介绍一下 Qingchat 的原理，然后介绍 Qingchat 的使用，最后展望一下 Qingchat 未来的发展方向。&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h1 id=&quot;原理&quot;&gt;&lt;a href=&quot;#原理&quot; class=&quot;headerlink&quot; title=&quot;原理&quot;&gt;&lt;/a&gt;原理&lt;/h1&gt;&lt;p&gt;Qingchat 基于 &lt;a href=&quot;https://github.com/sjdy521/Mojo-Weixin&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Mojo-Weixin&lt;/a&gt; 进行开发，通过调用 Mojo－Winxin 的 http 接口与微信服务器进行通信以实现群发功能。目前主要支持微信群发工作，可以从文件中读取内容，并根据内容长度设置发送延时以模拟真人输入效果。&lt;/p&gt;
&lt;h1 id=&quot;用法&quot;&gt;&lt;a href=&quot;#用法&quot; class=&quot;headerlink&quot; title=&quot;用法&quot;&gt;&lt;/a&gt;用法&lt;/h1&gt;&lt;h2 id=&quot;配置&quot;&gt;&lt;a href=&quot;#配置&quot; class=&quot;headerlink&quot; title=&quot;配置&quot;&gt;&lt;/a&gt;配置&lt;/h2&gt;&lt;p&gt;想要使用Qingchat，首先需要在服务器或者本地配置好 Mojo－Weixin 环境。&lt;/p&gt;
&lt;h3 id=&quot;测试-amp-安装perl环境&quot;&gt;&lt;a href=&quot;#测试-amp-安装perl环境&quot; class=&quot;headerlink&quot; title=&quot;测试&amp;amp;安装perl环境&quot;&gt;&lt;/a&gt;测试&amp;amp;安装perl环境&lt;/h3&gt;&lt;p&gt;除了 Windows 环境，大部门环境下已经默认预装了 perl 环境，可以通过｀perl －－version｀查看。本环境要求 perl 5.10 以上。&lt;br&gt;缺乏相关环境的，可以安装对应系统的集成包：&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;平台&lt;/th&gt;
&lt;th&gt;推荐选择&lt;/th&gt;
&lt;th&gt;下载地址&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Windows&lt;/td&gt;
&lt;td&gt;1. &lt;strong&gt;StrawberryPerl&lt;/strong&gt;&lt;br&gt;2. ActivePerl&lt;br&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href=&quot;http://strawberryperl.com/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;StrawberryPerl下载地址&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;http://www.activestate.com/activeperl/downloads&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;ActivePerl下载地址&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Linux&lt;/td&gt;
&lt;td&gt;1. &lt;strong&gt;ActivePerl&lt;/strong&gt;&lt;br&gt;2. 官方源码&lt;br&gt;3. yum/apt等包管理器&lt;br&gt;4. Mojo-ActivePerl&lt;/td&gt;
&lt;td&gt;&lt;a href=&quot;http://www.activestate.com/activeperl/downloads&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;ActivePerl下载地址&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://github.com/sjdy521/Mojo-ActivePerl&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Mojo-ActivePerl下载地址&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Mac&lt;/td&gt;
&lt;td&gt;1. &lt;strong&gt;ActivePerl&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href=&quot;http://www.activestate.com/activeperl/downloads&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;ActivePerl下载地址&lt;/a&gt;｜&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id=&quot;安装-Mojo-Weixin-模块&quot;&gt;&lt;a href=&quot;#安装-Mojo-Weixin-模块&quot; class=&quot;headerlink&quot; title=&quot;安装 Mojo::Weixin 模块&quot;&gt;&lt;/a&gt;安装 Mojo::Weixin 模块&lt;/h3&gt;&lt;p&gt;首先需要安装 cpanm 工具：&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;cpan -i App::cpanminus&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;然后通过 cpanm 工具安装 Mojo::Weixin&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;cpanm Mojo::Weixin&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;运行&quot;&gt;&lt;a href=&quot;#运行&quot; class=&quot;headerlink&quot; title=&quot;运行&quot;&gt;&lt;/a&gt;运行&lt;/h3&gt;&lt;p&gt;将如下代码使用utf－8编码保存为源码文件：&lt;/p&gt;
&lt;figure class=&quot;highlight perl&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;#!/usr/bin/env perl&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;use&lt;/span&gt; Mojo::Weixin;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;my&lt;/span&gt; ($host,$port,$post_api);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$host = &lt;span class=&quot;string&quot;&gt;&quot;0.0.0.0&quot;&lt;/span&gt;; &lt;span class=&quot;comment&quot;&gt;#发送消息接口监听地址，修改为自己希望监听的地址&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$port = &lt;span class=&quot;number&quot;&gt;3000&lt;/span&gt;;      &lt;span class=&quot;comment&quot;&gt;#发送消息接口监听端口，修改为自己希望监听的端口&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;#$post_api = &#39;http://xxxx&#39;;  #接收到的消息上报接口，如果不需要接收消息上报，可以删除或注释此行&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;my&lt;/span&gt; $client = Mojo::Weixin-&amp;gt;new(&lt;span class=&quot;string&quot;&gt;log_level=&amp;gt;&lt;/span&gt;&lt;span class=&quot;string&quot;&gt;&quot;info&quot;&lt;/span&gt;,&lt;span class=&quot;string&quot;&gt;ua_debug=&amp;gt;&lt;/span&gt;&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;,&lt;span class=&quot;string&quot;&gt;qrcode_path=&amp;gt;&lt;/span&gt;&lt;span class=&quot;string&quot;&gt;&quot;qrcode.jpg&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$client-&amp;gt;login();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$client-&amp;gt;load(&lt;span class=&quot;string&quot;&gt;&quot;ShowMsg&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$client-&amp;gt;load(&lt;span class=&quot;string&quot;&gt;&quot;Openwx&quot;&lt;/span&gt;,&lt;span class=&quot;string&quot;&gt;data=&amp;gt;&lt;/span&gt;&amp;#123;&lt;span class=&quot;string&quot;&gt;listen=&amp;gt;&lt;/span&gt;[&amp;#123;&lt;span class=&quot;string&quot;&gt;host=&amp;gt;&lt;/span&gt;$host,&lt;span class=&quot;string&quot;&gt;port=&amp;gt;&lt;/span&gt;$port&amp;#125;], &lt;span class=&quot;string&quot;&gt;post_api=&amp;gt;&lt;/span&gt;$post_api&amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$client-&amp;gt;run();&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;上述代码保存为 &lt;code&gt;test.pl&lt;/code&gt; ， 并通过 perl 来运行：&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;perl test.pl&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;然后就会产生一个监听 3000 端口的 http 服务器。&lt;/p&gt;
&lt;p&gt;未竟事宜可以参考&lt;a href=&quot;https://github.com/sjdy521/Mojo-Weixin/blob/master/README.md&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;此处&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&quot;配置Nginx&quot;&gt;&lt;a href=&quot;#配置Nginx&quot; class=&quot;headerlink&quot; title=&quot;配置Nginx&quot;&gt;&lt;/a&gt;配置Nginx&lt;/h3&gt;&lt;p&gt;为了方便调用二维码，还需要配置一个 Web 服务器。安装Nginx，在配置文件中添加：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;server &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    listen 80 default_server;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    listen [::]:80 default_server ipv6only=on;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    root /path/to/your/qrcode; # &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;最终，能在浏览器中以 &lt;code&gt;http://xxx.xxx.xxx.xxx/qrcode.jpg&lt;/code&gt; 的形式访问到二维码即配置成功。&lt;/p&gt;
&lt;h2 id=&quot;安装Qingchat&quot;&gt;&lt;a href=&quot;#安装Qingchat&quot; class=&quot;headerlink&quot; title=&quot;安装Qingchat&quot;&gt;&lt;/a&gt;安装Qingchat&lt;/h2&gt;&lt;h3 id=&quot;pip&quot;&gt;&lt;a href=&quot;#pip&quot; class=&quot;headerlink&quot; title=&quot;pip&quot;&gt;&lt;/a&gt;pip&lt;/h3&gt;&lt;p&gt;Qingchat已经上传到了pypi，只需要使用pip进行安装即可：&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;pip install qingchat&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;源码&quot;&gt;&lt;a href=&quot;#源码&quot; class=&quot;headerlink&quot; title=&quot;源码&quot;&gt;&lt;/a&gt;源码&lt;/h3&gt;&lt;p&gt;Qingchat最新开发版代码位于： &lt;a href=&quot;https://github.com/Xuanwo/qingchat/tree/dev&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://github.com/Xuanwo/qingchat/tree/dev&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;你可以使用&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;pip install &lt;span class=&quot;_&quot;&gt;-e&lt;/span&gt; git+https://github.com/Xuanwo/qingchat/tree/dev&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;或&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;git &lt;span class=&quot;built_in&quot;&gt;clone&lt;/span&gt; https://github.com/Xuanwo/qingchat/tree/dev&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;cd&lt;/span&gt; qingchat&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;python setup.py install&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;以进行安装。&lt;/p&gt;
&lt;h2 id=&quot;使用&quot;&gt;&lt;a href=&quot;#使用&quot; class=&quot;headerlink&quot; title=&quot;使用&quot;&gt;&lt;/a&gt;使用&lt;/h2&gt;&lt;p&gt;Qingchat 的使用非常简单：&lt;/p&gt;
&lt;h3 id=&quot;配置-1&quot;&gt;&lt;a href=&quot;#配置-1&quot; class=&quot;headerlink&quot; title=&quot;配置&quot;&gt;&lt;/a&gt;配置&lt;/h3&gt;&lt;p&gt;通过如下命令配置后端服务器的 ip 地址和端口：&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;qingchat config ip &amp;lt;ip&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;qingchat config port &amp;lt;port&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;配置文件默认会保存在&lt;code&gt;~/.config/qingchat/config.yml&lt;/code&gt;。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Win下可能需要设置&lt;code&gt;HOME&lt;/code&gt;环境变量才能正常运行&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&quot;登陆&quot;&gt;&lt;a href=&quot;#登陆&quot; class=&quot;headerlink&quot; title=&quot;登陆&quot;&gt;&lt;/a&gt;登陆&lt;/h3&gt;&lt;p&gt;配置完毕后，执行&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;qingchat config login&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;就会自动弹出一个二维码，使用微信扫描并登录后即可。如果出现问题，请再次执行此命令。&lt;/p&gt;
&lt;h3 id=&quot;群发消息&quot;&gt;&lt;a href=&quot;#群发消息&quot; class=&quot;headerlink&quot; title=&quot;群发消息&quot;&gt;&lt;/a&gt;群发消息&lt;/h3&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;qingchat group list&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;此命令可以列出你保存到通讯录中的所有群组。&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;qingchat group choose &amp;lt;group_name&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;此命令可以将指定群组加入列表，支持正则&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;qingchat group clean&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;此命令可以清除列表&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;qingchat group send -t &amp;lt;content&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;qingchat group send -i &amp;lt;media&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;qingchat group send &lt;span class=&quot;_&quot;&gt;-f&lt;/span&gt; &amp;lt;file&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;-t&lt;/code&gt; 参数用于发送文本信息&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-i&lt;/code&gt; 参数用于发送媒体信息，图片会直接显示，其他类型将以文件形式传输&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-f&lt;/code&gt; 参数用于指定文件，逐行发送，在开头添加&lt;code&gt;!&lt;/code&gt;可以发送媒体信息&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&quot;展望&quot;&gt;&lt;a href=&quot;#展望&quot; class=&quot;headerlink&quot; title=&quot;展望&quot;&gt;&lt;/a&gt;展望&lt;/h1&gt;&lt;p&gt;Qingchat 目前还处于开发阶段，功能不完善，BUG也很多，部署也相当麻烦。接下来，我将努力完成以下工作：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;更好的二维码呈现机制&lt;/li&gt;
&lt;li&gt;基于 Web 的图形化界面&lt;/li&gt;
&lt;li&gt;支持消息上报的 Server 端&lt;/li&gt;
&lt;li&gt;更多功能的实现，支持好友管理&amp;amp;群组管理等&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&quot;更新日志&quot;&gt;&lt;a href=&quot;#更新日志&quot; class=&quot;headerlink&quot; title=&quot;更新日志&quot;&gt;&lt;/a&gt;更新日志&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;2016年04月01日 初次发布&lt;/li&gt;
&lt;/ul&gt;
</content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h1&gt;&lt;p&gt;在我之前写过的一篇文章中，我曾经探索过类似的问题：&lt;a href=&quot;https://xuanwo.org/2016/02/28/wechat-remove/&quot;&gt;微信群重复人员识别&lt;/a&gt;。当初我就提出过能否自动获取相关数据，但因为种种原因的限制不了了之了。后来发现了&lt;a href=&quot;https://github.com/sjdy521/Mojo-Weixin&quot;&gt;Mojo-Weixin&lt;/a&gt;这个库之后，我决定在这个的基础上实现一个微信多群直播的工具——Qingchat。（&lt;em&gt;尽管在刚刚实现完不久，微信就更新了转发到多个群的功能，Sad。&lt;/em&gt;）探索的成果如下： &lt;a href=&quot;https://github.com/Xuanwo/qingchat&quot;&gt;Qingchat&lt;/a&gt;，目前仅支持 python3 ，欢迎各位看官提 issues ，交 code ，或者拍砖。&lt;br&gt;接下来我会先介绍一下 Qingchat 的原理，然后介绍 Qingchat 的使用，最后展望一下 Qingchat 未来的发展方向。&lt;/p&gt;
    
    </summary>
    
      <category term="Develop" scheme="https://xuanwo.org/categories/Develop/"/>
    
    
  </entry>
  
  <entry>
    <title>罹患痛风感言</title>
    <link href="https://xuanwo.org/2016/03/13/gout/"/>
    <id>https://xuanwo.org/2016/03/13/gout/</id>
    <published>2016-03-13T13:44:00.000Z</published>
    <updated>2016-07-14T14:10:22.678Z</updated>
    
    <content type="html">&lt;p&gt;其实我很想写出获奖感言的感觉，但是痛风发作的时候真的好疼啊。。。&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h1 id=&quot;起因&quot;&gt;&lt;a href=&quot;#起因&quot; class=&quot;headerlink&quot; title=&quot;起因&quot;&gt;&lt;/a&gt;起因&lt;/h1&gt;&lt;p&gt;从高中开始，中指的关节就一直有一些不明的肿胀，摸上去硬硬的，平时也不会痛，只是屈伸和握拳的时候有些困难。一直到了大学，我女朋友一直非常在意我的手，总是催我去医院看看。于是假期的时候，我跟我妈去医院挂了骨科，还拍了CT，但是医生却说骨头没有问题，关节也没异常，让我去别的科室看看。其实我是有些懵逼的，因为我原来预想的最差的结果就是动一下手术，然后休息个把个月。现在这种状况让我有些隐约的不妙，毕竟未知才是最可怕的东西。&lt;br&gt;因为对家乡的医院水平比较怀疑，所以到了北京之后又挂了北医三院的号，然后做了一堆检查，那个医生让我挂一个副教授的号= =，说他不能确定，以前没有见过。好吧，我再挂一个副教授的号。然后副教授告诉我他也不能确定，让我去做一个更厉害的测试（RMB800+）。等到下一次又挂上号之后，他告诉我有了这个单子之后就能确诊我是痛风了。然后叮嘱我不要吃海鲜和啤酒，要多注意饮食，多喝水，控制体内尿酸含量，然后开了一堆降低尿酸的药。&lt;/p&gt;
&lt;h1 id=&quot;服药&quot;&gt;&lt;a href=&quot;#服药&quot; class=&quot;headerlink&quot; title=&quot;服药&quot;&gt;&lt;/a&gt;服药&lt;/h1&gt;&lt;p&gt;收了药之后就开始了一段稳定的服药阶段，医生给我开了三种药：苯溴马隆，痛风定和碳酸氢钠片。 &lt;em&gt;当然，我也是后来才知道医生给我开的药的搭配合理之处，不过那个时候的我还不太了解，所以才有了之后的磨难。&lt;/em&gt; 苯溴马隆每天一片，痛风定每日三次，每次一片，碳酸氢钠每日三次，每次一片。那几天我基本上每天嘴巴里面都是药味，然后每天手里都捧着我的水杯喝个不停。主要的原因还是因为自己对于痛风以及伴随痛风而来的疼痛的恐惧，当然有些过激，但是现在感觉很有必要，只是那个时候还不是很明白。&lt;br&gt;除了吃药之外，每天的饮食也有一些变化，肉食倒是没有断，只是不再吃鱼了，这个让我那个喜欢吃鱼的女朋友非常难过。平时也不怎么喝酒，所以戒酒对于我来说倒是没有什么问题，反而多了一个可以合理拒绝敬酒的理由。&lt;br&gt;这种境况一直持续到我回家，我妈妈以及很多亲人都劝我不要再吃药了，主要的想法是这样的：这个病治不好的，吃药没有用，主要依靠饮食控制。很多药，比如苯溴马隆的副作用又很大，对肾不好等等。这么想也有道理，于是我就停了药，只是每天依然坚持多喝一些水。只是量没有达到医生的要求，医生当初给我开药的时候让我每天喝2.5升水，我在家的几天估计只喝了1升每天。&lt;/p&gt;
&lt;h1 id=&quot;发作&quot;&gt;&lt;a href=&quot;#发作&quot; class=&quot;headerlink&quot; title=&quot;发作&quot;&gt;&lt;/a&gt;发作&lt;/h1&gt;&lt;p&gt;再次开学之后，我已经停药大概一个月左右，身体没有发现任何异常，中指的关节还有一些变小的趋势，一切都在往好的方向发展。于是我做了一个现在挺后悔的决定：去打球。&lt;br&gt;第一次是周二，跟我的同学在一起打得。打得非常尽兴，由于很久没有运动，打完之后浑身酸软，第二天起床基本抬不起手的那种。我不是很明白这其中的机理，可能是运动产生的乳酸通过某种形式转化为了尿酸，然后沉积了起来。症状不明显，中指有些轻微发热而已，我以为是乳酸分解的正常现象，没有及时采取措施。然后周四晚上我又去跟公司里面的同事打球了，当然同样也很开心，虽说右手活动起来有些困难。回校之后，中指就开始以肉眼可见的速度肿胀起来。这个时候还没有觉得痛，只是行动稍微有些不便，跟女朋友说了之后，也只是让我好好休息，多喝喝水而已。一直到了周六的晚上，右手中指时不时地开始抽痛，左手食指的根部也开始红肿了起来，我有些紧张，开始大量喝茶，希望可以把尿酸都排出去。但，事与愿违。&lt;br&gt;到了周日的晚上，中指越来越严重的刺痛感已经让我完全睡不着觉了。那天晚上我抱着水杯通宵看完了 QG 与 Fnatic 的比赛（QG还输了，Sad），好不容易睡着之后，第二天发现情况并没有变好，反而感觉更加严重了——我完全没有办法忍受哪怕是穿衣服这种时候给我手指带来的疼痛感。没有办法，我打电话给我女朋友说明了情况，跟公司里面请了假，让舍友替我请假，全天呆在宿舍里面，只干一件事情——喝水。&lt;br&gt;那几天真的让我女朋友操碎了心，她把每种食物的嘌呤含量都背了下来，然后只给我买低嘌呤含量的东西送给我吃。但即使是这样，我的疼痛感也没有减轻很多。万般无奈之下，女朋友带我去挂了急诊，结果急诊的护士冷冰冰地告诉我们这个是痛风，让我们第二天来挂风湿免疫科。在好心人的指点下，我们去药房买了秋水仙碱，那个据说对缓解痛风急性发作由奇效的药。回去之后，我按照说明书，一个小时吃一片，吃了六个小时，但是感觉没有什么用。后来看了一个医生的博客，我采用了一次性吃两片，过一个小时之后再吃一片的策略。到了第二天，关节的肿痛有了很大的改善，配合上大量饮水，基本上已经可以正常生活了。&lt;/p&gt;
&lt;h1 id=&quot;尾声&quot;&gt;&lt;a href=&quot;#尾声&quot; class=&quot;headerlink&quot; title=&quot;尾声&quot;&gt;&lt;/a&gt;尾声&lt;/h1&gt;&lt;p&gt;秋水仙碱作为一个剧毒物果然名不虚传，我被它的药效支配了很久，在我们宿舍的门口把我吃的一整碗炒饭全都吐了出来。不仅如此，我还腹泻了好几天，基本上没过多久就要上一次大号。&lt;br&gt;时至今日，我的左手食指根红肿已经全部退去，右手中指关节还有些肿，但是已经不会再有抽痛感，已经可以恢复正常生活了。&lt;/p&gt;
&lt;h1 id=&quot;致谢&quot;&gt;&lt;a href=&quot;#致谢&quot; class=&quot;headerlink&quot; title=&quot;致谢&quot;&gt;&lt;/a&gt;致谢&lt;/h1&gt;&lt;p&gt;首先要非常感谢我女朋友对我的无微不至的照顾（尽管她并不看我的博客），她记下了每一种食物的嘌呤含量，专门买了PH值8.0的苏打水给我喝，如果没有她的帮助和支持，我不知道如何度过噩梦般的那几天；其次要感谢我的室友，他们帮我带饭，帮我请假，帮我穿衣服（恩- -，只是外套而已），在我呕吐之后替我打扫，喂我喝水甚至包括帮我开矿泉水的瓶盖和拉开宿舍的门等等，没有他们的话，我可能真的就只能躺在床上什么都做不了了；最后要感谢公司的同事们承担了本来属于我的工作，只对我说一句好好休息而已。&lt;br&gt;非常感谢你们，你们是我在那几天痛苦的回忆里面唯一的亮色。&lt;/p&gt;
&lt;h1 id=&quot;总结&quot;&gt;&lt;a href=&quot;#总结&quot; class=&quot;headerlink&quot; title=&quot;总结&quot;&gt;&lt;/a&gt;总结&lt;/h1&gt;&lt;p&gt;痛风发作是一件非常痛苦的事情，所以平时各位一定要注意饮食，养成良好的习惯，有条件的话定期去医院做检查，将疾病扼杀在摇篮之中。&lt;/p&gt;
&lt;p&gt;即使患上了痛风，也不要自暴自弃，控制饮食，合理用药，完全可以保证以后不再发作：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;痛风急性发作时：服用秋水仙碱（一次性两片，过一个小时后再服一片，如果不见好转，12小时后再服一片）和止疼药（布洛芬等等）&lt;/li&gt;
&lt;li&gt;痛风间歇期时：服用苯溴马隆（一天一片）以促进尿酸排泄，碳酸氢钠（碱化尿液，便于尿酸排出）&lt;/li&gt;
&lt;li&gt;长期用药：别嘌呤醇（副作用大），痛风定非布索坦（副作用小，但极贵），痛风定胶囊（中药，可减少嘌呤生成）&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&quot;更新日志&quot;&gt;&lt;a href=&quot;#更新日志&quot; class=&quot;headerlink&quot; title=&quot;更新日志&quot;&gt;&lt;/a&gt;更新日志&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;2016年03月13日 首次发布&lt;/li&gt;
&lt;/ul&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;其实我很想写出获奖感言的感觉，但是痛风发作的时候真的好疼啊。。。&lt;/p&gt;
    
    </summary>
    
      <category term="Daily" scheme="https://xuanwo.org/categories/Daily/"/>
    
    
  </entry>
  
  <entry>
    <title>Neovim慢速升级攻略</title>
    <link href="https://xuanwo.org/2016/03/12/neovim-slow-upgrade/"/>
    <id>https://xuanwo.org/2016/03/12/neovim-slow-upgrade/</id>
    <published>2016-03-12T11:00:00.000Z</published>
    <updated>2016-07-14T14:10:22.682Z</updated>
    
    <content type="html">&lt;h1 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h1&gt;&lt;p&gt;一直都非常羡慕那些能把vim用得非常溜的人，但是自己总是不情愿去学，总是觉得vim的操作方式非常反人类，难度曲线太陡，不适合我。真正让我下定决心去学的，是因为系统切换到Ubuntu Gnome之后发现，Sublime Text 3 不能原生支持中文输入。同时我也发现，如果我不上来就折腾spf13这样的东西的话，其实vim非常好懂。于是，Neovim的慢速升级攻略就这样诞生了。&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h1 id=&quot;安装&quot;&gt;&lt;a href=&quot;#安装&quot; class=&quot;headerlink&quot; title=&quot;安装&quot;&gt;&lt;/a&gt;安装&lt;/h1&gt;&lt;p&gt;安装可以参考&lt;a href=&quot;https://github.com/neovim/neovim/wiki/Installing-Neovim&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;此处&lt;/a&gt;&lt;br&gt;如果是Ubuntu 的话，则可以执行如下代码：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;sudo add-apt-repository ppa:neovim-ppa/unstable&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;sudo apt-get update&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;sudo apt-get install neovim&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h1 id=&quot;Neovim常用操作&quot;&gt;&lt;a href=&quot;#Neovim常用操作&quot; class=&quot;headerlink&quot; title=&quot;Neovim常用操作&quot;&gt;&lt;/a&gt;Neovim常用操作&lt;/h1&gt;&lt;h2 id=&quot;初步&quot;&gt;&lt;a href=&quot;#初步&quot; class=&quot;headerlink&quot; title=&quot;初步&quot;&gt;&lt;/a&gt;初步&lt;/h2&gt;&lt;h3 id=&quot;光标移动&quot;&gt;&lt;a href=&quot;#光标移动&quot; class=&quot;headerlink&quot; title=&quot;光标移动&quot;&gt;&lt;/a&gt;光标移动&lt;/h3&gt;&lt;p&gt;&lt;code&gt;gg&lt;/code&gt; 移动到文件开头&lt;br&gt;&lt;code&gt;G&lt;/code&gt; 移动到文件末尾&lt;/p&gt;
&lt;h3 id=&quot;文件操作相关&quot;&gt;&lt;a href=&quot;#文件操作相关&quot; class=&quot;headerlink&quot; title=&quot;文件操作相关&quot;&gt;&lt;/a&gt;文件操作相关&lt;/h3&gt;&lt;p&gt;&lt;code&gt;:w &amp;lt;filename&amp;gt;&lt;/code&gt; 按照&lt;filename&gt;保存文件&lt;br&gt;&lt;code&gt;:wq&lt;/code&gt; 保存并退出&lt;br&gt;&lt;code&gt;:q!&lt;/code&gt; 退出不保存&lt;br&gt;&lt;code&gt;:e&lt;/code&gt; 打开新的文件并关闭当前文件，使用Tab可以补全&lt;/filename&gt;&lt;/p&gt;
&lt;h3 id=&quot;文件编辑相关&quot;&gt;&lt;a href=&quot;#文件编辑相关&quot; class=&quot;headerlink&quot; title=&quot;文件编辑相关&quot;&gt;&lt;/a&gt;文件编辑相关&lt;/h3&gt;&lt;p&gt;&lt;code&gt;dd&lt;/code&gt; 删除当前行&lt;br&gt;&lt;code&gt;y&lt;/code&gt; 复制&lt;br&gt;&lt;code&gt;yy&lt;/code&gt; 复制当前行&lt;br&gt;&lt;code&gt;yG&lt;/code&gt; 复制光标以上全部行&lt;br&gt;&lt;code&gt;ygg&lt;/code&gt; 复制光标以下全部行&lt;br&gt;&lt;code&gt;p&lt;/code&gt; 粘贴&lt;br&gt;&lt;code&gt;u&lt;/code&gt; 撤销&lt;/p&gt;
&lt;h2 id=&quot;入门&quot;&gt;&lt;a href=&quot;#入门&quot; class=&quot;headerlink&quot; title=&quot;入门&quot;&gt;&lt;/a&gt;入门&lt;/h2&gt;&lt;h3 id=&quot;使用内置终端&quot;&gt;&lt;a href=&quot;#使用内置终端&quot; class=&quot;headerlink&quot; title=&quot;使用内置终端&quot;&gt;&lt;/a&gt;使用内置终端&lt;/h3&gt;&lt;p&gt;&lt;code&gt;:terminal&lt;/code&gt; 打开终端，输入exit并使用&lt;code&gt;esc&lt;/code&gt;或&lt;code&gt;enter&lt;/code&gt;即可退出&lt;/p&gt;
&lt;h3 id=&quot;与系统剪切板集成&quot;&gt;&lt;a href=&quot;#与系统剪切板集成&quot; class=&quot;headerlink&quot; title=&quot;与系统剪切板集成&quot;&gt;&lt;/a&gt;与系统剪切板集成&lt;/h3&gt;&lt;p&gt;这个地方折腾了好久，Neovim默认是支持&lt;code&gt;+&lt;/code&gt;寄存器的，但是我通过&lt;code&gt;&amp;quot;+y&lt;/code&gt;命令调用寄存器时却提示&lt;code&gt;Clipboard No Provider&lt;/code&gt;。通过阅读&lt;a href=&quot;https://github.com/neovim/neovim/blob/master/runtime/doc/nvim_clipboard.txt#L19-L27&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;文档&lt;/a&gt;之后，我得知，必须要安装下列三个包中的至少一个，才能正常使用剪切板：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;xclip&lt;/li&gt;
&lt;li&gt;xsel (newer alternative to xclip)&lt;/li&gt;
&lt;li&gt;pbcopy/pbpaste (only for Mac OS X)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;安装好之后再打开，就可以正常使用了。&lt;/p&gt;
&lt;p&gt;&lt;em&gt;快速复制全文的技巧： 在Normal模式下，&lt;code&gt;gg&lt;/code&gt;跳转到文章开头，&lt;code&gt;VG&lt;/code&gt;选中全文，&lt;code&gt;&amp;quot;+y&lt;/code&gt;复制到剪切板。&lt;/em&gt;&lt;/p&gt;
&lt;h1 id=&quot;Neovim插件&quot;&gt;&lt;a href=&quot;#Neovim插件&quot; class=&quot;headerlink&quot; title=&quot;Neovim插件&quot;&gt;&lt;/a&gt;Neovim插件&lt;/h1&gt;&lt;h2 id=&quot;vim-airline&quot;&gt;&lt;a href=&quot;#vim-airline&quot; class=&quot;headerlink&quot; title=&quot;vim-airline&quot;&gt;&lt;/a&gt;vim-airline&lt;/h2&gt;&lt;p&gt;&lt;a href=&quot;https://github.com/vim-airline/vim-airline&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;vim-airline&lt;/a&gt;是一个vim的状态栏插件，同样支持neovim。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://github.com/vim-airline/vim-airline/wiki/screenshots/demo.gif&quot; alt=&quot;vim-airline demo&quot;&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;安装此插件后启动nvim会报错，自行编译后错误消失，不知道具体的原因。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&quot;Smarter-tab-line&quot;&gt;&lt;a href=&quot;#Smarter-tab-line&quot; class=&quot;headerlink&quot; title=&quot;Smarter tab line&quot;&gt;&lt;/a&gt;Smarter tab line&lt;/h3&gt;&lt;p&gt;在&lt;code&gt;init.vim&lt;/code&gt;中加入&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;apos; 开启tabline功能&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;let g:airline#extensions#tabline#enabled = 1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;apos; 设置tabline分隔符&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;let g:airline#extensions#tabline#left_sep = &amp;apos; &amp;apos;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;let g:airline#extensions#tabline#left_alt_sep = &amp;apos;|&amp;apos;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;支持的一些快捷操作命令：&lt;/p&gt;
&lt;p&gt;&lt;code&gt;:bn&lt;/code&gt;: 跳转下一个buffer&lt;br&gt;&lt;code&gt;:bp&lt;/code&gt;: 往上一个buffer&lt;br&gt;&lt;code&gt;:b&amp;lt;n&amp;gt;&lt;/code&gt;: 跳往第n个buffer&lt;br&gt;&lt;code&gt;:bd&lt;/code&gt;: 关掉目前buffer&lt;/p&gt;
&lt;h3 id=&quot;vim-airline-themes&quot;&gt;&lt;a href=&quot;#vim-airline-themes&quot; class=&quot;headerlink&quot; title=&quot;vim-airline-themes&quot;&gt;&lt;/a&gt;vim-airline-themes&lt;/h3&gt;&lt;p&gt;个人比较偏爱&lt;code&gt;solarized&lt;/code&gt;的暗色皮肤，所以需要使用这个库来安装airline配套的皮肤。&lt;br&gt;在&lt;code&gt;init.vim&lt;/code&gt;中添加&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;Plug &amp;apos;vim-airline/vim-airline-themes&amp;apos;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;然后修改：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;let g:airline_theme=&amp;quot;solarized&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;即可&lt;/p&gt;
&lt;h2 id=&quot;vim-colors-solarized&quot;&gt;&lt;a href=&quot;#vim-colors-solarized&quot; class=&quot;headerlink&quot; title=&quot;vim-colors-solarized&quot;&gt;&lt;/a&gt;vim-colors-solarized&lt;/h2&gt;&lt;p&gt;顾名思义，这是&lt;code&gt;solarized for vim&lt;/code&gt;。&lt;br&gt;在&lt;code&gt;init.vim&lt;/code&gt;中添加&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;Plug &amp;apos;altercation/vim-colors-solarized&amp;apos;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;然后修改：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;set background=dark&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;colorscheme solarized&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;即可&lt;/p&gt;
&lt;h1 id=&quot;更新日志&quot;&gt;&lt;a href=&quot;#更新日志&quot; class=&quot;headerlink&quot; title=&quot;更新日志&quot;&gt;&lt;/a&gt;更新日志&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;2016年03月12日 首次发布&lt;/li&gt;
&lt;li&gt;2016年03月15日 增加air-line相关内容&lt;/li&gt;
&lt;li&gt;2016年06月16日 增加主题配置相关内容，并添加了部分常用快捷键&lt;/li&gt;
&lt;/ul&gt;
</content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h1&gt;&lt;p&gt;一直都非常羡慕那些能把vim用得非常溜的人，但是自己总是不情愿去学，总是觉得vim的操作方式非常反人类，难度曲线太陡，不适合我。真正让我下定决心去学的，是因为系统切换到Ubuntu Gnome之后发现，Sublime Text 3 不能原生支持中文输入。同时我也发现，如果我不上来就折腾spf13这样的东西的话，其实vim非常好懂。于是，Neovim的慢速升级攻略就这样诞生了。&lt;/p&gt;
    
    </summary>
    
      <category term="Develop" scheme="https://xuanwo.org/categories/Develop/"/>
    
    
      <category term="Software" scheme="https://xuanwo.org/tags/Software/"/>
    
      <category term="vim" scheme="https://xuanwo.org/tags/vim/"/>
    
  </entry>
  
  <entry>
    <title>微信群重复人员识别</title>
    <link href="https://xuanwo.org/2016/02/28/wechat-remove/"/>
    <id>https://xuanwo.org/2016/02/28/wechat-remove/</id>
    <published>2016-02-28T10:05:00.000Z</published>
    <updated>2016-07-14T14:10:22.686Z</updated>
    
    <content type="html">&lt;h1 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h1&gt;&lt;p&gt;由于微信的限制，人数超过一百以后，只有邀请才能加入。所以，如果想要组织大型的在线活动，就只有建立很多个分群。然而分群的问题在于，会有很多人重复加群，挤占了本来就缺乏的空间。所以需要找到一个可行的办法，清除两个群中的重复人员。&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h1 id=&quot;可行的方法&quot;&gt;&lt;a href=&quot;#可行的方法&quot; class=&quot;headerlink&quot; title=&quot;可行的方法&quot;&gt;&lt;/a&gt;可行的方法&lt;/h1&gt;&lt;p&gt;在微信网页版中，通过点击群名称右侧的向下箭头，可以打开一个有所有人昵称的面板，通过审查工具可以得到对应的代码，右击选择&lt;code&gt;Edit As HTML&lt;/code&gt;，全选复制，保存到&lt;code&gt;a.txt&lt;/code&gt;中，然后执行&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;cat a.txt | grep -o &lt;span class=&quot;string&quot;&gt;&quot;\&quot;&amp;gt;.*&amp;lt;/p&amp;gt;&quot;&lt;/span&gt; &amp;gt; fen.txt&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;我们便可以将所有人的名字都输出到&lt;code&gt;fen.txt&lt;/code&gt;中，尽管还有着一些&lt;code&gt;&amp;lt;&lt;/code&gt;，&lt;code&gt;&amp;gt;&lt;/code&gt;的符号，但是已经不影响识别了，故不再做处理。&lt;/p&gt;
&lt;p&gt;对两个群分别如此操作之后，我们得到了两个群的成员名单。&lt;br&gt;然后执行如下Python代码：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;with open(&amp;apos;fen.txt&amp;apos;, &amp;apos;r&amp;apos;) as f:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    fen = f.readlines()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    f.close()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;with open(&amp;apos;main.txt&amp;apos;, &amp;apos;r&amp;apos;) as f:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    main = f.readlines()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    f.close()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;for i in main:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    for j in fen:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        if i == j:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            print(i)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;得到的输出就是两个群中重复的成员，然后一一删除即可。&lt;/p&gt;
&lt;h1 id=&quot;方案反思&quot;&gt;&lt;a href=&quot;#方案反思&quot; class=&quot;headerlink&quot; title=&quot;方案反思&quot;&gt;&lt;/a&gt;方案反思&lt;/h1&gt;&lt;h2 id=&quot;存在的缺陷&quot;&gt;&lt;a href=&quot;#存在的缺陷&quot; class=&quot;headerlink&quot; title=&quot;存在的缺陷&quot;&gt;&lt;/a&gt;存在的缺陷&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;自动化程度较低&lt;/li&gt;
&lt;li&gt;如果存在用户同名的话，会导致删除错误的用户。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;可能的改进&quot;&gt;&lt;a href=&quot;#可能的改进&quot; class=&quot;headerlink&quot; title=&quot;可能的改进&quot;&gt;&lt;/a&gt;可能的改进&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;获取资料不需要手动点击审查元素，通过jQuery的text()函数也可以实现。&lt;/li&gt;
&lt;li&gt;最后实现删除的过程可以进一步优化，通过模拟用户点击的脚本实现（存在隐私泄漏风险）。&lt;/li&gt;
&lt;li&gt;可以获取用户的UUID，以避免重名现象。&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&quot;更新日志&quot;&gt;&lt;a href=&quot;#更新日志&quot; class=&quot;headerlink&quot; title=&quot;更新日志&quot;&gt;&lt;/a&gt;更新日志&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;2016年02月28日  首次发布&lt;/li&gt;
&lt;/ul&gt;
</content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h1&gt;&lt;p&gt;由于微信的限制，人数超过一百以后，只有邀请才能加入。所以，如果想要组织大型的在线活动，就只有建立很多个分群。然而分群的问题在于，会有很多人重复加群，挤占了本来就缺乏的空间。所以需要找到一个可行的办法，清除两个群中的重复人员。&lt;/p&gt;
    
    </summary>
    
      <category term="Opinion" scheme="https://xuanwo.org/categories/Opinion/"/>
    
    
      <category term="Software" scheme="https://xuanwo.org/tags/Software/"/>
    
      <category term="微信" scheme="https://xuanwo.org/tags/%E5%BE%AE%E4%BF%A1/"/>
    
  </entry>
  
  <entry>
    <title>记一次debug的经历及反思</title>
    <link href="https://xuanwo.org/2016/02/26/debug-for-hexo-1775/"/>
    <id>https://xuanwo.org/2016/02/26/debug-for-hexo-1775/</id>
    <published>2016-02-26T12:54:00.000Z</published>
    <updated>2016-07-14T14:10:22.678Z</updated>
    
    <content type="html">&lt;h2 id=&quot;起因&quot;&gt;&lt;a href=&quot;#起因&quot; class=&quot;headerlink&quot; title=&quot;起因&quot;&gt;&lt;/a&gt;起因&lt;/h2&gt;&lt;p&gt;&lt;a href=&quot;https://github.com/hexojs/hexo/issues/1775&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;hexojs/hexo #1775&lt;/a&gt;&lt;br&gt;BUG非常明显，在使用hexo 3.1.1搭建一个位于子目录下的博客，然后会发现home以及categories的链接全都忽略了子目录的设定。&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h2 id=&quot;经过&quot;&gt;&lt;a href=&quot;#经过&quot; class=&quot;headerlink&quot; title=&quot;经过&quot;&gt;&lt;/a&gt;经过&lt;/h2&gt;&lt;p&gt;收到反馈之后，我在我的测试环境中也复现了这个bug。一开始还怀疑是主题的问题，专门测试了next主题，结果发现也存在这样的问题，于是就排除了主题方面的bug。&lt;br&gt;首先我们可以初步判断这个url生成出现了问题，参考landscape主题中此处的代码：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;% for (var i in theme.menu)&amp;#123; %&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;lt;a class=&amp;quot;main-nav-link&amp;quot; href=&amp;quot;&amp;lt;%- url_for(theme.menu[i]) %&amp;gt;&amp;quot;&amp;gt;&amp;lt;%= i %&amp;gt;&amp;lt;/a&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;% &amp;#125; %&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;这里调用了一个&lt;code&gt;url_for&lt;/code&gt;函数来生成超链接，代码如下（去除了与本BUG无关的部分）：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;function urlForHelper(path, options) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  path = path || &amp;apos;/&amp;apos;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  if (path[0] === &amp;apos;#&amp;apos; || path.substring(0, 2) === &amp;apos;//&amp;apos;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    return path;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  var config = this.config;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  var root = config.root;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  var data = url.parse(path);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  // Exit if this is an external path&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  if (data.protocol) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    return path;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  // Prepend root path&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  path = root + path;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  return path.replace(/\/&amp;#123;2,&amp;#125;/g, &amp;apos;/&amp;apos;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;直觉告诉我，这个问题很有可能就是这个函数写搓了。&lt;/p&gt;
&lt;p&gt;然而我仔细研究了一下，发现&lt;code&gt;url_for&lt;/code&gt;的逻辑并没有什么问题。而且根据我脑补的代码执行情况来看，应该生成一个正确的链接才对，但是&lt;code&gt;config.root&lt;/code&gt;偏偏就丢了。&lt;br&gt;真的是非常奇怪，一时之间，我完全懵逼展开了，不明白到底发生了什么。&lt;/p&gt;
&lt;h2 id=&quot;转折&quot;&gt;&lt;a href=&quot;#转折&quot; class=&quot;headerlink&quot; title=&quot;转折&quot;&gt;&lt;/a&gt;转折&lt;/h2&gt;&lt;p&gt;后来我跟我的朋友聊天的时候提到这个bug，结果他告诉我，这个&lt;code&gt;url_for&lt;/code&gt;写搓了，我点点头，应该就是这样。然后他说，一个判断都没有中，直接返回自身了，还贴了一张图。图中的代码大致如下：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;function urlForHelper(path, options)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  /* jshint validthis: true */&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  path = path || &amp;apos;/&amp;apos;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  var config = this.config;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  var root = config.root;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  var data = url.parse(path);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  // Exit if this is an external path&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  if (data.protocol || path.substring(0, 2) === &amp;apos;//&amp;apos;)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    return path;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  // Prepend root path&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  if (path[0] !== &amp;apos;/&amp;apos;)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    return root + path;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  return path;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;看到图我立马懵逼了，连忙说，不对啊，你这个不是最新版本的代码。他被我这气场吓到，弱弱回复，我是刚安装的hexo…。&lt;br&gt;我顿时明白自己错在哪里了，npm源里面的稳定版还是3.1.1，但是我们github库中的代码已经是3.2beta了。使用最新的代码测试以后，发现这个bug已经不存在了。&lt;br&gt;也就是说，我花一个下午的时间，对着最新版的代码找一个已经被fix的bug…&lt;/p&gt;
&lt;h2 id=&quot;总结&quot;&gt;&lt;a href=&quot;#总结&quot; class=&quot;headerlink&quot; title=&quot;总结&quot;&gt;&lt;/a&gt;总结&lt;/h2&gt;&lt;p&gt;这一次的事情非常乌龙，事后想想觉得自己真的太傻逼了。&lt;br&gt;吃一堑长一智，以后做debug工作的时候一定要分清楚线上和线下的代码，首先就要明确出问题的是哪个版本，然后再开展相应的分析。&lt;br&gt;除此以外，还跟我不重视流程有关系。尽管我总是让人提供各种version信息，但是我却总是在分析问题的时候忽略这些信息，没有把这些关键的信息加入到自己的分析过程中。&lt;br&gt;总结起来就是，too young ，姿势水平还有待提高。&lt;/p&gt;
&lt;h2 id=&quot;更新日志&quot;&gt;&lt;a href=&quot;#更新日志&quot; class=&quot;headerlink&quot; title=&quot;更新日志&quot;&gt;&lt;/a&gt;更新日志&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;2016年02月26日 初次发布&lt;/li&gt;
&lt;/ul&gt;
</content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;起因&quot;&gt;&lt;a href=&quot;#起因&quot; class=&quot;headerlink&quot; title=&quot;起因&quot;&gt;&lt;/a&gt;起因&lt;/h2&gt;&lt;p&gt;&lt;a href=&quot;https://github.com/hexojs/hexo/issues/1775&quot;&gt;hexojs/hexo #1775&lt;/a&gt;&lt;br&gt;BUG非常明显，在使用hexo 3.1.1搭建一个位于子目录下的博客，然后会发现home以及categories的链接全都忽略了子目录的设定。&lt;/p&gt;
    
    </summary>
    
      <category term="Develop" scheme="https://xuanwo.org/categories/Develop/"/>
    
    
      <category term="Hexo" scheme="https://xuanwo.org/tags/Hexo/"/>
    
      <category term="Software" scheme="https://xuanwo.org/tags/Software/"/>
    
      <category term="Nodejs" scheme="https://xuanwo.org/tags/Nodejs/"/>
    
  </entry>
  
  <entry>
    <title>北地网费新政策下的生存攻略</title>
    <link href="https://xuanwo.org/2016/02/17/ipv6-in-cugb/"/>
    <id>https://xuanwo.org/2016/02/17/ipv6-in-cugb/</id>
    <published>2016-02-17T18:59:02.000Z</published>
    <updated>2016-07-14T14:10:22.682Z</updated>
    
    <content type="html">&lt;p&gt;主旨只有两条：开源，节流&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h1 id=&quot;开源&quot;&gt;&lt;a href=&quot;#开源&quot; class=&quot;headerlink&quot; title=&quot;开源&quot;&gt;&lt;/a&gt;开源&lt;/h1&gt;&lt;p&gt;根据国家推广ipv6应用的相关规定，IPv6的流量依然是不计费的，所以我们需要充分利用IPv6的广泛资源。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;互联网通讯协议第6版（英文：Internet Protocol version 6，缩写：IPv6）是互联网协议的最新版本，用于分组交换互联网络的网络层协议，旨在解决IPv4地址枯竭问题。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;如何开启ipv6&quot;&gt;&lt;a href=&quot;#如何开启ipv6&quot; class=&quot;headerlink&quot; title=&quot;如何开启ipv6&quot;&gt;&lt;/a&gt;如何开启ipv6&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;下面内容仅适用于&lt;strong&gt;地大校园有线网&lt;/strong&gt;，不适用于CUGBNET，不适用于绝大多数USB网卡。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&quot;检查自己的电脑是否已经打开ipv6支持&quot;&gt;&lt;a href=&quot;#检查自己的电脑是否已经打开ipv6支持&quot; class=&quot;headerlink&quot; title=&quot;检查自己的电脑是否已经打开ipv6支持&quot;&gt;&lt;/a&gt;检查自己的电脑是否已经打开ipv6支持&lt;/h3&gt;&lt;p&gt;打开浏览器访问： &lt;a href=&quot;http://test-ipv6.com/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://test-ipv6.com/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;如果所有项目都显示为绿勾，说明你已经可以正常使用IPv6了，如果有红叉，则需要打开系统对IPv6的支持&lt;/p&gt;
&lt;h3 id=&quot;打开ipv6&quot;&gt;&lt;a href=&quot;#打开ipv6&quot; class=&quot;headerlink&quot; title=&quot;打开ipv6&quot;&gt;&lt;/a&gt;打开ipv6&lt;/h3&gt;&lt;p&gt;Win + R 快捷键调出“运行”对话框，输入“ncpa.cpl”。如图：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/imgs/opinion/ipv6-1.png&quot; alt=&quot;Win+R&quot;&gt;&lt;/p&gt;
&lt;p&gt;回车后打开网络连接，在&lt;code&gt;以太网&lt;/code&gt;上右击，选择最后一项&lt;code&gt;属性&lt;/code&gt;，打开以太网属性，如图：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/imgs/opinion/ipv6-2.png&quot; alt=&quot;以太网属性&quot;&gt;&lt;/p&gt;
&lt;p&gt;向下浏览，确保&lt;code&gt;TCP/IPv6&lt;/code&gt;这一项已经被选中。&lt;/p&gt;
&lt;p&gt;然后使用&lt;a href=&quot;http://gate.cugbteam.org&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;此网址&lt;/a&gt;登陆，深澜自带的登录器貌似有BUG，IPv6不会进行拨号。&lt;/p&gt;
&lt;h2 id=&quot;IPv6应用&quot;&gt;&lt;a href=&quot;#IPv6应用&quot; class=&quot;headerlink&quot; title=&quot;IPv6应用&quot;&gt;&lt;/a&gt;IPv6应用&lt;/h2&gt;&lt;h3 id=&quot;PT下载&quot;&gt;&lt;a href=&quot;#PT下载&quot; class=&quot;headerlink&quot; title=&quot;PT下载&quot;&gt;&lt;/a&gt;PT下载&lt;/h3&gt;&lt;blockquote&gt;
&lt;p&gt;PT（Private Tracker）是一种改良自BitTorrent协议的P2P下载方式，“Private Tracker”指私有种子服务器。与BT最大的不同点分别为可进行私密范围下载，及可统计每个用户的上传及下载量。&lt;br&gt;PT可进行私密范围下载，因此提供PT的讨论区大多非公开的，采用邀请制或是不定时开放注册。用户注册后会得到一个passkey，因此可借由passkey辨识每个用户，用户从某PT站下载种子后，该种子即带有用户的passkey。因此PT的种子是不可外流到其他地方，且不允许一个用户有过多IP（通常上限为3个IP）同时上下传。&lt;br&gt;为了控制用户数量，关闭自由注册的PT网站一般采用邀请码制度，由已注册的用户向自己所信任的人发送邀请，以确保用户质量。&lt;br&gt;借由这些机制，传统P2P下载常发生一些client端只下载而不分享上传的“吸血”行为将可杜绝。而BT种子在一两周后做种者大幅减少，以致后来下载者无法顺利完档的缺点在PT获得改善。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;在教育网中，由于IPv6没有带宽和流量限制，所以PT下载得到了极大的发展。相对于IPv4下的下载，PT下载通常有以下优点：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;下载速度飞快，没有上限。在宿舍可以达到10M/s，在实验室可以达到100M/s。&lt;/li&gt;
&lt;li&gt;国家正在推广IPv6，故IPv6不进行计费，所有IPv6的流量都是免费的。&lt;/li&gt;
&lt;li&gt;资源丰富。由于PT站的私密特性，很多资源都保存地非常好，新的资源也更新地非常及时。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;老司机友情提醒，欲求先予，如果只下载不上传的话，很容易被删号的。在加入一个PT站的时候一定要先阅读PT站的说明，谨防封号。每个PT站基本都有着邀请制度，需要使用邀请码才能进入。&lt;/p&gt;
&lt;p&gt;下面给出一些常用的PT站：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://pt.cugb.edu.cn&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;北地PT&lt;/a&gt; &lt;em&gt;无需邀请，荒废多年，不过借这波机会应该会复苏了~&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://bt.byr.cn/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;北邮人PT&lt;/a&gt; &lt;em&gt;我校IPv6入口就在北邮，速度相当快，资源也很多，非常活跃&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://bt.neu6.edu.cn/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;六维空间&lt;/a&gt; &lt;em&gt;应当是教育网最大的PT站了，资源最多，非常活跃&lt;/em&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;推荐的PT下载工具：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://ll.www.utorrent.com/intl/en/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;utorrent&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://www.bittorrent.com/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;bittorrent&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;绝对禁止使用迅雷下载，严重者可能导致封号。&lt;/strong&gt;&lt;/p&gt;
&lt;h3 id=&quot;IPv6电视&quot;&gt;&lt;a href=&quot;#IPv6电视&quot; class=&quot;headerlink&quot; title=&quot;IPv6电视&quot;&gt;&lt;/a&gt;IPv6电视&lt;/h3&gt;&lt;p&gt;IPv6电视就相对显得比较简单易懂了，直接在线收看即可，不消耗IPv4流量。&lt;/p&gt;
&lt;p&gt;下面同样给出一些地址：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://ipv6.pku.edu.cn/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;北京大学IPv6&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://tv.byr.cn/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;北京邮电大学IPv6&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://iptv.pdsu6.edu.cn/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;IPv6电视直播墙&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;IPv6转换&quot;&gt;&lt;a href=&quot;#IPv6转换&quot; class=&quot;headerlink&quot; title=&quot;IPv6转换&quot;&gt;&lt;/a&gt;IPv6转换&lt;/h3&gt;&lt;p&gt;当然也可以通过将IPv4流量转换为IPv6来逃开计费。&lt;/p&gt;
&lt;p&gt;需要安装&lt;a href=&quot;http://www.6kuaibo.com/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;六快拨浏览器&lt;/a&gt;，使用该浏览器即可免费上网。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;利益无关，没有测试，不知速度如何。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h1 id=&quot;节流&quot;&gt;&lt;a href=&quot;#节流&quot; class=&quot;headerlink&quot; title=&quot;节流&quot;&gt;&lt;/a&gt;节流&lt;/h1&gt;&lt;h2 id=&quot;网络游戏流量消耗&quot;&gt;&lt;a href=&quot;#网络游戏流量消耗&quot; class=&quot;headerlink&quot; title=&quot;网络游戏流量消耗&quot;&gt;&lt;/a&gt;网络游戏流量消耗&lt;/h2&gt;&lt;p&gt;网络游戏耗费的流量不多，比如英雄联盟，一分钟只消耗一兆不到。所以玩游戏的童鞋们大可放心，按照每天撸三个小时来算，也不过是5.4G不到而已，不慌。&lt;/p&gt;
&lt;h2 id=&quot;内网文件传输&quot;&gt;&lt;a href=&quot;#内网文件传输&quot; class=&quot;headerlink&quot; title=&quot;内网文件传输&quot;&gt;&lt;/a&gt;内网文件传输&lt;/h2&gt;&lt;p&gt;可以用&lt;a href=&quot;http://www.ipmsg.org.cn/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;飞鸽传书&lt;/a&gt;，如果不放心可以在不登录网关的时候传输文件，只需要对方也安装了飞鸽传书即可。&lt;/p&gt;
&lt;h1 id=&quot;总结&quot;&gt;&lt;a href=&quot;#总结&quot; class=&quot;headerlink&quot; title=&quot;总结&quot;&gt;&lt;/a&gt;总结&lt;/h1&gt;&lt;p&gt;在充分利用ipv6资源并辅以适当的节流方式下，可以将网费控制在20元(25G)以下。所以童鞋们大可不必惊慌。我的想法是，付费可以，但是请地大提供更加优秀的网络环境。&lt;/p&gt;
&lt;h1 id=&quot;参考资料&quot;&gt;&lt;a href=&quot;#参考资料&quot; class=&quot;headerlink&quot; title=&quot;参考资料&quot;&gt;&lt;/a&gt;参考资料&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://zh.wikipedia.org/wiki/IPv6&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;IPv6&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://zh.wikipedia.org/wiki/PT%E4%B8%8B%E8%BC%89&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;PT下载&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&quot;更新日志&quot;&gt;&lt;a href=&quot;#更新日志&quot; class=&quot;headerlink&quot; title=&quot;更新日志&quot;&gt;&lt;/a&gt;更新日志&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;2016年02月17日 初次发布&lt;/li&gt;
&lt;li&gt;2016年02月20日 修复网关登录链接，补充PT下载工具&lt;/li&gt;
&lt;li&gt;2016年03月11日 修复北京邮电大学IPv6电视链接&lt;/li&gt;
&lt;/ul&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;主旨只有两条：开源，节流&lt;/p&gt;
    
    </summary>
    
      <category term="Opinion" scheme="https://xuanwo.org/categories/Opinion/"/>
    
    
      <category term="Software" scheme="https://xuanwo.org/tags/Software/"/>
    
      <category term="CUGB" scheme="https://xuanwo.org/tags/CUGB/"/>
    
  </entry>
  
  <entry>
    <title>Chocolatey——Windows下的包管理工具</title>
    <link href="https://xuanwo.org/2016/02/15/chocolatey-intro/"/>
    <id>https://xuanwo.org/2016/02/15/chocolatey-intro/</id>
    <published>2016-02-15T20:15:46.000Z</published>
    <updated>2016-07-14T14:10:22.678Z</updated>
    
    <content type="html">&lt;h1 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h1&gt;&lt;p&gt;&lt;a href=&quot;https://chocolatey.org/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Chocolatey&lt;/a&gt;是一个基于Nuget的Windows包管理工具，截止到我更新此文章的时候，一共有3.7k多个独立包。本文旨在介绍Chocolatey这一工具的安装和用法，希望能有更多人享受到该工具的便利之处。&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h1 id=&quot;安装chocolatey&quot;&gt;&lt;a href=&quot;#安装chocolatey&quot; class=&quot;headerlink&quot; title=&quot;安装chocolatey&quot;&gt;&lt;/a&gt;安装chocolatey&lt;/h1&gt;&lt;h2 id=&quot;CMD&quot;&gt;&lt;a href=&quot;#CMD&quot; class=&quot;headerlink&quot; title=&quot;CMD&quot;&gt;&lt;/a&gt;CMD&lt;/h2&gt;&lt;p&gt;打开一个具有管理员权限的命令行窗口，执行如下命令：&lt;br&gt;&lt;figure class=&quot;highlight powershell&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;@powershell -NoProfile -ExecutionPolicy Bypass -Command &lt;span class=&quot;string&quot;&gt;&quot;iex ((new-object net.webclient).DownloadString(&#39;https://chocolatey.org/install.ps1&#39;))&quot;&lt;/span&gt; &amp;amp;&amp;amp; SET PATH=%PATH%;%ALLUSERSPROFILE%\chocolatey\bin&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h2 id=&quot;PowerShell&quot;&gt;&lt;a href=&quot;#PowerShell&quot; class=&quot;headerlink&quot; title=&quot;PowerShell&quot;&gt;&lt;/a&gt;PowerShell&lt;/h2&gt;&lt;p&gt;打开一个具有管理员权限的PowerShell窗口，执行如下命令：&lt;br&gt;&lt;figure class=&quot;highlight powershell&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;iex ((&lt;span class=&quot;built_in&quot;&gt;new-object&lt;/span&gt; net.webclient).DownloadString(&lt;span class=&quot;string&quot;&gt;&#39;https://chocolatey.org/install.ps1&#39;&lt;/span&gt;))&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h1 id=&quot;使用chocolatey&quot;&gt;&lt;a href=&quot;#使用chocolatey&quot; class=&quot;headerlink&quot; title=&quot;使用chocolatey&quot;&gt;&lt;/a&gt;使用chocolatey&lt;/h1&gt;&lt;h2 id=&quot;安装包&quot;&gt;&lt;a href=&quot;#安装包&quot; class=&quot;headerlink&quot; title=&quot;安装包&quot;&gt;&lt;/a&gt;安装包&lt;/h2&gt;&lt;p&gt;安装包十分的容易，只需要打开管理员权限的命令行即可：&lt;/p&gt;
&lt;figure class=&quot;highlight powershell&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;choco install &amp;lt;package&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;卸载包&quot;&gt;&lt;a href=&quot;#卸载包&quot; class=&quot;headerlink&quot; title=&quot;卸载包&quot;&gt;&lt;/a&gt;卸载包&lt;/h2&gt;&lt;p&gt;卸载也同样十分简单，打开管理员权限命令行，执行：&lt;/p&gt;
&lt;figure class=&quot;highlight powershell&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;choco uninstall &amp;lt;package&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;更新包&quot;&gt;&lt;a href=&quot;#更新包&quot; class=&quot;headerlink&quot; title=&quot;更新包&quot;&gt;&lt;/a&gt;更新包&lt;/h2&gt;&lt;p&gt;更新包则需要使用如下命令：&lt;/p&gt;
&lt;figure class=&quot;highlight powershell&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;choco upgrade &amp;lt;package&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h1 id=&quot;为chocolatey做贡献&quot;&gt;&lt;a href=&quot;#为chocolatey做贡献&quot; class=&quot;headerlink&quot; title=&quot;为chocolatey做贡献&quot;&gt;&lt;/a&gt;为chocolatey做贡献&lt;/h1&gt;&lt;p&gt;Chocolatey的一个特点就是社区化的环境，每一个人都可以向它提交自己喜爱的包。因为Chocolatey总是从官方下载所需要的包，所以避免了授权等问题。当然，本来收费的软件，同样需要收费，比如JetBrains系列的产品。&lt;/p&gt;
&lt;h2 id=&quot;注册APIKey&quot;&gt;&lt;a href=&quot;#注册APIKey&quot; class=&quot;headerlink&quot; title=&quot;注册APIKey&quot;&gt;&lt;/a&gt;注册APIKey&lt;/h2&gt;&lt;p&gt;提交包则会略为复杂一点，首先你需要在&lt;a href=&quot;https://chocolatey.org/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://chocolatey.org/&lt;/a&gt; 注册一个账号，并获取跟你账户绑定的唯一APIKey。然后在命令行中执行如下命令：&lt;/p&gt;
&lt;figure class=&quot;highlight powershell&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;choco apikey -k &amp;lt;your key here&amp;gt; -s https://chocolatey.org&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;新建软件包&quot;&gt;&lt;a href=&quot;#新建软件包&quot; class=&quot;headerlink&quot; title=&quot;新建软件包&quot;&gt;&lt;/a&gt;新建软件包&lt;/h2&gt;&lt;p&gt;在命令行中运行&lt;/p&gt;
&lt;figure class=&quot;highlight powershell&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;choco new &amp;lt;package name here&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# 为方便理解，此处使用test做包名&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;则当前目录下就会自动生成一个名为&lt;code&gt;test&lt;/code&gt;的文件夹，目录结构如下：&lt;/p&gt;
&lt;figure class=&quot;highlight powershell&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;test.nuspec&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;tools&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  |--chocolateyinstall.ps1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  |--chocolateyuninstall.ps1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  |--ReadMe.md&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;完善信息&quot;&gt;&lt;a href=&quot;#完善信息&quot; class=&quot;headerlink&quot; title=&quot;完善信息&quot;&gt;&lt;/a&gt;完善信息&lt;/h2&gt;&lt;h3 id=&quot;修改test-nuspec&quot;&gt;&lt;a href=&quot;#修改test-nuspec&quot; class=&quot;headerlink&quot; title=&quot;修改test.nuspec&quot;&gt;&lt;/a&gt;修改test.nuspec&lt;/h3&gt;&lt;p&gt;自动生成的描述文件在需要填写的位置都有大写英文注释，只需要按照要求一一填写即可，下面我列举一份已经通过审核的Datagrip的描述文件作为参考：&lt;/p&gt;
&lt;figure class=&quot;highlight xml&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;&amp;lt;!-- Do not remove this test for UTF-8: if “Ω” doesn’t appear as greek uppercase omega letter enclosed in quotation marks, you should use an editor that supports UTF-8, not this one. --&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;package&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;xmlns&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;http://schemas.microsoft.com/packaging/2015/06/nuspec.xsd&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;metadata&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;&amp;lt;!-- Read this before publishing packages to chocolatey.org: https://github.com/chocolatey/chocolatey/wiki/CreatePackages --&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;id&lt;/span&gt;&amp;gt;&lt;/span&gt;datagrip&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;id&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;title&lt;/span&gt;&amp;gt;&lt;/span&gt;DataGrip&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;title&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;version&lt;/span&gt;&amp;gt;&lt;/span&gt;1.0.1&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;version&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;authors&lt;/span&gt;&amp;gt;&lt;/span&gt;JetBrains&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;authors&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;owners&lt;/span&gt;&amp;gt;&lt;/span&gt;Xuanwo&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;owners&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;summary&lt;/span&gt;&amp;gt;&lt;/span&gt;Your Swiss Army Knife for Databases and SQL&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;summary&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;description&lt;/span&gt;&amp;gt;&lt;/span&gt;## Intelligent query console&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Allows you to execute queries in different modes and provides local history that keeps track of all your activity and protects you from losing your work.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;......(省略)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;description&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;projectUrl&lt;/span&gt;&amp;gt;&lt;/span&gt;https://www.jetbrains.com/datagrip/&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;projectUrl&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;packageSourceUrl&lt;/span&gt;&amp;gt;&lt;/span&gt;https://github.com/Xuanwo/datagrip-chocolatey-package&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;packageSourceUrl&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;&amp;lt;!--&amp;lt;projectSourceUrl&amp;gt;&amp;lt;/projectSourceUrl&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;lt;docsUrl&amp;gt;&amp;lt;/docsUrl&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;lt;mailingListUrl&amp;gt;&amp;lt;/mailingListUrl&amp;gt;--&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;bugTrackerUrl&lt;/span&gt;&amp;gt;&lt;/span&gt;https://youtrack.jetbrains.com/issues/DBE&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;bugTrackerUrl&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;tags&lt;/span&gt;&amp;gt;&lt;/span&gt;datagrip admin jetbrains trial 30days&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;tags&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;copyright&lt;/span&gt;&amp;gt;&lt;/span&gt;Commercial&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;copyright&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;&amp;lt;!--&amp;lt;licenseUrl&amp;gt;&amp;lt;/licenseUrl&amp;gt;--&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;requireLicenseAcceptance&lt;/span&gt;&amp;gt;&lt;/span&gt;false&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;requireLicenseAcceptance&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;&amp;lt;!--&amp;lt;iconUrl&amp;gt;http://cdn.rawgit.com/__REPLACE_YOUR_REPO__/master/icons/datagrip.png&amp;lt;/iconUrl&amp;gt;--&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;&amp;lt;!--&amp;lt;dependencies&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &amp;lt;dependency id=&quot;&quot; version=&quot;__VERSION__&quot; /&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &amp;lt;dependency id=&quot;&quot; /&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;lt;/dependencies&amp;gt;--&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;releaseNotes&lt;/span&gt;&amp;gt;&lt;/span&gt;https://confluence.jetbrains.com/display/DBE/DataGrip+1.0.1+Release+Notes&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;releaseNotes&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;&amp;lt;!--&amp;lt;provides&amp;gt;&amp;lt;/provides&amp;gt;--&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;metadata&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;files&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;file&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;src&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;tools\**&quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;target&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;tools&quot;&lt;/span&gt; /&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;files&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;package&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;有一个比较坑的地方是&lt;code&gt;&amp;lt;description&amp;gt;&lt;/code&gt;部分是支持Markdown的，内容直接顶着括号写就OK，不用另起一行，也不用自己加缩进。&lt;/p&gt;
&lt;h3 id=&quot;补充chocolateyinstall-ps1&quot;&gt;&lt;a href=&quot;#补充chocolateyinstall-ps1&quot; class=&quot;headerlink&quot; title=&quot;补充chocolateyinstall.ps1&quot;&gt;&lt;/a&gt;补充chocolateyinstall.ps1&lt;/h3&gt;&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;chocolateyuninstall&lt;/code&gt;可以没有，但是一定要有&lt;code&gt;chocolateyinstall&lt;/code&gt;脚本。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;code&gt;chocolateyinstall.ps1&lt;/code&gt;如果点击&lt;code&gt;编辑&lt;/code&gt;打开的话，会自动调用&lt;code&gt;Windows Powershell ISE&lt;/code&gt;编辑器。&lt;/p&gt;
&lt;p&gt;下面同样列举一份已经填写完成的样例：&lt;/p&gt;
&lt;figure class=&quot;highlight powershell&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;variable&quot;&gt;$packageName&lt;/span&gt;= &lt;span class=&quot;string&quot;&gt;&#39;datagrip&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;variable&quot;&gt;$installerType&lt;/span&gt; = &lt;span class=&quot;string&quot;&gt;&#39;EXE&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;variable&quot;&gt;$toolsDir&lt;/span&gt;   = &lt;span class=&quot;string&quot;&gt;&quot;$(Split-Path -parent &lt;span class=&quot;variable&quot;&gt;$MyInvocation&lt;/span&gt;.MyCommand.Definition)&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;variable&quot;&gt;$url&lt;/span&gt;        = &lt;span class=&quot;string&quot;&gt;&#39;https://download.jetbrains.com/datagrip/datagrip-1.0.1.exe&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;variable&quot;&gt;$silentArgs&lt;/span&gt; = &lt;span class=&quot;string&quot;&gt;&#39;/S&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;variable&quot;&gt;$validExitCodes&lt;/span&gt; = @(&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Install-ChocolateyPackage &lt;span class=&quot;string&quot;&gt;&quot;&lt;span class=&quot;variable&quot;&gt;$packageName&lt;/span&gt;&quot;&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&quot;&lt;span class=&quot;variable&quot;&gt;$installerType&lt;/span&gt;&quot;&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&quot;&lt;span class=&quot;variable&quot;&gt;$silentArgs&lt;/span&gt;&quot;&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&quot;&lt;span class=&quot;variable&quot;&gt;$url&lt;/span&gt;&quot;&lt;/span&gt;  -validExitCodes &lt;span class=&quot;variable&quot;&gt;$validExitCodes&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;需要注意的是，填写完毕之后，一定要在Powershell中运行下列代码以删除所有的注释文字：&lt;/p&gt;
&lt;figure class=&quot;highlight powershell&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;variable&quot;&gt;$f&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&#39;c:\path\to\thisFile.ps1&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;gc &lt;span class=&quot;variable&quot;&gt;$f&lt;/span&gt; | ? &amp;#123;&lt;span class=&quot;variable&quot;&gt;$_&lt;/span&gt; &lt;span class=&quot;nomarkup&quot;&gt;-notmatch&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&quot;^\s*#&quot;&lt;/span&gt;&amp;#125; | % &amp;#123;&lt;span class=&quot;variable&quot;&gt;$_&lt;/span&gt; &lt;span class=&quot;nomarkup&quot;&gt;-replace&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&#39;(^.*?)\s*?[^``]#.*&#39;&lt;/span&gt;,&lt;span class=&quot;string&quot;&gt;&#39;$1&#39;&lt;/span&gt;&amp;#125; | &lt;span class=&quot;built_in&quot;&gt;Out-File&lt;/span&gt; &lt;span class=&quot;variable&quot;&gt;$f&lt;/span&gt;+&lt;span class=&quot;string&quot;&gt;&quot;.~&quot;&lt;/span&gt; -en utf8; mv -fo &lt;span class=&quot;variable&quot;&gt;$f&lt;/span&gt;+&lt;span class=&quot;string&quot;&gt;&quot;.~&quot;&lt;/span&gt; &lt;span class=&quot;variable&quot;&gt;$f&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;打包上传&quot;&gt;&lt;a href=&quot;#打包上传&quot; class=&quot;headerlink&quot; title=&quot;打包上传&quot;&gt;&lt;/a&gt;打包上传&lt;/h3&gt;&lt;p&gt;所有的信息填写完成后，在&lt;code&gt;test.nuspec&lt;/code&gt;所在目录下执行&lt;code&gt;choco pack&lt;/code&gt;就会自动进行打包。&lt;br&gt;如果有重要的信息没有填写，choco将会报错，并红字提示：&lt;/p&gt;
&lt;figure class=&quot;highlight powershell&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;LicenseUrl cannot be empty.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;ProjectUrl cannot be empty.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;PackageSourceUrl cannot be empty.&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;如果没有问题，则会有如下提示：&lt;/p&gt;
&lt;figure class=&quot;highlight powershell&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;Attempting to build package from &lt;span class=&quot;string&quot;&gt;&#39;datagrip.nuspec&#39;&lt;/span&gt;.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Successfully created package &lt;span class=&quot;string&quot;&gt;&#39;datagrip.1.0.1.nupkg&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;之后执行 &lt;code&gt;choco push datagrip.1.0.1.nupkg&lt;/code&gt;即可将包上传至Chocolatey，通过管理员的审核之后，就会出现在软件列表中供人们下载了。&lt;/p&gt;
&lt;h1 id=&quot;参考资料&quot;&gt;&lt;a href=&quot;#参考资料&quot; class=&quot;headerlink&quot; title=&quot;参考资料&quot;&gt;&lt;/a&gt;参考资料&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://chocolatey.org/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Chocolatey 官方网站&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://isaachan.github.io/blog/2013/02/07/chocolatey-i-love-you/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Chocolatey, 我爱你&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&quot;更新日志&quot;&gt;&lt;a href=&quot;#更新日志&quot; class=&quot;headerlink&quot; title=&quot;更新日志&quot;&gt;&lt;/a&gt;更新日志&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;2016年02月15日 初步完成&lt;/li&gt;
&lt;li&gt;2016年02月20日 修复脚本中的部分错误&lt;/li&gt;
&lt;/ul&gt;
</content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h1&gt;&lt;p&gt;&lt;a href=&quot;https://chocolatey.org/&quot;&gt;Chocolatey&lt;/a&gt;是一个基于Nuget的Windows包管理工具，截止到我更新此文章的时候，一共有3.7k多个独立包。本文旨在介绍Chocolatey这一工具的安装和用法，希望能有更多人享受到该工具的便利之处。&lt;/p&gt;
    
    </summary>
    
      <category term="Opinion" scheme="https://xuanwo.org/categories/Opinion/"/>
    
    
      <category term="Software" scheme="https://xuanwo.org/tags/Software/"/>
    
      <category term="Windows" scheme="https://xuanwo.org/tags/Windows/"/>
    
  </entry>
  
  <entry>
    <title>解放你的智能电视</title>
    <link href="https://xuanwo.org/2016/02/04/unlock-your-smart-tv/"/>
    <id>https://xuanwo.org/2016/02/04/unlock-your-smart-tv/</id>
    <published>2016-02-04T23:12:52.000Z</published>
    <updated>2016-07-14T14:10:22.686Z</updated>
    
    <content type="html">&lt;h1 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h1&gt;&lt;p&gt;现在很多人都买了智能电视，但是出于种种你懂得原因，厂商通常都不允许用户自行安装自己想要的APP，比如腾讯视频，优酷视频之类的。本教程旨在突破这些限制，彻底解放智能电视的全部潜力。&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h1 id=&quot;前提&quot;&gt;&lt;a href=&quot;#前提&quot; class=&quot;headerlink&quot; title=&quot;前提&quot;&gt;&lt;/a&gt;前提&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;一台智能电视（基于安卓平台）&lt;/li&gt;
&lt;li&gt;一台电脑&lt;/li&gt;
&lt;li&gt;互联网连接&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&quot;操作&quot;&gt;&lt;a href=&quot;#操作&quot; class=&quot;headerlink&quot; title=&quot;操作&quot;&gt;&lt;/a&gt;操作&lt;/h1&gt;&lt;h2 id=&quot;自己动手丰衣足食&quot;&gt;&lt;a href=&quot;#自己动手丰衣足食&quot; class=&quot;headerlink&quot; title=&quot;自己动手丰衣足食&quot;&gt;&lt;/a&gt;自己动手丰衣足食&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;强力推荐，避免第三方软件安装莫名其妙的东西，没有后台驻留&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&quot;前期准备&quot;&gt;&lt;a href=&quot;#前期准备&quot; class=&quot;headerlink&quot; title=&quot;前期准备&quot;&gt;&lt;/a&gt;前期准备&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;将电视和电脑接入同一个路由器&lt;/li&gt;
&lt;li&gt;下载&lt;a href=&quot;http://pan.baidu.com/s/1eRbMCca&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;&lt;code&gt;智能电视解放工具&lt;/code&gt;&lt;/a&gt;并解压&lt;/li&gt;
&lt;li&gt;获取电视的IP地址&lt;/li&gt;
&lt;/ol&gt;
&lt;blockquote&gt;
&lt;p&gt;电视的IP地址一般可以通过点击&lt;code&gt;设置&lt;/code&gt;-&lt;code&gt;网络设置&lt;/code&gt;来获得，是一个形如&lt;code&gt;192.168.1.105&lt;/code&gt;的数字串&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&quot;连接电视&quot;&gt;&lt;a href=&quot;#连接电视&quot; class=&quot;headerlink&quot; title=&quot;连接电视&quot;&gt;&lt;/a&gt;连接电视&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;打开&lt;code&gt;TCPUDP调试工具&lt;/code&gt;文件夹中的&lt;code&gt;点我执行.exe&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&quot;/imgs/opinion/unlock-smart-tv-self-1.png&quot; alt=&quot;TCP调试工具&quot;&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;点击&lt;code&gt;创建连接&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&quot;/imgs/opinion/unlock-smart-tv-self-2.png&quot; alt=&quot;TCP调试工具&quot;&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;类型选择&lt;code&gt;TCP&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;目标IP填写刚才获取到的电视IP地址&lt;/li&gt;
&lt;li&gt;端口填写&lt;code&gt;8090&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;其他的不用修改&lt;/li&gt;
&lt;li&gt;确认填写正确后，点击&lt;code&gt;创建&lt;/code&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;ul&gt;
&lt;li&gt;点击&lt;code&gt;连接&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;如果没有出现问题，软件的界面将会变成下图式样：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/imgs/opinion/unlock-smart-tv-self-3.png&quot; alt=&quot;TCP调试工具&quot;&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;清除上面的发送框中所有文字并输入&lt;code&gt;start adbd&lt;/code&gt;，然后点击发送&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&quot;/imgs/opinion/unlock-smart-tv-self-4.png&quot; alt=&quot;TCP调试工具&quot;&gt;&lt;/p&gt;
&lt;p&gt;如果如图，在下面的接受框中出现了&lt;code&gt;ok&lt;/code&gt;，说明已经连接成功了~&lt;/p&gt;
&lt;h3 id=&quot;安装应用&quot;&gt;&lt;a href=&quot;#安装应用&quot; class=&quot;headerlink&quot; title=&quot;安装应用&quot;&gt;&lt;/a&gt;安装应用&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;将所有需要安装的APK文件都放到&lt;code&gt;一键安装软件&lt;/code&gt;文件夹中&lt;/li&gt;
&lt;li&gt;点击&lt;code&gt;双击运行一键安装.bat&lt;/code&gt;，按照提示输入IP地址并回车，如图：&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&quot;/imgs/opinion/unlock-smart-tv-self-5.png&quot; alt=&quot;TCP调试工具&quot;&gt;&lt;/p&gt;
&lt;p&gt;等到提示安装成功后，你就已经成功地在电视上安装上了想要的APP了~&lt;/p&gt;
&lt;h2 id=&quot;一键工具&quot;&gt;&lt;a href=&quot;#一键工具&quot; class=&quot;headerlink&quot; title=&quot;一键工具&quot;&gt;&lt;/a&gt;一键工具&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;方便快捷，但是会在电视上安装辅助工具&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;这个工具名为&lt;code&gt;TV盒子助手&lt;/code&gt;，官方网址为： &lt;a href=&quot;http://www.cnhezi.com/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://www.cnhezi.com/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;本质上，这个工具就是将前面的教程打包起来制作而成的，但是它会在电视上安装一个辅助工具，比较奇怪。&lt;/p&gt;
&lt;h1 id=&quot;推荐应用&quot;&gt;&lt;a href=&quot;#推荐应用&quot; class=&quot;headerlink&quot; title=&quot;推荐应用&quot;&gt;&lt;/a&gt;推荐应用&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://tv.qq.com/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;腾讯视频TV版&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://pd.youku.com/CIBN&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;CIBN合一影视&lt;em&gt;内容提供方：优酷&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://app.iqiyi.com/tv/player/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;银河·奇异果&lt;em&gt;内容提供方：爱奇艺&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&quot;附言&quot;&gt;&lt;a href=&quot;#附言&quot; class=&quot;headerlink&quot; title=&quot;附言&quot;&gt;&lt;/a&gt;附言&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;理论上来说，所有的安卓应用都可以进行安装。但是由于电视操控上的特殊性，没有对电视进行适配的应用非常难以使用，故不推荐进行安装。&lt;/li&gt;
&lt;li&gt;大部分智能电视的内存都比较小，故不能同时运行太多软件，所以建议打开应用前先退出别的应用否则容易出现卡顿现象。&lt;/li&gt;
&lt;li&gt;原本能用的APP现在不能用了是因为&lt;a href=&quot;http://news.xinhuanet.com/politics/2015-11/16/c_128434204.htm&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;广电总局全面封杀了电视盒子&lt;/a&gt;，一大批应用都被下架了，而且要求禁止提供APP安装功能。&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&quot;更新日志&quot;&gt;&lt;a href=&quot;#更新日志&quot; class=&quot;headerlink&quot; title=&quot;更新日志&quot;&gt;&lt;/a&gt;更新日志&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;2016年02月04日 初次发布&lt;/li&gt;
&lt;/ul&gt;
</content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h1&gt;&lt;p&gt;现在很多人都买了智能电视，但是出于种种你懂得原因，厂商通常都不允许用户自行安装自己想要的APP，比如腾讯视频，优酷视频之类的。本教程旨在突破这些限制，彻底解放智能电视的全部潜力。&lt;/p&gt;
    
    </summary>
    
      <category term="Opinion" scheme="https://xuanwo.org/categories/Opinion/"/>
    
    
      <category term="Software" scheme="https://xuanwo.org/tags/Software/"/>
    
  </entry>
  
  <entry>
    <title>如何识别真假链接？</title>
    <link href="https://xuanwo.org/2016/01/13/how-to-differ-invalid-link/"/>
    <id>https://xuanwo.org/2016/01/13/how-to-differ-invalid-link/</id>
    <published>2016-01-13T01:18:51.000Z</published>
    <updated>2016-07-14T14:10:22.678Z</updated>
    
    <content type="html">&lt;h1 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h1&gt;&lt;p&gt;前两天我的朋友圈被微信公开课活动的链接+截图刷屏，随后一大帮“业内人士”站出来说这个是盗号连接，只要点开，微信钱包和支付宝就会被盗。作为半个业内人士，我不能忍了，决定跟大家谈一谈如何识别真假链接。&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h1 id=&quot;域名是什么？&quot;&gt;&lt;a href=&quot;#域名是什么？&quot; class=&quot;headerlink&quot; title=&quot;域名是什么？&quot;&gt;&lt;/a&gt;域名是什么？&lt;/h1&gt;&lt;p&gt;首先我们来介绍一下域名：域名就是计算机在网络上的名字，免去人们需要记忆IP地址的困扰。&lt;br&gt;域名由若干个英文字母和数字组成，由&lt;code&gt;.&lt;/code&gt;分割成几份，形成一个网络上唯一的访问地址。&lt;/p&gt;
&lt;p&gt;以&lt;code&gt;https://support.weixin.qq.com&lt;/code&gt;为例：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;support.weixin.qq.com&lt;/code&gt;为三级域名&lt;/li&gt;
&lt;li&gt;&lt;code&gt;weixin.qq.com&lt;/code&gt;为二级域名&lt;/li&gt;
&lt;li&gt;&lt;code&gt;qq.com&lt;/code&gt;为一级域名&lt;/li&gt;
&lt;li&gt;&lt;code&gt;.com&lt;/code&gt;是顶级域名后缀&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&quot;链接是什么？&quot;&gt;&lt;a href=&quot;#链接是什么？&quot; class=&quot;headerlink&quot; title=&quot;链接是什么？&quot;&gt;&lt;/a&gt;链接是什么？&lt;/h1&gt;&lt;p&gt;然后我们来介绍一下&lt;code&gt;链接&lt;/code&gt;，也就是URL，全称为&lt;code&gt;统一资源定位符&lt;/code&gt;，我们也称它们为&lt;code&gt;网址&lt;/code&gt;。链接的标准格式一般如下：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;协议类型://服务器地址（必要时需加上端口号）/路径/文件名&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ul&gt;
&lt;li&gt;协议类型：常用的有http，https，ftp等&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;https意味着什么？&lt;br&gt;https又叫做&lt;code&gt;超文本传输安全协议&lt;/code&gt;，使用这个协议意味着你与这个网页的所有交互都是加密的，任何第三方都无法窥探你传输的信息（相对而言的，世上没有绝对的安全），经常被用于万维网上的交易支付和企业信息系统中敏感信息的传输。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;服务器地址：一般都是域名，有时为IP地址&lt;/li&gt;
&lt;li&gt;端口号：http预设的80端口以及https的443端口可以省略&lt;/li&gt;
&lt;li&gt;路径：以“/”字元区别路径中的每一个目录名称&lt;/li&gt;
&lt;li&gt;查询：GET模式的表单参数，以“?”字元为起点，每个参数以“&amp;amp;”隔开，再以“=”分开参数名称与资料，通常以UTF8的URL编码，避开字元冲突的问题&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&quot;如何分析一个链接？&quot;&gt;&lt;a href=&quot;#如何分析一个链接？&quot; class=&quot;headerlink&quot; title=&quot;如何分析一个链接？&quot;&gt;&lt;/a&gt;如何分析一个链接？&lt;/h1&gt;&lt;p&gt;比如说我们这次微信公开课活动的链接：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;https://support.weixin.qq.com/cgi-bin/xxxxxxxx&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;对于用户而言，有用的信息如下：协议采用https协议，域名为&lt;code&gt;support.weixin.qq.com&lt;/code&gt;。&lt;br&gt;采用https协议意味着你的信息是受到保护的，即使你使用了公共的wifi，同一wifi下的可能存在着的黑客也无法窥探你的私人信息。域名&lt;code&gt;support.weixin.qq.com&lt;/code&gt;传递了如下信息，这个网页是归属于&lt;code&gt;qq.com&lt;/code&gt;的，这从源头上保证了这一网页的安全性（如果腾讯没有内鬼的话）。&lt;/p&gt;
&lt;p&gt;下面我们来看看一个假的链接是怎么样的：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;亲爱的淘宝用户您好，恭喜您在本次活动中获得特等奖iPhone6s一部，请登陆 &lt;a href=&quot;http://www.taoba0.com&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://www.taoba0.com&lt;/a&gt; 领取您的奖品。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;这是一条诈骗短信，我们可以看到骗子给出了这样一个链接&lt;code&gt;http://www.taoba0.com&lt;/code&gt;，一定要看清楚是&lt;code&gt;taoba0&lt;/code&gt;而不是&lt;code&gt;taobao&lt;/code&gt;，然后你就应该明白，这是一条诈骗短信了。值得提醒的是，现在前端技术高度发达，克隆复制一个网页非常容易，所以在网站之间挑战时，一定要确认自己点击的链接是正确的链接，否则极有可能被相似的页面欺骗。&lt;/p&gt;
&lt;h1 id=&quot;如何保证安全？&quot;&gt;&lt;a href=&quot;#如何保证安全？&quot; class=&quot;headerlink&quot; title=&quot;如何保证安全？&quot;&gt;&lt;/a&gt;如何保证安全？&lt;/h1&gt;&lt;p&gt;从上一个链接的分析中，我们可以得出以下几个小技巧：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;尽可能地使用https协议进行访问&lt;/li&gt;
&lt;li&gt;认清域名，不轻信非官方域名的页面&lt;/li&gt;
&lt;li&gt;网站之间跳转时，确认自己点击的链接是否正确&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&quot;最后的寄语&quot;&gt;&lt;a href=&quot;#最后的寄语&quot; class=&quot;headerlink&quot; title=&quot;最后的寄语&quot;&gt;&lt;/a&gt;最后的寄语&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;请开启两部验证。国外的账户大多支持Google的两部验证，请启用这一功能。国内的账户的话，QQ请打开设备锁，QQ邮箱请打开独立密码。&lt;/li&gt;
&lt;li&gt;不要贪小便宜！不要贪小便宜！！不要贪小便宜！！！重要的事情说三遍。&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&quot;参考资料&quot;&gt;&lt;a href=&quot;#参考资料&quot; class=&quot;headerlink&quot; title=&quot;参考资料&quot;&gt;&lt;/a&gt;参考资料&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://zh.wikipedia.org/wiki/%E5%9F%9F%E5%90%8D&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;域名-维基百科&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://zh.wikipedia.org/wiki/%E7%BB%9F%E4%B8%80%E8%B5%84%E6%BA%90%E5%AE%9A%E4%BD%8D%E7%AC%A6&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;统一资源定位符-维基百科&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&quot;更新日志&quot;&gt;&lt;a href=&quot;#更新日志&quot; class=&quot;headerlink&quot; title=&quot;更新日志&quot;&gt;&lt;/a&gt;更新日志&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;2016年1月13日 首次发布&lt;/li&gt;
&lt;li&gt;2016年1月14日 更新了域名相关知识&lt;/li&gt;
&lt;/ul&gt;
</content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h1&gt;&lt;p&gt;前两天我的朋友圈被微信公开课活动的链接+截图刷屏，随后一大帮“业内人士”站出来说这个是盗号连接，只要点开，微信钱包和支付宝就会被盗。作为半个业内人士，我不能忍了，决定跟大家谈一谈如何识别真假链接。&lt;/p&gt;
    
    </summary>
    
      <category term="Daily" scheme="https://xuanwo.org/categories/Daily/"/>
    
    
      <category term="Software" scheme="https://xuanwo.org/tags/Software/"/>
    
      <category term="科普" scheme="https://xuanwo.org/tags/%E7%A7%91%E6%99%AE/"/>
    
  </entry>
  
  <entry>
    <title>VS2015连接Oracle数据库</title>
    <link href="https://xuanwo.org/2016/01/03/vs-oracle-11g/"/>
    <id>https://xuanwo.org/2016/01/03/vs-oracle-11g/</id>
    <published>2016-01-03T15:31:32.000Z</published>
    <updated>2016-07-14T14:10:22.686Z</updated>
    
    <content type="html">&lt;h1 id=&quot;开发环境&quot;&gt;&lt;a href=&quot;#开发环境&quot; class=&quot;headerlink&quot; title=&quot;开发环境&quot;&gt;&lt;/a&gt;开发环境&lt;/h1&gt;&lt;p&gt;宿主机：Win10 + VS2015 + ODP.Net for VS2015&lt;br&gt;虚拟机：Win7 + Oracle 11g + 桥接&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h1 id=&quot;配置ODP-Net&quot;&gt;&lt;a href=&quot;#配置ODP-Net&quot; class=&quot;headerlink&quot; title=&quot;配置ODP.Net&quot;&gt;&lt;/a&gt;配置ODP.Net&lt;/h1&gt;&lt;p&gt;首先下载 &lt;a href=&quot;http://www.oracle.com/technetwork/topics/dotnet/downloads/odacmsidownload-2745497.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Oracle Developer Tools for Visual Studio 2015&lt;/a&gt; ，下载此文件需要注册Oracle社区账号并接受相关的协议，此文件提供了以下组件：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Oracle Developer Tools for Visual Studio 12.1.0.2.4&lt;/li&gt;
&lt;li&gt;Oracle Data Provider for .NET 4 12.1.0.2.0&lt;/li&gt;
&lt;li&gt;Oracle Providers for ASP.NET 4 12.1.0.2.0&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;下载完成后运行MSI安装程序进行安装，安装完成后会自动注册VS2015的相关插件，重新启动VS2015后将会看到Oracle的相关命令，比如SQL *PLUS支持等。同时添加数据库时也能看到相应的选项。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;ODP.Net支持所有Oracle版本，因此下载时只需要注意VS的版本即可。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h1 id=&quot;配置tnsnames-ora&quot;&gt;&lt;a href=&quot;#配置tnsnames-ora&quot; class=&quot;headerlink&quot; title=&quot;配置tnsnames.ora&quot;&gt;&lt;/a&gt;配置tnsnames.ora&lt;/h1&gt;&lt;blockquote&gt;
&lt;p&gt;ODP.Net默认使用安装目录下的&lt;code&gt;tnsnames.ora&lt;/code&gt;，若安装目录在Program Files下，可能会遇到无权限等问题，此时使用管理员权限打开命令行，切换到对应目录并使用notepad编辑。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;复制服务器端的tnsnames.ora文件内容，或者自己手动编辑，格式如下：&lt;/p&gt;
&lt;figure class=&quot;highlight&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;数据源别名&amp;gt; =&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  (DESCRIPTION =&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    (ADDRESS = (PROTOCOL = TCP)(HOST = &amp;lt;主机名或IP&amp;gt;)(PORT = &amp;lt;端口号&amp;gt;))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    (CONNECT_DATA =&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      (SERVER = DEDICATED)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      (SERVICE_NAME = &amp;lt;数据库服务名&amp;gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    )&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  )&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h1 id=&quot;添加数据库&quot;&gt;&lt;a href=&quot;#添加数据库&quot; class=&quot;headerlink&quot; title=&quot;添加数据库&quot;&gt;&lt;/a&gt;添加数据库&lt;/h1&gt;&lt;p&gt;打开&lt;code&gt;工具&lt;/code&gt;-&lt;code&gt;连接到数据库&lt;/code&gt;，数据源修改为&lt;code&gt;Oracle数据库&lt;/code&gt;下的&lt;code&gt;ODP.NET,托管驱动程序&lt;/code&gt;，然后点击&lt;code&gt;确定&lt;/code&gt;，打开&lt;code&gt;添加连接&lt;/code&gt;窗口。&lt;br&gt;&lt;img src=&quot;/imgs/develop/add-database.png&quot; alt=&quot;添加连接&quot;&gt;&lt;br&gt;填写用户名，密码并选择数据源，然后测试连接，成功的话说明已经连通，点击确定即可。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;使用虚拟机搭建数据库的额外Tips&lt;br&gt;根据某网友分析，Oracle的监听器在通过1521端口连接后，会开启另外一个新的随机端口进行数据通讯，因此使用NAT方式虚拟网卡可能会导致连接失败。这种情况下，请使用桥接方式虚拟网卡，并在&lt;code&gt;net manager&lt;/code&gt;中将&lt;code&gt;loaclhost&lt;/code&gt;修改为虚拟机当前的IP。重启监听服务后，再试。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h1 id=&quot;连接数据库并使用&quot;&gt;&lt;a href=&quot;#连接数据库并使用&quot; class=&quot;headerlink&quot; title=&quot;连接数据库并使用&quot;&gt;&lt;/a&gt;连接数据库并使用&lt;/h1&gt;&lt;h2 id=&quot;连接数据库&quot;&gt;&lt;a href=&quot;#连接数据库&quot; class=&quot;headerlink&quot; title=&quot;连接数据库&quot;&gt;&lt;/a&gt;连接数据库&lt;/h2&gt;&lt;figure class=&quot;highlight vb&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;Dim&lt;/span&gt; oradb &lt;span class=&quot;keyword&quot;&gt;As&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;String&lt;/span&gt; = &lt;span class=&quot;string&quot;&gt;&quot;User ID=system;Password=123456;Data Source=lol&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;Dim&lt;/span&gt; conn &lt;span class=&quot;keyword&quot;&gt;As&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;New&lt;/span&gt; OracleConnection(oradb)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;conn.Open()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;Dim&lt;/span&gt; sql &lt;span class=&quot;keyword&quot;&gt;As&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;String&lt;/span&gt; = &lt;span class=&quot;string&quot;&gt;&quot;create table xxx&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;Dim&lt;/span&gt; sqlCom &lt;span class=&quot;keyword&quot;&gt;As&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;New&lt;/span&gt; OracleCommand&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;sqlCom.CommandText = sql&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;sqlCom.Connection = conn&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;sqlCom.ExecuteNonQuery()&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;查询数据&quot;&gt;&lt;a href=&quot;#查询数据&quot; class=&quot;headerlink&quot; title=&quot;查询数据&quot;&gt;&lt;/a&gt;查询数据&lt;/h2&gt;&lt;p&gt;成功配置数据源之后，只需要向界面上拖动&lt;code&gt;DataGridView&lt;/code&gt;，并进行相关配置，选择自己需要的表即可。&lt;/p&gt;
&lt;h2 id=&quot;插入图片的正确姿势&quot;&gt;&lt;a href=&quot;#插入图片的正确姿势&quot; class=&quot;headerlink&quot; title=&quot;插入图片的正确姿势&quot;&gt;&lt;/a&gt;插入图片的正确姿势&lt;/h2&gt;&lt;p&gt;图片作为二进制数据无法直接拼凑出SQL命令，我们需要使用&lt;code&gt;OracleCommand&lt;/code&gt;自带的&lt;code&gt;Parameters&lt;/code&gt;功能。在SQL命令中用&lt;code&gt;:photo&lt;/code&gt;来代表一个参量，然后使用&lt;/p&gt;
&lt;figure class=&quot;highlight vb&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;sqlCom.Parameters.Add(&lt;span class=&quot;string&quot;&gt;&quot;photo&quot;&lt;/span&gt;, OracleDbType.Blob, imgData.Length)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;来分别指定这个参量的类型和所占空间大小&lt;/p&gt;
&lt;p&gt;最后使用&lt;/p&gt;
&lt;figure class=&quot;highlight vb&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;sqlCom.Parameters(&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;).Value = imgData&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;来指定这个参量的值。&lt;/p&gt;
&lt;p&gt;整个插入图片过程的代码如下：&lt;/p&gt;
&lt;figure class=&quot;highlight vb&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;Dim&lt;/span&gt; conn &lt;span class=&quot;keyword&quot;&gt;As&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;New&lt;/span&gt; OracleConnection(oradb)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;Dim&lt;/span&gt; imgData(&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;) &lt;span class=&quot;keyword&quot;&gt;As&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;Byte&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;Dim&lt;/span&gt; ms &lt;span class=&quot;keyword&quot;&gt;As&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;New&lt;/span&gt; System.IO.MemoryStream&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;PictureBox1.BackgroundImage.Save(ms, PictureBox1.BackgroundImage.RawFormat)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;ReDim&lt;/span&gt; imgData(ms.Length - &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;ms.Read(imgData, &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;, ms.Length)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;ms.Close()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;conn.Open()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;Dim&lt;/span&gt; sql &lt;span class=&quot;keyword&quot;&gt;As&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;String&lt;/span&gt; = &lt;span class=&quot;string&quot;&gt;&quot;insert into hero values&quot;&lt;/span&gt; &amp;amp; &lt;span class=&quot;string&quot;&gt;&quot;(&quot;&lt;/span&gt; &amp;amp; TextBox1.&lt;span class=&quot;keyword&quot;&gt;Text&lt;/span&gt; &amp;amp; &lt;span class=&quot;string&quot;&gt;&quot;:photo&quot;&lt;/span&gt; &amp;amp; &lt;span class=&quot;string&quot;&gt;&quot;)&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;Dim&lt;/span&gt; sqlCom &lt;span class=&quot;keyword&quot;&gt;As&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;New&lt;/span&gt; OracleCommand&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;sqlCom.CommandText = sql&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;sqlCom.Connection = conn&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;sqlCom.Parameters.Add(&lt;span class=&quot;string&quot;&gt;&quot;photo&quot;&lt;/span&gt;, OracleDbType.Blob, imgData.Length)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;sqlCom.Parameters(&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;).Value = imgData&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;sqlCom.ExecuteNonQuery()&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h1 id=&quot;常见错误&quot;&gt;&lt;a href=&quot;#常见错误&quot; class=&quot;headerlink&quot; title=&quot;常见错误&quot;&gt;&lt;/a&gt;常见错误&lt;/h1&gt;&lt;h2 id=&quot;column-not-allowed-here&quot;&gt;&lt;a href=&quot;#column-not-allowed-here&quot; class=&quot;headerlink&quot; title=&quot;column not allowed here&quot;&gt;&lt;/a&gt;column not allowed here&lt;/h2&gt;&lt;p&gt;数据类型不符，检查对应项目数据类型是否正确。&lt;/p&gt;
&lt;h2 id=&quot;missing-comma&quot;&gt;&lt;a href=&quot;#missing-comma&quot; class=&quot;headerlink&quot; title=&quot;missing comma&quot;&gt;&lt;/a&gt;missing comma&lt;/h2&gt;&lt;p&gt;命令格式不对，检查一下自己的SQL命令是否有错误，特别是在有字符串的时候，需要使用&lt;code&gt;&amp;quot;&amp;quot;&lt;/code&gt;来代表一个字符串中的&lt;code&gt;&amp;quot;&lt;/code&gt;。&lt;/p&gt;
&lt;h2 id=&quot;identifier-is-too-long&quot;&gt;&lt;a href=&quot;#identifier-is-too-long&quot; class=&quot;headerlink&quot; title=&quot;identifier is too long&quot;&gt;&lt;/a&gt;identifier is too long&lt;/h2&gt;&lt;p&gt;标识符过长（不得超过30字符），不是非常明白原因，不过我取消掉insert命令中指定位置的部分之后，这个错误消失了。&lt;/p&gt;
&lt;h2 id=&quot;missing-INTO-keyword&quot;&gt;&lt;a href=&quot;#missing-INTO-keyword&quot; class=&quot;headerlink&quot; title=&quot;missing INTO keyword&quot;&gt;&lt;/a&gt;missing INTO keyword&lt;/h2&gt;&lt;p&gt;缺少into关键字（手滑打成了inte），检查一下自己的SQL命令是否有错误。&lt;/p&gt;
&lt;h2 id=&quot;cannot-insert-NULL-into-“SYSTEM”-”HERO”-”HEROCATEGORYID”&quot;&gt;&lt;a href=&quot;#cannot-insert-NULL-into-“SYSTEM”-”HERO”-”HEROCATEGORYID”&quot; class=&quot;headerlink&quot; title=&quot;cannot insert NULL into (“SYSTEM”.”HERO”.”HEROCATEGORYID”)&quot;&gt;&lt;/a&gt;cannot insert NULL into (“SYSTEM”.”HERO”.”HEROCATEGORYID”)&lt;/h2&gt;&lt;p&gt;这些项都指定了非0值，故不能不赋值，为对应项目赋值即可。&lt;/p&gt;
&lt;h1 id=&quot;更新日志&quot;&gt;&lt;a href=&quot;#更新日志&quot; class=&quot;headerlink&quot; title=&quot;更新日志&quot;&gt;&lt;/a&gt;更新日志&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;2016年01月03日 初步完成&lt;/li&gt;
&lt;/ul&gt;
</content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;开发环境&quot;&gt;&lt;a href=&quot;#开发环境&quot; class=&quot;headerlink&quot; title=&quot;开发环境&quot;&gt;&lt;/a&gt;开发环境&lt;/h1&gt;&lt;p&gt;宿主机：Win10 + VS2015 + ODP.Net for VS2015&lt;br&gt;虚拟机：Win7 + Oracle 11g + 桥接&lt;/p&gt;
    
    </summary>
    
      <category term="Develop" scheme="https://xuanwo.org/categories/Develop/"/>
    
    
      <category term="Database" scheme="https://xuanwo.org/tags/Database/"/>
    
      <category term="Oracle" scheme="https://xuanwo.org/tags/Oracle/"/>
    
      <category term="VB" scheme="https://xuanwo.org/tags/VB/"/>
    
  </entry>
  
  <entry>
    <title>最佳跨平台PDF阅读解决方案</title>
    <link href="https://xuanwo.org/2015/12/23/best-pdf-read-solution/"/>
    <id>https://xuanwo.org/2015/12/23/best-pdf-read-solution/</id>
    <published>2015-12-23T16:15:20.000Z</published>
    <updated>2016-07-14T14:10:22.678Z</updated>
    
    <content type="html">&lt;h1 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h1&gt;&lt;p&gt;最近因为学习需要，要大量阅读纯文字的PDF文档。然后我惊讶地发现市场上居然没有哪家提供一套完整可用的跨平台PDF阅读解决方案，于是我在尝试了市面几乎所有叫得上名字的各类阅读器之后，形成了一套自己的跨平台PDF阅读解决方案。本文记录了这套方案的详细内容，希望会有所益处。&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h1 id=&quot;目标&quot;&gt;&lt;a href=&quot;#目标&quot; class=&quot;headerlink&quot; title=&quot;目标&quot;&gt;&lt;/a&gt;目标&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;跨平台（目前支持Windows和Android）&lt;/li&gt;
&lt;li&gt;阅读记录同步&lt;/li&gt;
&lt;li&gt;支持标准PDF的批注和高亮等功能&lt;/li&gt;
&lt;li&gt;对PDF文件管理方便&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&quot;思路&quot;&gt;&lt;a href=&quot;#思路&quot; class=&quot;headerlink&quot; title=&quot;思路&quot;&gt;&lt;/a&gt;思路&lt;/h1&gt;&lt;p&gt;标准PDF的批注和高亮功能是内嵌在PDF文件中的，只要同步了PDF文件，也就同步了所有在PDF文件上的批注和高亮。因此这个问题很大程度上就变成了解决跨平台文件双向同步问题。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;跨平台双向同步在很多人看来是一个已经被Dropbox以及Google Drive解决了问题，但是实际上，它们在PC和移动端的行为是不一样的。PC端是完整的双向同步，而在移动端，为了节省流量和空间，它们都是提供了一个File list，你必须要自己下载指定文件。不仅如此，这个下载下来的文件大多是Read-Only的，用阅读器批注之后，你会发现这个文件无法保存，这样的话，PDF跨平台批注就无从谈起。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h1 id=&quot;解决方案&quot;&gt;&lt;a href=&quot;#解决方案&quot; class=&quot;headerlink&quot; title=&quot;解决方案&quot;&gt;&lt;/a&gt;解决方案&lt;/h1&gt;&lt;p&gt;按照上面思路中的讨论，我在每一个平台上的解决方案都分成两个部分，第一是解决PDF阅读、批注问题，第二是解决PDF文件双向同步问题。&lt;/p&gt;
&lt;h2 id=&quot;Windows&quot;&gt;&lt;a href=&quot;#Windows&quot; class=&quot;headerlink&quot; title=&quot;Windows&quot;&gt;&lt;/a&gt;Windows&lt;/h2&gt;&lt;h3 id=&quot;Goodsync&quot;&gt;&lt;a href=&quot;#Goodsync&quot; class=&quot;headerlink&quot; title=&quot;Goodsync&quot;&gt;&lt;/a&gt;Goodsync&lt;/h3&gt;&lt;p&gt;&lt;img src=&quot;/imgs/opinion/goodsync.png&quot; alt=&quot;Goodsync&quot;&gt;&lt;br&gt;&lt;a href=&quot;http://www.goodsync.com/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;&lt;strong&gt;Goodsync&lt;/strong&gt;&lt;/a&gt;是一款非常强大的同步工具，我们通过它来提供本地到Google Drive的双向同步功能。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;如果通过SS艹墙，配置Google Drive时请勾选&lt;code&gt;基于WinInet&lt;/code&gt;，如图：&lt;img src=&quot;/imgs/opinion/goodsync-proxy-setting.png&quot; alt=&quot;Goodsync Proxy Setting&quot;&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&quot;Foxit-Reader&quot;&gt;&lt;a href=&quot;#Foxit-Reader&quot; class=&quot;headerlink&quot; title=&quot;Foxit Reader&quot;&gt;&lt;/a&gt;Foxit Reader&lt;/h3&gt;&lt;p&gt;&lt;img src=&quot;/imgs/opinion/foxit-reader.png&quot; alt=&quot;Foxit Reader&quot;&gt;&lt;br&gt;&lt;a href=&quot;http://www.foxitsoftware.cn/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;&lt;strong&gt;Foxit Reader&lt;/strong&gt;&lt;/a&gt;，也就是福昕阅读器，不多说了，新版的界面还是可以的。（尽管我觉得颜值没有Adobe Reader DC高）&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;为什么不选Adobe？Adobe最新版本的批注功能在特定的PDF上好像有点问题，我尝试了几个都不能正常保存，总是提示错误110，无奈放弃。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;Android&quot;&gt;&lt;a href=&quot;#Android&quot; class=&quot;headerlink&quot; title=&quot;Android&quot;&gt;&lt;/a&gt;Android&lt;/h2&gt;&lt;h3 id=&quot;Flodersync&quot;&gt;&lt;a href=&quot;#Flodersync&quot; class=&quot;headerlink&quot; title=&quot;Flodersync&quot;&gt;&lt;/a&gt;Flodersync&lt;/h3&gt;&lt;p&gt;&lt;img src=&quot;/imgs/opinion/Flodersync.png&quot; alt=&quot;Flodersync&quot;&gt;&lt;br&gt;&lt;a href=&quot;https://play.google.com/store/apps/details?id=dk.tacit.android.foldersync.lite&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;&lt;strong&gt;Flodersync&lt;/strong&gt;&lt;/a&gt;是一款基于安卓平台的非常棒的一款应用，我们通过它来实现安卓平台的双向同步。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;开启双向同步请取消勾选&lt;code&gt;不同步删除&lt;/code&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&quot;Moon&quot;&gt;&lt;a href=&quot;#Moon&quot; class=&quot;headerlink&quot; title=&quot;Moon+&quot;&gt;&lt;/a&gt;Moon+&lt;/h3&gt;&lt;p&gt;&lt;img src=&quot;/imgs/opinion/Moon.png&quot; alt=&quot;Moon+&quot;&gt;&lt;br&gt;&lt;a href=&quot;https://play.google.com/store/apps/details?id=com.flyersoft.moonreader&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;&lt;strong&gt;Moon+&lt;/strong&gt;&lt;/a&gt;，静读天下，安卓平台上首屈一指的阅读器，支持格式众多，速度流畅，除了免费版有些功能阉割和广告之外，没有别的问题。&lt;/p&gt;
&lt;h1 id=&quot;更新日志&quot;&gt;&lt;a href=&quot;#更新日志&quot; class=&quot;headerlink&quot; title=&quot;更新日志&quot;&gt;&lt;/a&gt;更新日志&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;2015年12月23日 初始发布&lt;/li&gt;
&lt;/ul&gt;
</content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h1&gt;&lt;p&gt;最近因为学习需要，要大量阅读纯文字的PDF文档。然后我惊讶地发现市场上居然没有哪家提供一套完整可用的跨平台PDF阅读解决方案，于是我在尝试了市面几乎所有叫得上名字的各类阅读器之后，形成了一套自己的跨平台PDF阅读解决方案。本文记录了这套方案的详细内容，希望会有所益处。&lt;/p&gt;
    
    </summary>
    
      <category term="Opinion" scheme="https://xuanwo.org/categories/Opinion/"/>
    
    
      <category term="Read" scheme="https://xuanwo.org/tags/Read/"/>
    
      <category term="Software" scheme="https://xuanwo.org/tags/Software/"/>
    
      <category term="Windows" scheme="https://xuanwo.org/tags/Windows/"/>
    
      <category term="Android" scheme="https://xuanwo.org/tags/Android/"/>
    
  </entry>
  
  <entry>
    <title>在线视频下载完整解决方案</title>
    <link href="https://xuanwo.org/2015/12/18/online-video-download-solution/"/>
    <id>https://xuanwo.org/2015/12/18/online-video-download-solution/</id>
    <published>2015-12-18T12:49:49.000Z</published>
    <updated>2016-07-14T14:10:22.682Z</updated>
    
    <content type="html">&lt;h1 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h1&gt;&lt;p&gt;因为学习需要，产生了一个这样的需求：要从Youtube上批量下载视频。自然，出于方便使用的角度来看，音画不能分离，最好带有对应的字幕。一番搜罗之后，我找到了基于Python的开源产品： &lt;a href=&quot;https://rg3.github.io/youtube-dl/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;youtube-dl&lt;/a&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;值得一提的是，youtube-dl不仅仅能下载youtube上的视频，它支持的视频链接种类多达700+种，几乎囊括了所有在线视频网站，列表参见&lt;a href=&quot;https://rg3.github.io/youtube-dl/supportedsites.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;此处&lt;/a&gt;。让我不由得感慨开源的力量。除此以外，某些不存在的网址需要自备梯子，不再赘述。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h1 id=&quot;获取&quot;&gt;&lt;a href=&quot;#获取&quot; class=&quot;headerlink&quot; title=&quot;获取&quot;&gt;&lt;/a&gt;获取&lt;/h1&gt;&lt;blockquote&gt;
&lt;p&gt;checked on 2015-12-18&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;Windows&quot;&gt;&lt;a href=&quot;#Windows&quot; class=&quot;headerlink&quot; title=&quot;Windows&quot;&gt;&lt;/a&gt;Windows&lt;/h2&gt;&lt;p&gt;Windows用户可以使用已经打包好的可执行程序：&lt;a href=&quot;https://yt-dl.org/downloads/2015.12.13/youtube-dl.exe&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;下载链接&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;UNIX-like&quot;&gt;&lt;a href=&quot;#UNIX-like&quot; class=&quot;headerlink&quot; title=&quot;UNIX like&quot;&gt;&lt;/a&gt;UNIX like&lt;/h2&gt;&lt;p&gt;类UNIX系统的用户可以使用curl或者wget来获取可执行文件&lt;/p&gt;
&lt;h3 id=&quot;curl&quot;&gt;&lt;a href=&quot;#curl&quot; class=&quot;headerlink&quot; title=&quot;curl&quot;&gt;&lt;/a&gt;curl&lt;/h3&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;sudo curl https://yt-dl.org/downloads/2015.12.13/youtube-dl -o /usr/&lt;span class=&quot;built_in&quot;&gt;local&lt;/span&gt;/bin/youtube-dl&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;sudo chmod a+rx /usr/&lt;span class=&quot;built_in&quot;&gt;local&lt;/span&gt;/bin/youtube-dl&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;wget&quot;&gt;&lt;a href=&quot;#wget&quot; class=&quot;headerlink&quot; title=&quot;wget&quot;&gt;&lt;/a&gt;wget&lt;/h3&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;sudo wget https://yt-dl.org/downloads/2015.12.13/youtube-dl -O /usr/&lt;span class=&quot;built_in&quot;&gt;local&lt;/span&gt;/bin/youtube-dl&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;sudo chmod a+rx /usr/&lt;span class=&quot;built_in&quot;&gt;local&lt;/span&gt;/bin/youtube-dl&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;Homebrew&quot;&gt;&lt;a href=&quot;#Homebrew&quot; class=&quot;headerlink&quot; title=&quot;Homebrew&quot;&gt;&lt;/a&gt;Homebrew&lt;/h2&gt;&lt;p&gt;Homebrew用户可以使用如下命令进行安装：&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;brew install youtube-dl&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h2 id=&quot;pip&quot;&gt;&lt;a href=&quot;#pip&quot; class=&quot;headerlink&quot; title=&quot;pip&quot;&gt;&lt;/a&gt;pip&lt;/h2&gt;&lt;p&gt;同样的，你也可以使用pip来安装它。&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;sudo pip install --upgrade youtube_dl&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h2 id=&quot;Source&quot;&gt;&lt;a href=&quot;#Source&quot; class=&quot;headerlink&quot; title=&quot;Source&quot;&gt;&lt;/a&gt;Source&lt;/h2&gt;&lt;p&gt;自然，你可以选择下载源代码以及docs，链接&lt;a href=&quot;https://yt-dl.org/downloads/2015.12.13/youtube-dl-2015.12.13.tar.gz&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;见此&lt;/a&gt;&lt;/p&gt;
&lt;h1 id=&quot;使用&quot;&gt;&lt;a href=&quot;#使用&quot; class=&quot;headerlink&quot; title=&quot;使用&quot;&gt;&lt;/a&gt;使用&lt;/h1&gt;&lt;h2 id=&quot;简易&quot;&gt;&lt;a href=&quot;#简易&quot; class=&quot;headerlink&quot; title=&quot;简易&quot;&gt;&lt;/a&gt;简易&lt;/h2&gt;&lt;p&gt;最简单的方式就是直接加上视频链接地址就可以自动下载到当前文件夹：&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;youtube-dl.exe url&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h2 id=&quot;使用代理&quot;&gt;&lt;a href=&quot;#使用代理&quot; class=&quot;headerlink&quot; title=&quot;使用代理&quot;&gt;&lt;/a&gt;使用代理&lt;/h2&gt;&lt;p&gt;以常见的ss代理为例：&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;youtube-dl.exe url --proxy http://127.0.0.1:1080&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;有一个坑点在于这个参数只支持HTTP/HTTPS代理，所以本地跑SS的话，需要在前面加上一个HTTP的前缀，否则代理不会正常工作。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;下载列表&quot;&gt;&lt;a href=&quot;#下载列表&quot; class=&quot;headerlink&quot; title=&quot;下载列表&quot;&gt;&lt;/a&gt;下载列表&lt;/h2&gt;&lt;p&gt;以Youtube Playlist为例：&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;youtube-dl.exe --yes-playlist https://www.youtube.com/playlist?list=PLZlv_N0_O1gZg3dTMetmsfm_s4lb4-Tg0 --proxy http://127.0.0.1:1080&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h2 id=&quot;下载字幕&quot;&gt;&lt;a href=&quot;#下载字幕&quot; class=&quot;headerlink&quot; title=&quot;下载字幕&quot;&gt;&lt;/a&gt;下载字幕&lt;/h2&gt;&lt;p&gt;以Youtube Playlist为例，自动生成字幕并指定下载中文和英文字幕：&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;youtube-dl.exe --yes-playlist https://www.youtube.com/playlist?list=PLZlv_N0_O1gZg3dTMetmsfm_s4lb4-Tg0 --proxy http://127.0.0.1:1080 --write-auto-sub --sub-lang en,cn&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;字幕相关设定：&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;--write-sub                      写字幕文件&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;--write-auto-sub                 写入自动生成的字幕文件 (YouTube only)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;--all-subs                       下载所有可提供的字幕&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;--list-subs                      列出当前视频支持的所有字幕&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;--sub-format FORMAT              指定字幕格式，比如 &lt;span class=&quot;string&quot;&gt;&quot;srt&quot;&lt;/span&gt; 或者 &lt;span class=&quot;string&quot;&gt;&quot;ass/srt/best&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;--sub-lang LANGS                 指定字幕语言，用`,`分隔, 使用 IETF 语言标记，比如 &lt;span class=&quot;string&quot;&gt;&#39;en,pt&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;IETF语言标记参见&lt;a href=&quot;http://www.ietf.org/assignments/language-subtag-registry/language-subtag-registry&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;此处&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h1 id=&quot;更新日志&quot;&gt;&lt;a href=&quot;#更新日志&quot; class=&quot;headerlink&quot; title=&quot;更新日志&quot;&gt;&lt;/a&gt;更新日志&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;2015年12月18日 首次发布&lt;/li&gt;
&lt;/ul&gt;
</content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h1&gt;&lt;p&gt;因为学习需要，产生了一个这样的需求：要从Youtube上批量下载视频。自然，出于方便使用的角度来看，音画不能分离，最好带有对应的字幕。一番搜罗之后，我找到了基于Python的开源产品： &lt;a href=&quot;https://rg3.github.io/youtube-dl/&quot;&gt;youtube-dl&lt;/a&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;值得一提的是，youtube-dl不仅仅能下载youtube上的视频，它支持的视频链接种类多达700+种，几乎囊括了所有在线视频网站，列表参见&lt;a href=&quot;https://rg3.github.io/youtube-dl/supportedsites.html&quot;&gt;此处&lt;/a&gt;。让我不由得感慨开源的力量。除此以外，某些不存在的网址需要自备梯子，不再赘述。&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="Opinion" scheme="https://xuanwo.org/categories/Opinion/"/>
    
    
      <category term="Software" scheme="https://xuanwo.org/tags/Software/"/>
    
      <category term="Video" scheme="https://xuanwo.org/tags/Video/"/>
    
  </entry>
  
  <entry>
    <title>断电也能上网！——路由器改造记</title>
    <link href="https://xuanwo.org/2015/11/27/surf-with-poweroff/"/>
    <id>https://xuanwo.org/2015/11/27/surf-with-poweroff/</id>
    <published>2015-11-27T01:34:33.000Z</published>
    <updated>2016-07-14T14:10:22.682Z</updated>
    
    <content type="html">&lt;h1 id=&quot;介绍&quot;&gt;&lt;a href=&quot;#介绍&quot; class=&quot;headerlink&quot; title=&quot;介绍&quot;&gt;&lt;/a&gt;介绍&lt;/h1&gt;&lt;p&gt;前两天我对我们宿舍的路由器进行了小小的改造，使得我们在断电之后也能照常上网。原理非常简单：就是使用充电宝来给路由器供电——因为我们墙上的网口是不会断电的，所以只要解决了路由器没有电的问题，就可以解决断网问题。路由器要求的输入电压为5V，电流为0.3A，恰好跟我们常用的充电宝是一致的，淘宝买一根USB转DV线成功解决问题。&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h1 id=&quot;供电方案&quot;&gt;&lt;a href=&quot;#供电方案&quot; class=&quot;headerlink&quot; title=&quot;供电方案&quot;&gt;&lt;/a&gt;供电方案&lt;/h1&gt;&lt;p&gt;我们宿舍现在的路由器供电方案是这样的：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;充电器（A型USB接口）&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        ||&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;充电宝（Micro B型USB接口）&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    |内部电路|&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;充电宝（A型USB接口）&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        ||&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;路由器（DV接口）&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h1 id=&quot;达成效果&quot;&gt;&lt;a href=&quot;#达成效果&quot; class=&quot;headerlink&quot; title=&quot;达成效果&quot;&gt;&lt;/a&gt;达成效果&lt;/h1&gt;&lt;p&gt;现在达成的效果是：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;白天：充电器给充电宝充电，充电宝起到了稳流的作用&lt;/li&gt;
&lt;li&gt;晚上：充电宝为路由器供电&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;优点&quot;&gt;&lt;a href=&quot;#优点&quot; class=&quot;headerlink&quot; title=&quot;优点&quot;&gt;&lt;/a&gt;优点&lt;/h2&gt;&lt;p&gt;自动循环，自动切换（切换的速度很快，撸啊撸都不会掉线哦~）&lt;/p&gt;
&lt;h2 id=&quot;缺点&quot;&gt;&lt;a href=&quot;#缺点&quot; class=&quot;headerlink&quot; title=&quot;缺点&quot;&gt;&lt;/a&gt;缺点&lt;/h2&gt;&lt;p&gt;充电宝损耗大，不知道我这个已经用了一年的充电宝能坚持多久= =&lt;/p&gt;
&lt;h1 id=&quot;硬件要求&quot;&gt;&lt;a href=&quot;#硬件要求&quot; class=&quot;headerlink&quot; title=&quot;硬件要求&quot;&gt;&lt;/a&gt;硬件要求&lt;/h1&gt;&lt;blockquote&gt;
&lt;p&gt;主流充电宝的电压均为5V1A，有部分充电宝为iPad提供了2A的输出接口，加上充电宝自动限流的功能，所有充电宝这一部分问题不大。&lt;br&gt;路由器很显然必须为5V，如果是12V的路由器还需要另外购买升压模块，电流问题不大，充电宝基本都带得动。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h1 id=&quot;辟谣&quot;&gt;&lt;a href=&quot;#辟谣&quot; class=&quot;headerlink&quot; title=&quot;辟谣&quot;&gt;&lt;/a&gt;辟谣&lt;/h1&gt;&lt;h2 id=&quot;用充电宝网速是不是会变慢？&quot;&gt;&lt;a href=&quot;#用充电宝网速是不是会变慢？&quot; class=&quot;headerlink&quot; title=&quot;用充电宝网速是不是会变慢？&quot;&gt;&lt;/a&gt;用充电宝网速是不是会变慢？&lt;/h2&gt;&lt;p&gt;实测： &lt;strong&gt;不会&lt;/strong&gt;&lt;br&gt;相反的，由于断电之后同时上网的设备数量减少，在延时，最高速率等参数上还有着更加优秀的表现。&lt;/p&gt;
&lt;h2 id=&quot;用充电宝会导致无法链接Wifi？&quot;&gt;&lt;a href=&quot;#用充电宝会导致无法链接Wifi？&quot; class=&quot;headerlink&quot; title=&quot;用充电宝会导致无法链接Wifi？&quot;&gt;&lt;/a&gt;用充电宝会导致无法链接Wifi？&lt;/h2&gt;&lt;p&gt;舍友反馈的，我只说一句： 不要相信玄学。&lt;br&gt;路由器换一种供电方式会影响到你电脑上的无线网卡的信号发送？这种说法，我肯定是不相信的- -。&lt;/p&gt;
&lt;h1 id=&quot;更新日志&quot;&gt;&lt;a href=&quot;#更新日志&quot; class=&quot;headerlink&quot; title=&quot;更新日志&quot;&gt;&lt;/a&gt;更新日志&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;2015年11月27日 完成初稿&lt;/li&gt;
&lt;/ul&gt;
</content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;介绍&quot;&gt;&lt;a href=&quot;#介绍&quot; class=&quot;headerlink&quot; title=&quot;介绍&quot;&gt;&lt;/a&gt;介绍&lt;/h1&gt;&lt;p&gt;前两天我对我们宿舍的路由器进行了小小的改造，使得我们在断电之后也能照常上网。原理非常简单：就是使用充电宝来给路由器供电——因为我们墙上的网口是不会断电的，所以只要解决了路由器没有电的问题，就可以解决断网问题。路由器要求的输入电压为5V，电流为0.3A，恰好跟我们常用的充电宝是一致的，淘宝买一根USB转DV线成功解决问题。&lt;/p&gt;
    
    </summary>
    
      <category term="Daily" scheme="https://xuanwo.org/categories/Daily/"/>
    
    
      <category term="Hardware" scheme="https://xuanwo.org/tags/Hardware/"/>
    
  </entry>
  
</feed>
